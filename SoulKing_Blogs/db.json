{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/top.jpg","path":"img/top.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/sk.jpg","path":"img/sk.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_data/_config.yml","hash":"64936c4c6872ce8fece6ca5799c1f8b50069e666","modified":1693374403355},{"_id":"source/_posts/Appium基础学习.md","hash":"9eea0b66fb9fbe63c5ec7ffc28eb4a78ddd67ae0","modified":1695095811007},{"_id":"source/_posts/Badboy介绍.md","hash":"c12d0ac14075ed79fefd89f31e80f3562b360c6c","modified":1695103403594},{"_id":"source/_posts/Badboy录制.md","hash":"187df3072b53164ed5fc0e8d4a17410534d35630","modified":1695104035848},{"_id":"source/_posts/ChatGTP搭建.md","hash":"70df6796ad082b3fb74dbb2440931841e09d5626","modified":1694412751306},{"_id":"source/_posts/Github学习.md","hash":"a52eeb55e28e54b03d3c74588620c99198bbcfa1","modified":1693374942034},{"_id":"source/_posts/JMeter学习.md","hash":"d3b0a3f9a61d56fdb85e4b18760b0a88af67339e","modified":1695095748942},{"_id":"source/_posts/JMeter分布式测试.md","hash":"9095f4343242c399927b6c986eb593c982872016","modified":1695280293471},{"_id":"source/_posts/JMeter常用目录介绍-1.md","hash":"723d4d314c21cc256e20398ba247843ba7c3601a","modified":1695095778792},{"_id":"source/_posts/JMeter插件管理-1.md","hash":"7bc6e7b966511c61632e5127fd9543da66c3f44c","modified":1695095792744},{"_id":"source/_posts/JMeter的安装和启动-1.md","hash":"69a8cdbaf474b9ae2270be67447faa2e480d4c48","modified":1695095764950},{"_id":"source/_posts/Nginx-负载均衡.md","hash":"31293a67bdf4663a5d29f7af5c7622e513d5bf79","modified":1694505531801},{"_id":"source/_posts/Selenium基础学习.md","hash":"41634a7dbe8d09887ed2b42929aed3fb0f1a6107","modified":1695095730414},{"_id":"source/_posts/接口测试学习.md","hash":"f75256426ede1a463f96b87963fedcb1af0d9ac6","modified":1695095713165},{"_id":"source/categories/index.md","hash":"77a3245cec71420c035271cdf79899e6bb2477dd","modified":1693373040686},{"_id":"source/_posts/服务器部署系统-nginx.md","hash":"b8b5c837188799d9437ddb3b38d27c42f955ca82","modified":1694581336034},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑.md","hash":"1075aebee3d3f9f5c36fdb99d0ea10cd9b1ab341","modified":1695280277586},{"_id":"source/movies/index.md","hash":"685be71da6e53b764235b59111d426971d48954e","modified":1693400494961},{"_id":"source/music/index.md","hash":"bcaf351e2638106198396186b06c7731e34b1c9b","modified":1694052055255},{"_id":"source/gallery/index.md","hash":"f79bac930c6e3bb45e5d446251acab3f3f995a6c","modified":1693401516584},{"_id":"source/tags/index.md","hash":"6473ac252e7d75229de018dacac98c2d5d7cee01","modified":1693287918442},{"_id":"source/_posts/Badboy录制/04-19-23-140415.png","hash":"c398fb039448990265a8a7b8a290e984b6dac2e7","modified":1695103455137},{"_id":"source/_posts/Badboy录制/04-19-23-140445.png","hash":"156bf25d4769b0b316aafae95c7d1a3d3a4c2d03","modified":1695103485752},{"_id":"source/_posts/Badboy录制/05-19-23-140532.png","hash":"394d18027e50dd7c824eea95d24c951cc72c54e4","modified":1695103532427},{"_id":"source/_posts/Appium基础学习/image-20230807134137933.png","hash":"b7ba235085e615c9661c8d5baeaf42d6f330e238","modified":1691386898348},{"_id":"source/_posts/Appium基础学习/image-20230822093814089.png","hash":"487c2da7af25a675b6655f9650b7ea60e7495423","modified":1692668294149},{"_id":"source/_posts/Appium基础学习/image-20230822093619228.png","hash":"c3a5ced712f5ae0e576c9df08b25cf05f4c8a4a3","modified":1692668179268},{"_id":"source/_posts/Appium基础学习/image-20230822093033212.png","hash":"d902525126c3d7890b4c3ae7aae431d81aaef111","modified":1692667833217},{"_id":"source/_posts/Appium基础学习/image-20230822101739507.png","hash":"b5d6c2ed397872c2244c88eedde0dda444f77bb5","modified":1692670659527},{"_id":"source/_posts/Appium基础学习/image-20230822101848241.png","hash":"10a02cf015d6de15df82a625d30fc9e88073b439","modified":1692670728258},{"_id":"source/_posts/Appium基础学习/image-20230822105454030.png","hash":"941308aafb4adf8985412898f268ff9aa980e8c6","modified":1692672894095},{"_id":"source/_posts/Appium基础学习/image-20230822104412007.png","hash":"cf5b7807e3ad017d0eeb6a4cbf6f377cb4ed0b13","modified":1692672252056},{"_id":"source/_posts/Appium基础学习/image-20230822112351826.png","hash":"e9f8db36b94cd918c042cc3d6c9b7425f53b72c3","modified":1692674631857},{"_id":"source/_posts/Appium基础学习/image-20230822134908939.png","hash":"a41fc16d2553fa8895c71b85f6b6182da01652aa","modified":1692683348948},{"_id":"source/_posts/Appium基础学习/image-20230822134952072.png","hash":"a3d7f8b73accb9b97564fac7aeddff6d92bc57d1","modified":1692683392103},{"_id":"source/_posts/Appium基础学习/image-20230822135027681.png","hash":"1e3ed79111e541945733106a93f876c49567040a","modified":1692683427708},{"_id":"source/_posts/Appium基础学习/image-20230822140101952.png","hash":"951eef30c7b5cb3885eb739306c55d9301c1eb4d","modified":1692684061957},{"_id":"source/_posts/Appium基础学习/image-20230822144556161.png","hash":"4a7b582911287d914a800887f8badd0504a4c713","modified":1692686756209},{"_id":"source/_posts/Appium基础学习/image-20230822151338617.png","hash":"4f13cb44b3b6795811781531a3a32bdbc8871662","modified":1692688418642},{"_id":"source/_posts/Appium基础学习/image-20230822151416804.png","hash":"c55f892b92fc9cd66b40573a2209b016d8a02d1f","modified":1692688456831},{"_id":"source/_posts/Appium基础学习/image-20230822151524633.png","hash":"7d321790b30fa8cc756de7b8d6b9d4fd07172a4d","modified":1692688524662},{"_id":"source/_posts/Appium基础学习/image-20230822152006781.png","hash":"86392707a1892d2aab8fb324de06568f4bb4fc7b","modified":1692688806803},{"_id":"source/_posts/Appium基础学习/image-20230822152535217.png","hash":"dd5a74e05afde4abaec68dea86e5f37c8cb9c3f1","modified":1692689135265},{"_id":"source/_posts/Appium基础学习/image-20230822152632759.png","hash":"14d224b1c7448d27c1d9055d0f4417fbc00db1bc","modified":1692689192782},{"_id":"source/_posts/Appium基础学习/image-20230822155516893.png","hash":"86d13ea9150d4e5ea73b79d6fe8f0587a20be75d","modified":1692690916934},{"_id":"source/_posts/Appium基础学习/image-20230822161734990.png","hash":"85625574b8ecb2cd4c911b329234beec8347ba8d","modified":1692692255014},{"_id":"source/_posts/Appium基础学习/image-20230822162337100.png","hash":"cc4425e90c0b5fc8dc714a53949b17ee2030968a","modified":1692692617121},{"_id":"source/_posts/Appium基础学习/image-20230822162016028.png","hash":"4c8a7f728a93fb8c7b9a8b47d0017ef156c065be","modified":1692692416040},{"_id":"source/_posts/Appium基础学习/image-20230822162910046.png","hash":"25aaa95d2354712ecdf34a8dc2db702006f39538","modified":1692692950084},{"_id":"source/_posts/Appium基础学习/image-20230822163521210.png","hash":"7171dbeca808288389587e69860a1d4ad6fad5da","modified":1692693321255},{"_id":"source/_posts/Badboy介绍/56-19-23-135628.png","hash":"465020b152ac239b1eec85498d479257ea4de86a","modified":1695102988087},{"_id":"source/_posts/Badboy介绍/56-19-23-135638.png","hash":"4ca3e4f8218ba84c4792422f7f1add0c8b1be7d4","modified":1695102998748},{"_id":"source/_posts/Badboy介绍/57-19-23-135700.png","hash":"7bd199d88c6ee0fad284ec4f145ca65ea4156410","modified":1695103020550},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144110.png","hash":"7363288014ed362752ae875f51b191f7f4575fbf","modified":1695278470112},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144117.png","hash":"87086689426083490fbb3ffe985b4918a6561a8e","modified":1695278477386},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144140.png","hash":"90b2d191eb5edb5cbb9082d4dc7703fd4a5ff606","modified":1695278500386},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144128.png","hash":"4edfb7fffe71d49a05ec6724518a6e35909783da","modified":1695278488166},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144155.png","hash":"6b12ae0deb78acafa46449c9e5c3908c699eefee","modified":1695278516084},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144150.png","hash":"7232a87bcaf09ca64710b345147f265baf658698","modified":1695278510290},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174115.png","hash":"503d1d6b80f720fd57a809e600d8c9009dc6fe63","modified":1693906876120},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172014.png","hash":"5e629646b85f8219c6a410c398ee42abe3e36cc3","modified":1693905614113},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172025.png","hash":"6dee2ab3746815741ca64748d60d1b992b10cdd9","modified":1693905625540},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172000.png","hash":"b51f57081b1b8e4b3fc28f7f6d8dd3947e64b1f4","modified":1693905600649},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172032.png","hash":"3653b17a2a94d17fe3fe8293f893f83b2c4c61a2","modified":1693905632368},{"_id":"source/_posts/JMeter的安装和启动-1/21-05-23-172103.png","hash":"8321a9866f4e6a324993aea936157bf7dd0acf11","modified":1693905663534},{"_id":"source/gallery/art/index.md","hash":"b92ace65df45a4f94f178a59b791af5abbf58795","modified":1693401444495},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144816.png","hash":"be0e74de2d1e961ba946ab3edad6420b5a325165","modified":1695278896148},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144820.png","hash":"c658a0ee0ebac3d9b1c4e192e3c17cb99e89e4a5","modified":1695278900616},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144833.png","hash":"8216ef011fef96a589ee6c698829bf766184260c","modified":1695278913679},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144845.png","hash":"85b1ce8059d4faf820def2d07cca092ead75545f","modified":1695278925221},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144837.png","hash":"ac3c606d6dcea341529a22b6bf27b6a392959ed4","modified":1695278917629},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144848.png","hash":"22e20cc225e1aeb7d642afda30f9251662244e1d","modified":1695278929089},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144852.png","hash":"950bbb81d5907e36a3429ac3d052c43d197d3284","modified":1695278932361},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144857.png","hash":"e20afd011b9fa7a85815e81badffc3e9e111e7d6","modified":1695278937525},{"_id":"source/gallery/photography/index.md","hash":"ea45c254612c45881a47edf1f0530fb4a24ef24b","modified":1693460072775},{"_id":"source/gallery/wallpaper/index.md","hash":"851573c5a6e69b567a7115559164c9eac592c46a","modified":1693401613043},{"_id":"source/_posts/Badboy录制/03-19-23-140352.png","hash":"8c5e53a42097dce2f71b88436ec5c2d2f06f75a1","modified":1695103432449},{"_id":"source/_posts/Badboy录制/04-19-23-140436.png","hash":"3d6215dedb730f538b5bfa6bbb8d8f96c5d6261f","modified":1695103476177},{"_id":"source/_posts/Badboy录制/05-19-23-140522.png","hash":"680d7edcd42d4aaa7297ea4f609e7d8ca554524c","modified":1695103522318},{"_id":"source/_posts/ChatGTP搭建/23-11-23-132353.png","hash":"0044a33983b93e7f9943521efaacb6ec818b9612","modified":1694409833539},{"_id":"source/_posts/Appium基础学习/image-20230720162127440.png","hash":"9833060f8153f201a0a0b0159a090259a8a03d29","modified":1689841287465},{"_id":"source/_posts/Appium基础学习/image-20230720162142889.png","hash":"9833060f8153f201a0a0b0159a090259a8a03d29","modified":1689841302920},{"_id":"source/_posts/Appium基础学习/image-20230822095942818.png","hash":"872a90ae3dcfde9f9e37260e1deea2fe973041c7","modified":1692669582877},{"_id":"source/_posts/Appium基础学习/image-20230822103602071.png","hash":"caf2522a3abf45b4d548a277f66050cd62a8fd7c","modified":1692671762128},{"_id":"source/_posts/Appium基础学习/image-20230822105546386.png","hash":"63ba85f43e43806bc6997ddcb0215f2871567768","modified":1692672946433},{"_id":"source/_posts/Appium基础学习/image-20230822105722220.png","hash":"b15268cf891c291efb60b020254af1a8aa1eb690","modified":1692673042280},{"_id":"source/_posts/Appium基础学习/image-20230822111942478.png","hash":"5bd1293b41cc732b510c17404ac56ae93b62fd01","modified":1692674382519},{"_id":"source/_posts/Appium基础学习/image-20230822112448330.png","hash":"41dac8b35753b244efdc347c3ffa799dad2649b0","modified":1692674688363},{"_id":"source/_posts/Appium基础学习/image-20230822112543774.png","hash":"ce69f1040ee75480389ba7a4ef4fa0e4d9f17221","modified":1692674743807},{"_id":"source/_posts/Appium基础学习/image-20230822112923800.png","hash":"4025f682956fc2641196541b3f6c60a4c46d4c36","modified":1692674963876},{"_id":"source/_posts/Appium基础学习/image-20230822113205328.png","hash":"975aade9183ce9c2a82fac88bd2a5797ebd0432b","modified":1692675125371},{"_id":"source/_posts/Appium基础学习/image-20230822133904939.png","hash":"c08ade3e18ad523944fb013fe0b206e9960f98c2","modified":1692682744986},{"_id":"source/_posts/Appium基础学习/image-20230822134726602.png","hash":"c08ade3e18ad523944fb013fe0b206e9960f98c2","modified":1692683246645},{"_id":"source/_posts/Appium基础学习/image-20230822142646593.png","hash":"8b4cf8ed0b25fe235bb028bf162ec4e087e97182","modified":1692685606628},{"_id":"source/_posts/Appium基础学习/image-20230822151841755.png","hash":"ebe3fbf7bd6932abd935035e7622f154ed61acf7","modified":1692688721789},{"_id":"source/_posts/Appium基础学习/image-20230822152114053.png","hash":"6e442b33f2a0e9e2c389c1382c49c8bf984607fe","modified":1692688874092},{"_id":"source/_posts/Appium基础学习/image-20230822163042684.png","hash":"7ef700bddee5707b2a69d9f8b8f833400a3eeac1","modified":1692693042737},{"_id":"source/_posts/Appium基础学习/image-20230825113322301.png","hash":"1fd332e1d443e73dc0c75053b6066970dc824936","modified":1692934402341},{"_id":"source/_posts/Badboy介绍/56-19-23-135622.png","hash":"3c1a3eabf3bc357407e58a8219b2f30dba2a199a","modified":1695102982638},{"_id":"source/_posts/Badboy介绍/56-19-23-135633.png","hash":"87926b8222f29326113e03ac885db5dd6577e177","modified":1695102993648},{"_id":"source/_posts/Badboy介绍/56-19-23-135653.png","hash":"d024bcbfc315ce013760e2c3173a2301724f489c","modified":1695103013488},{"_id":"source/_posts/JMeter分布式测试/07-21-23-150713.png","hash":"55695bbac35bf344929a2c27f2acdb4b7447b4b4","modified":1695280033387},{"_id":"source/_posts/JMeter分布式测试/42-21-23-144200.png","hash":"1da2d7e9d30a5554e04f749bd2bcb2e73677674a","modified":1695278520392},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173348.png","hash":"b8126515b6b6cd566b6ea4fee5f79773985fa5b9","modified":1693906428919},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173356.png","hash":"bc81da2dfff9be99fa2792866ce26f4a926e4bbf","modified":1693906436572},{"_id":"source/_posts/JMeter插件管理-1/40-05-23-174049.png","hash":"0ca07f346fd7b45b0ae84896ddf35f01fd4f5cf7","modified":1693906849956},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174109.png","hash":"ad5cd51b5fbf2f89c1a78811dfd9f51307bdb2e1","modified":1693906869979},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174120.png","hash":"a903ed10075130aad51d61a61ee60ff81a7c5398","modified":1693906880837},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174130.png","hash":"35e930ecabe8009f30c5e3a517e21515ec1937ec","modified":1693906890288},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174149.png","hash":"e505b56c4965e7d3e50dc77398fb339da2391b5a","modified":1693906909240},{"_id":"source/_posts/JMeter的安装和启动-1/19-05-23-171950.png","hash":"c05a973444e610d4969c01fd034c2c15b1a1ecfe","modified":1693905590885},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172037.png","hash":"52b6371baf43e6541776fb740bc2d8cfa2a89646","modified":1693905637799},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172047.png","hash":"2de3c6522a1327605453dbc58115354f972ca36e","modified":1693905647716},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172042.png","hash":"16178974d2f52e84eeed4cfc64b84ffd2957d4a5","modified":1693905643047},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172055.png","hash":"bf67dea56e25e324d490e3e92f22f774562be37e","modified":1693905655187},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144824.png","hash":"8a68052b6f10a00e1c2132bd1bc639dea22a7f2c","modified":1695278904432},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144828.png","hash":"7136ac2cc74f9e0c35d984d68f8b34972cff70c8","modified":1695278908892},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/49-21-23-144901.png","hash":"6fbb89fac5ec061bc3e7ae28f89fbcb5593dcc58","modified":1695278941934},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/49-21-23-144907.png","hash":"c7280d29060c6ec4045f7ec08b532707c8470aab","modified":1695278947125},{"_id":"source/_posts/Badboy录制/04-19-23-140418.png","hash":"cf6b0c2b125d11ec9e727b984efcf6ea7ab6aaf5","modified":1695103458747},{"_id":"source/_posts/Badboy录制/04-19-23-140423.png","hash":"b29cdcc1e7d0e2643489e52898ea036c1612935f","modified":1695103463746},{"_id":"source/_posts/Badboy录制/04-19-23-140427.png","hash":"7b1d4a0f220943d8b8a8ba4b16741d77c52bd609","modified":1695103467843},{"_id":"source/_posts/Badboy录制/04-19-23-140432.png","hash":"277678976dde910cd47df94ff29fbdeec541fca7","modified":1695103472227},{"_id":"source/_posts/Badboy录制/04-19-23-140455.png","hash":"ca08c38236d78b22217e86ccf54eaf8ab809db67","modified":1695103495337},{"_id":"source/_posts/Badboy录制/05-19-23-140501.png","hash":"38a89076d9f0cd14bb8943331eb5ea46225b3734","modified":1695103501518},{"_id":"source/_posts/ChatGTP搭建/23-11-23-132325.png","hash":"98fe4ce34d7f5462deccb15ac54d638f193137ec","modified":1694409805458},{"_id":"source/_posts/Appium基础学习/image-20230822112903927.png","hash":"cc441442f76bd66ac649657c27483cca83bcef8f","modified":1692674943979},{"_id":"source/_posts/Appium基础学习/image-20230822113541137.png","hash":"8679e37217efa4ccd08a6737bc3ca8d998e4e545","modified":1692675341196},{"_id":"source/_posts/Appium基础学习/image-20230822114808809.png","hash":"55a42156f8c4ea76afde1768610b225a201b98d7","modified":1692676088869},{"_id":"source/_posts/Appium基础学习/image-20230822135321766.png","hash":"9ee5a1af0a4adbc440054b531268a50b883b09a6","modified":1692683601830},{"_id":"source/_posts/Appium基础学习/image-20230822135531324.png","hash":"62efb2aca3add5339076e0430745b5cdbe1555b0","modified":1692683731391},{"_id":"source/_posts/Appium基础学习/image-20230822135548543.png","hash":"31d735bc61ad5636ff866fd4531f8409ee36313a","modified":1692683748604},{"_id":"source/_posts/Appium基础学习/image-20230822135756380.png","hash":"a1b27a79c298ea568fda291d234d0d91d92967f1","modified":1692683876442},{"_id":"source/_posts/Appium基础学习/image-20230822135855228.png","hash":"9a8d9e680a6eedf368ad14989fd87c74ef9e9230","modified":1692683935299},{"_id":"source/_posts/Appium基础学习/image-20230822145022696.png","hash":"a3b47809dd0a8fba482f7471bd2d47f921728f4d","modified":1692687022735},{"_id":"source/_posts/Appium基础学习/image-20230822145325532.png","hash":"746ce511457a5d3f4af19529c249fd4281080d1e","modified":1692687205577},{"_id":"source/_posts/Appium基础学习/image-20230822151124832.png","hash":"eefcdb2f52d5131c986e0ddf95b3cc680ad24812","modified":1692688284910},{"_id":"source/_posts/Appium基础学习/image-20230822150817186.png","hash":"5807abc1195ae94ab24d83094d9f721cba0a5022","modified":1692688097237},{"_id":"source/_posts/Appium基础学习/image-20230823111152488.png","hash":"0f439b830941961f500d87be8d1450f1fe9a68c2","modified":1692760312648},{"_id":"source/_posts/Appium基础学习/image-20230825111551346.png","hash":"e64a6b955f758bf6fa89dfb61ecaf4051895d189","modified":1692933351451},{"_id":"source/_posts/JMeter分布式测试/40-21-23-144055.png","hash":"3af3bcafd24c651d1cc5e3eeeabfabab16b73d52","modified":1695278455800},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144146.png","hash":"858fd86dc1a321ae279a46b31b44b8ce730ee3b7","modified":1695278506810},{"_id":"source/_posts/JMeter学习/18-30-23-131804.png","hash":"b0f3e2b4fe9bedb9f616064f16e768db5ad4eadd","modified":1693372684544},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173335.png","hash":"840e3e16d5c8bf24cd669eeb7ab86d424083a960","modified":1693906415157},{"_id":"source/_posts/JMeter插件管理-1/40-05-23-174059.png","hash":"617f09c2cb517e99eae67535390540fe71e47d23","modified":1693906859507},{"_id":"source/_posts/Badboy录制/04-19-23-140439.png","hash":"1942d2c5834b1735b1007e92a71254c95568a2ab","modified":1695103479927},{"_id":"source/_posts/Badboy录制/05-19-23-140507.png","hash":"c84929ae3fb645a646257a722c13ead4b775fd01","modified":1695103507883},{"_id":"source/_posts/Badboy录制/05-19-23-140515.png","hash":"e2ebafc3401722f4099da93cf5155b0c8da2ba1e","modified":1695103515537},{"_id":"source/_posts/Badboy录制/05-19-23-140545.png","hash":"850d6a9af33230b2a7bcb2fc14dc42eafdf56637","modified":1695103545977},{"_id":"source/_posts/Appium基础学习/image-20230815164033500.png","hash":"a058fa9378f6f1ebaf10c28557ab6d392bb3a011","modified":1692088833568},{"_id":"source/_posts/Appium基础学习/image-20230822100211467.png","hash":"b89278c81a556b68a48ff100b30b67286c0f592d","modified":1692669731552},{"_id":"source/_posts/Appium基础学习/image-20230822102038461.png","hash":"7b13eb3bb1c408dcf75cb6cf4631d2fe8aa72d60","modified":1692670838535},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173341.png","hash":"0e7a2919b407ac4ba2e1dcde740710b11a5e7549","modified":1693906421750},{"_id":"source/_posts/JMeter常用目录介绍-1/34-05-23-173400.png","hash":"c30b1cc5896c6bd9045a4339e01b6c97019f5b7e","modified":1693906440602},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174125.png","hash":"4c86391b7a9576ed6ebce615d3c89c32ca946abb","modified":1693906885833},{"_id":"source/_posts/JMeter的安装和启动-1/19-05-23-171931.png","hash":"c15cc08f9bb536791dd77440b5532e4cc0527dff","modified":1693905571844},{"_id":"source/_posts/JMeter的安装和启动-1/19-05-23-171942.png","hash":"13e4cba80c21759418b4a4db225ca67157ebb87f","modified":1693905582785},{"_id":"source/_posts/接口测试学习/01-07-23-110137.png","hash":"b474bb80ab419b5d4cb5ff896d1ed31e30203f1d","modified":1694055697676},{"_id":"source/_posts/Badboy录制/04-19-23-140404.png","hash":"57fec547d21066ccd35d0faa166206c5360ba691","modified":1695103444317},{"_id":"source/_posts/Badboy录制/04-19-23-140408.png","hash":"98f58be895f041a4d57023e8daeaec553829462b","modified":1695103448647},{"_id":"source/_posts/Badboy录制/03-19-23-140359.png","hash":"29e6bc98e6203377ab7d91a59af4b67a3aa7ce27","modified":1695103439230},{"_id":"source/_posts/ChatGTP搭建/24-11-23-132424.png","hash":"a19ebff182f3ba9bd754b46e87d82ee6a4ded5cb","modified":1694409865008},{"_id":"source/_posts/Appium基础学习/image-20230822101641447.png","hash":"fcd41af7635f76a710ae24b6db3cbd5186dd6317","modified":1692670601539},{"_id":"source/_posts/Badboy介绍/56-19-23-135643.png","hash":"1406fbac4b66dc31d164c731b9c6ce6444557d2f","modified":1695103003527},{"_id":"source/_posts/Badboy介绍/56-19-23-135648.png","hash":"1406fbac4b66dc31d164c731b9c6ce6444557d2f","modified":1695103008368},{"_id":"source/_posts/JMeter常用目录介绍-1/34-05-23-173405.png","hash":"ae8a4f19c2e80a2dd34a8089360db7ac0898e1d5","modified":1693906445409},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174105.png","hash":"1837c44b43cfd8f043f17ae3daa44a2b5978b232","modified":1693906865350},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174143.png","hash":"b6aef721ebd888cc99d23beec8f757b0089a565b","modified":1693906903192},{"_id":"source/_posts/Appium基础学习/image-20230822101225757.png","hash":"5b5c9b97b479e118f8405069c5851f3bfea1ace6","modified":1692670345854},{"_id":"source/_posts/接口测试学习/29-07-23-112918.png","hash":"86ad84610f895dccc564c588be239c4986907e06","modified":1694057358747},{"_id":"source/_posts/Appium基础学习/image-20230822102209820.png","hash":"a570fa223ba87b26743b77b537e8e79c197db498","modified":1692670929943},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1693022187039},{"_id":"themes/butterfly/README.md","hash":"5ca893c78f8971f512da55c785b8ccbfa9d37cfc","modified":1693022187039},{"_id":"themes/butterfly/README_CN.md","hash":"f6ae7f38d016135340fd25c5fd1be65452b6773d","modified":1693022187039},{"_id":"themes/butterfly/package-lock.json","hash":"260c73f76c12f51c600e2d2b05ba9884e09715a7","modified":1693068166253},{"_id":"themes/butterfly/_config.yml","hash":"2408a5eab0793e93db3b41a5bad0973e7ee595dd","modified":1693399979452},{"_id":"themes/butterfly/package.json","hash":"8392c9ce6c4e34c73959079ca5db0734c2cb2c67","modified":1693068166237},{"_id":"themes/butterfly/plugins.yml","hash":"6d68dab3b79accb1bceb4710c8aaab724a45053a","modified":1693022187117},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1693372076000},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1693372080000},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1693372076000},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1693372080000},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1693372080000},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1693372080000},{"_id":"themes/butterfly/languages/default.yml","hash":"d444cbb5c5456aaf27f3fb1b4308634689c7bb53","modified":1693022187055},{"_id":"themes/butterfly/languages/en.yml","hash":"4957fd976c99745d3aa24000a85b2955e8d1cf81","modified":1693022187055},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"cc8672dc0c2762b694f689cbeb6e34810f1c194e","modified":1693022187055},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"145ec301db185c8a06de1f34a77ca391e1d2729b","modified":1693022187055},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1693022187039},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1693022187039},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1693022187039},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1693022187039},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1693372076000},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1693022187039},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"b50b0afdc41c54279587410c3f82c8cb3c5ff46d","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"c55f05400eb27ab051f47396ec8d4249ce6f71ec","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9277fead4c29dbe93976f078adaa26e8f9253da3","modified":1693372078000},{"_id":"themes/butterfly/source/css/var.styl","hash":"e1e37a2e932163886789b72624c7348545003f1d","modified":1693022187164},{"_id":"themes/butterfly/source/js/main.js","hash":"4fd1cd7a02dedcb686caf6149c35fd8e1fbcafc9","modified":1693022187180},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1693022187164},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"a102a6cacf7b20183946a54580867a964f3674c4","modified":1693022187180},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1693022187133},{"_id":"themes/butterfly/source/js/utils.js","hash":"13b2b02118a0f4ec2e9e0bb1b90f5b1a30a70f44","modified":1693022187180},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1693022187164},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a3323fcb11cfd3f3e21230737341beb5d76b40aa","modified":1693022187133},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1693022187164},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1693022187164},{"_id":"themes/butterfly/source/img/logo.png","hash":"d3aa72d84e328d931eaed69736ba7bde0b13ca94","modified":1693043720765},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1693022187117},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1693022187117},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1693022187117},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1693022187117},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1693022187133},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1693022187117},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1693022187117},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1693022187133},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1693022187133},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1693022187133},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"6005907245dd74b153f03afdccfae1abb66bb482","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1693022187133},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7222102f9919f8e961d4f1688425845fb7775ada","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"b8d95ac1851c37f1dce4b1dd4a1d3ffdff501a03","modified":1693372080000},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"fc5a80707cf522378be3cf8638ef78bccc88c510","modified":1693022187133},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1693022187133},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"f5207840c96df6b26ad227433babca4f8c362624","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"1bef867c799ba158c5417272fb137539951aa120","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"766baca6ddce49d1724a02312387b292ff2d0bdc","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1693372076000},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"3adb731465a4ab14529277fd7867889e0800ad16","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e37681bc9c169d4220f26ecda2b3d5c02b6b9a0f","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"82bb447a5d045980789cf3f9de9d49cc32011b13","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"dfb5e16a7e7106bb20b2ac2d0df1251d0fc79609","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"ab037bf5794638bd30da4cf7cf106e5d03b5f696","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"8e22f53886a57a68286970d8af8b4c950fd4a1d7","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1693372080000},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"431b4a252443e224872bd6b4f6aa76ed1679a82c","modified":1693022187133},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ba94ceb40d7c81372a76103d958dcc2cc6a84f00","modified":1693372080000},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"9893656128c347d1c09c90784627c84c979b326f","modified":1693022187133},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"e43017dbc73e0ce95dcfcb9dfb4fcce0c1715dd4","modified":1693022187133},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1693022187149},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"9066a62e442affce3a923a06a90486bf9d364e0e","modified":1693022187149},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"4c86c10f8ec0c8fb60b400a5a2f14699d3155be4","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"3969f599e8657adf8c3ce287d83f5d0a23f276a9","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"20303c0dad28e5c5335ce2fa6582f1fafae5b628","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5e27f7842af82ff7498d4b59787ce9ca90fa9e6f","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"fc029f5e00d7904c0878efd20dd4e09fc55e1d03","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1693022187149},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1693022187149},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1693022187149},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"15ea7564b2e3bf46bc91fb6e49c94d057b37caaf","modified":1693022187149},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1693022187164},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1693372082000},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1693022187164},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"57d333ef47bfb8fd22da31f600527c9d91e8e322","modified":1693022187164},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"0b23010154e19f37f0c4af0110f9f834d6d41a13","modified":1693022187164},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1693022187164},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"df7a51fcabbadab5aa31770e3202a47c9599bbb7","modified":1693022187164},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"cf90ea339fbb7f345212319627fcd68964024e40","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1693022187164},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1693022187164},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1693022187164},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bbe930d8425bdaee2a5ba3cade42b617cee42934","modified":1693022187180},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"40e76d6da538cb3c1ef6b79ffc0adfa64fe6b8ba","modified":1693022187180},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"19b5cfa1f77781246e02967cefe149f19170e45f","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"c42bbce31fcd8846cf3360f4c383dec9368daeba","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0010c7a10d265c4329f0fd4db85b4a9ea7ba06b5","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"b47698e153c73cb29286b19bec5ddd920cb7ffba","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"1a20b11fa0e6b1943e9b4d81e197a25ca36af66d","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f8b73bc63ec1b45d86aa3891d8c81ef4d5980943","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b19b123df682b23491b17dcca386d79062cd8f6e","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a56edeb1ce2f1b1fb0e866a30543f274b9f7d69e","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"7c7fbe27d82becc9ee509765f1195c69f5864a0b","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"c5e131d65a7ad30f3cb98ac3b94cd2f6a94c22e9","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f618457d62ef35d78a31e7fb1e375a462f64b228","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4bb4cf58e219dfb8787273c931b1ea978b2ab88f","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"08a85e52fc800d3562df869e5e2613313e76fce6","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"386a2b371644c2682560733617561ba6e6bf9ab2","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"6b0d28671afd5ed286a714f25ba16256a2e7d880","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"0d960849d5b05d27ec87627b983ca35f2411b9e8","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"799da8f3015e6fe440681b21644bcb3810a5518c","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"09d2ab2570b67e6f09244a898ccab5567cb82ace","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d40b521eec4136f6742c548a4445ed593470b1b","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"cfcfaed3a52fa47fff4cc65a053a2f025fb3b7b6","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"4f8bd22c5c32d5430cbe08ab4e861b6f8b86f820","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"a6be932d1f64c6190f5d03b5b77fba09fa0fd6b8","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"4fb998a05e51ef2302775945883307ee3039a544","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"edd4ebf76a79fb74cfae03a286fab90f74324dbd","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ce4ab79c85df9f77395269eb01e9a023d7f96376","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"2f3af113713563e34b10bbe998cc15008f81c85a","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"da94966a9650ef3e4c69f3ee93758b30fa42cb78","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"ba04174d977da988a1d49c06641262c413352346","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"bb944185f4bb9f9a9b9d70ee215f66ccd6d4c6cf","modified":1693372078000},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"4b9c35375e0eb9cf99ad246d5ca838eca64a635d","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1693372080000},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1693372080000},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1693022187149},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1693022187149},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1693022187149},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1693022187149},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1693022187149},{"_id":"source/_posts/Appium基础学习/image-20230822101402155.png","hash":"69910f2ab55824d6aa9b005a677f2ae5ac1d6fca","modified":1692670442277},{"_id":"themes/butterfly/source/img/sk.jpg","hash":"831894339e4a084cb77e8eb165d39756499ece7b","modified":1693046988447},{"_id":"themes/butterfly/source/img/top.jpg","hash":"abae1939e84bebf9b316175e6fccedd2a250b134","modified":1679921390000},{"_id":"public/categories/index.html","hash":"2a9c264b963abdeeeac8e04997271e5692ecb1ae","modified":1695280313309},{"_id":"public/movies/index.html","hash":"b581ae394a2237547de431c14ea20b12f41c2eb7","modified":1695280313309},{"_id":"public/gallery/index.html","hash":"29543924ca914b6109f9b3574d97e007a2a2a553","modified":1695280313309},{"_id":"public/music/index.html","hash":"6ca68302c895525131a7352d59eebfcfe947531b","modified":1695280313309},{"_id":"public/tags/index.html","hash":"943c0a2c0bc73032fd6ede3a3f0de7a009be48f9","modified":1695280313309},{"_id":"public/gallery/art/index.html","hash":"56f96178a309ccb30b6c7d04115451be26763670","modified":1695280313309},{"_id":"public/gallery/photography/index.html","hash":"91fd1200c46d27423169bd96ce786d59a9d5a392","modified":1695280313309},{"_id":"public/gallery/wallpaper/index.html","hash":"f7a1dc5fe902152383983261c4f91d63b51e927a","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/index.html","hash":"a6a2d00e4a0dc6a7b5ea98dfd95b76e8966d49d8","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/index.html","hash":"453afc8051bc50f7dba3302099c71a3423f7c6b3","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/index.html","hash":"007b2593aa83ecfd29fee861edea227b7fbf2b18","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/index.html","hash":"984df74bd98f702246f07d4a986ac54f9a4b07d0","modified":1695280313309},{"_id":"public/2023/09/12/Nginx-负载均衡/index.html","hash":"cff046f11337974cbedffc13ce1df61fccdf1451","modified":1695280313309},{"_id":"public/2023/09/13/服务器部署系统-nginx/index.html","hash":"146d7176c69191e0accefe003740d9c654c9b232","modified":1695280313309},{"_id":"public/2023/09/11/ChatGTP搭建/index.html","hash":"2c304f35f4008a43dbb426d493af536e5f88b582","modified":1695280313309},{"_id":"public/2023/09/07/接口测试学习/index.html","hash":"039d954b6a4c87de41f42f4a7bb0f8f4b90e1cf1","modified":1695280313309},{"_id":"public/2023/09/07/Selenium基础学习/index.html","hash":"8a850ff1e405eaccf91945c97aae2c855a8c5b77","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/index.html","hash":"b0ec9b96633b0e9d67c13deac8a85b5de4f0ae2b","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/index.html","hash":"a20d8863a619bb16384a0f6dd30edf8cc25f3d0c","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/index.html","hash":"8e2cfca2a04611f27c963b8123db0cea9c29422b","modified":1695280313309},{"_id":"public/2023/08/30/JMeter学习/index.html","hash":"1a6e3555c84762bdf4b2fc97b02281c34cbe44ac","modified":1695280313309},{"_id":"public/archives/index.html","hash":"33a6ce2ced2837abf640d1d894853f407ee04922","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/index.html","hash":"65e6ae73d5e053b3d80137cdef23ebbef9d64417","modified":1695280313309},{"_id":"public/2023/08/27/Github学习/index.html","hash":"8a63be70d7221e147d29b5031a96dca17986d69d","modified":1695280313309},{"_id":"public/archives/page/2/index.html","hash":"9443cf70cfd2d1518ed5ba7cf897d35dddda1488","modified":1695280313309},{"_id":"public/archives/2023/index.html","hash":"75bf6309c66e81deebc81c33763a02f786f6c2f0","modified":1695280313309},{"_id":"public/archives/2023/page/2/index.html","hash":"aa11e47fb05825c7a93d50da5cf9ce5042f8568a","modified":1695280313309},{"_id":"public/archives/2023/08/index.html","hash":"9b2858e460ab5ff21ed424c46376b295c3e51405","modified":1695280313309},{"_id":"public/archives/2023/09/index.html","hash":"cd15baf61337283e8ddd996b28452a9253798750","modified":1695280313309},{"_id":"public/archives/2023/09/page/2/index.html","hash":"ed719cdcfd27f3713b5bab459168757ecd4a039b","modified":1695280313309},{"_id":"public/categories/Appium基础学习/index.html","hash":"07c1e471d9620282e1324ea4c893ee3a28a7d20e","modified":1695280313309},{"_id":"public/categories/Badboy学习/index.html","hash":"e4b48654d5cef4735784cc4ac8585b4095e2de8b","modified":1695280313309},{"_id":"public/categories/ChatGTP搭建教程/index.html","hash":"e4af07191507acfcb71ce7cf5e391126c0d1d290","modified":1695280313309},{"_id":"public/categories/Git基础学习/index.html","hash":"cc5074d94a4e88f699d567611f2a215be8bd36e7","modified":1695280313309},{"_id":"public/categories/JMeter分布式测试学习/index.html","hash":"374d5229cf8c53d45c6049ba0d37d238c57bd192","modified":1695280313309},{"_id":"public/categories/JMeter学习/index.html","hash":"23d86375bda05b54964c2dc64e872b506ba96808","modified":1695280313309},{"_id":"public/categories/Nginx搭建/index.html","hash":"dfcf47a6fd0bf81658bf282aa2162fba5c66bb04","modified":1695280313309},{"_id":"public/categories/Selenium学习/index.html","hash":"8f1f3b6dd5bc0bedc18290705581bfa3c8f03966","modified":1695280313309},{"_id":"public/categories/接口测试/index.html","hash":"05c2ddf94d091d83c3a667276c698151c70ba709","modified":1695280313309},{"_id":"public/page/2/index.html","hash":"bcb7cad80cc0e2a0603debd0482dbfead5e93749","modified":1695280313309},{"_id":"public/tags/Appium学习/index.html","hash":"38c6f65fa8440debf4b6bde0a00047364a6dc815","modified":1695280313309},{"_id":"public/tags/Badboy/index.html","hash":"a8e5bd103db5ff3a812d5dbf7f2192d424c7d0a3","modified":1695280313309},{"_id":"public/tags/ChatGTP/index.html","hash":"3e688cd01c63f13b3ad1d26b54f7001dcf1f363f","modified":1695280313309},{"_id":"public/tags/Git/index.html","hash":"2e3a8bd0aa533f045ce1b51719e8307420d68b13","modified":1695280313309},{"_id":"public/index.html","hash":"00c73b96c56bf522fa2d4e71f51644170fd6edd7","modified":1695280313309},{"_id":"public/tags/分布式测试/index.html","hash":"e93efb7c22d7af8eb93e1bfae6fcde7c4d560a61","modified":1695280313309},{"_id":"public/tags/学习/index.html","hash":"3e5115598e9ab0e485cee22b2a96cc54b0985d21","modified":1695280313309},{"_id":"public/tags/JMeter/index.html","hash":"a5c484c03c4aae3bc44a7bc588ec0d2792f286b3","modified":1695280313309},{"_id":"public/tags/Nginx/index.html","hash":"794613fbfbd89498eaea69fbe5168f4ca24ffcb5","modified":1695280313309},{"_id":"public/tags/Selenium/index.html","hash":"ff6067266106e1b1779fd63e415bd96692af7477","modified":1695280313309},{"_id":"public/tags/request/index.html","hash":"52f39610a3166d080ccc52ac1b184efb2cc8c525","modified":1695280313309},{"_id":"public/tags/服务器部署系统/index.html","hash":"653a5a402ccd2b84e1c02780fa65efec87592e2e","modified":1695280313309},{"_id":"public/tags/接口测试/index.html","hash":"eb8b64913eb965608cd345e6a245ec5e95b166da","modified":1695280313309},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1695280313309},{"_id":"public/img/logo.png","hash":"d3aa72d84e328d931eaed69736ba7bde0b13ca94","modified":1695280313309},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1695280313309},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822093619228.png","hash":"c3a5ced712f5ae0e576c9df08b25cf05f4c8a4a3","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230807134137933.png","hash":"b7ba235085e615c9661c8d5baeaf42d6f330e238","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822093033212.png","hash":"d902525126c3d7890b4c3ae7aae431d81aaef111","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822093814089.png","hash":"487c2da7af25a675b6655f9650b7ea60e7495423","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822101848241.png","hash":"10a02cf015d6de15df82a625d30fc9e88073b439","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822101739507.png","hash":"b5d6c2ed397872c2244c88eedde0dda444f77bb5","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822104412007.png","hash":"cf5b7807e3ad017d0eeb6a4cbf6f377cb4ed0b13","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822105454030.png","hash":"941308aafb4adf8985412898f268ff9aa980e8c6","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822112351826.png","hash":"e9f8db36b94cd918c042cc3d6c9b7425f53b72c3","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822134908939.png","hash":"a41fc16d2553fa8895c71b85f6b6182da01652aa","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822135027681.png","hash":"1e3ed79111e541945733106a93f876c49567040a","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822134952072.png","hash":"a3d7f8b73accb9b97564fac7aeddff6d92bc57d1","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822140101952.png","hash":"951eef30c7b5cb3885eb739306c55d9301c1eb4d","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822144556161.png","hash":"4a7b582911287d914a800887f8badd0504a4c713","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822151338617.png","hash":"4f13cb44b3b6795811781531a3a32bdbc8871662","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822151416804.png","hash":"c55f892b92fc9cd66b40573a2209b016d8a02d1f","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822151524633.png","hash":"7d321790b30fa8cc756de7b8d6b9d4fd07172a4d","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822152006781.png","hash":"86392707a1892d2aab8fb324de06568f4bb4fc7b","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822152535217.png","hash":"dd5a74e05afde4abaec68dea86e5f37c8cb9c3f1","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822152632759.png","hash":"14d224b1c7448d27c1d9055d0f4417fbc00db1bc","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822155516893.png","hash":"86d13ea9150d4e5ea73b79d6fe8f0587a20be75d","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822162016028.png","hash":"4c8a7f728a93fb8c7b9a8b47d0017ef156c065be","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822161734990.png","hash":"85625574b8ecb2cd4c911b329234beec8347ba8d","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822162337100.png","hash":"cc4425e90c0b5fc8dc714a53949b17ee2030968a","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822162910046.png","hash":"25aaa95d2354712ecdf34a8dc2db702006f39538","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822163521210.png","hash":"7171dbeca808288389587e69860a1d4ad6fad5da","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135628.png","hash":"465020b152ac239b1eec85498d479257ea4de86a","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135638.png","hash":"4ca3e4f8218ba84c4792422f7f1add0c8b1be7d4","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/57-19-23-135700.png","hash":"7bd199d88c6ee0fad284ec4f145ca65ea4156410","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140415.png","hash":"c398fb039448990265a8a7b8a290e984b6dac2e7","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140445.png","hash":"156bf25d4769b0b316aafae95c7d1a3d3a4c2d03","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/05-19-23-140532.png","hash":"394d18027e50dd7c824eea95d24c951cc72c54e4","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144110.png","hash":"7363288014ed362752ae875f51b191f7f4575fbf","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144117.png","hash":"87086689426083490fbb3ffe985b4918a6561a8e","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144140.png","hash":"90b2d191eb5edb5cbb9082d4dc7703fd4a5ff606","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144128.png","hash":"4edfb7fffe71d49a05ec6724518a6e35909783da","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144150.png","hash":"7232a87bcaf09ca64710b345147f265baf658698","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144155.png","hash":"6b12ae0deb78acafa46449c9e5c3908c699eefee","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174115.png","hash":"503d1d6b80f720fd57a809e600d8c9009dc6fe63","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172000.png","hash":"b51f57081b1b8e4b3fc28f7f6d8dd3947e64b1f4","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172014.png","hash":"5e629646b85f8219c6a410c398ee42abe3e36cc3","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172032.png","hash":"3653b17a2a94d17fe3fe8293f893f83b2c4c61a2","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172025.png","hash":"6dee2ab3746815741ca64748d60d1b992b10cdd9","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/21-05-23-172103.png","hash":"8321a9866f4e6a324993aea936157bf7dd0acf11","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144820.png","hash":"c658a0ee0ebac3d9b1c4e192e3c17cb99e89e4a5","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144816.png","hash":"be0e74de2d1e961ba946ab3edad6420b5a325165","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144833.png","hash":"8216ef011fef96a589ee6c698829bf766184260c","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144837.png","hash":"ac3c606d6dcea341529a22b6bf27b6a392959ed4","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144845.png","hash":"85b1ce8059d4faf820def2d07cca092ead75545f","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144852.png","hash":"950bbb81d5907e36a3429ac3d052c43d197d3284","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144848.png","hash":"22e20cc225e1aeb7d642afda30f9251662244e1d","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144857.png","hash":"e20afd011b9fa7a85815e81badffc3e9e111e7d6","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230720162127440.png","hash":"9833060f8153f201a0a0b0159a090259a8a03d29","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230720162142889.png","hash":"9833060f8153f201a0a0b0159a090259a8a03d29","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822095942818.png","hash":"872a90ae3dcfde9f9e37260e1deea2fe973041c7","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822103602071.png","hash":"caf2522a3abf45b4d548a277f66050cd62a8fd7c","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822105722220.png","hash":"b15268cf891c291efb60b020254af1a8aa1eb690","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822105546386.png","hash":"63ba85f43e43806bc6997ddcb0215f2871567768","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822111942478.png","hash":"5bd1293b41cc732b510c17404ac56ae93b62fd01","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822112448330.png","hash":"41dac8b35753b244efdc347c3ffa799dad2649b0","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822112543774.png","hash":"ce69f1040ee75480389ba7a4ef4fa0e4d9f17221","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822113205328.png","hash":"975aade9183ce9c2a82fac88bd2a5797ebd0432b","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822112923800.png","hash":"4025f682956fc2641196541b3f6c60a4c46d4c36","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822134726602.png","hash":"c08ade3e18ad523944fb013fe0b206e9960f98c2","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822133904939.png","hash":"c08ade3e18ad523944fb013fe0b206e9960f98c2","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822142646593.png","hash":"8b4cf8ed0b25fe235bb028bf162ec4e087e97182","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822152114053.png","hash":"6e442b33f2a0e9e2c389c1382c49c8bf984607fe","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822151841755.png","hash":"ebe3fbf7bd6932abd935035e7622f154ed61acf7","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822163042684.png","hash":"7ef700bddee5707b2a69d9f8b8f833400a3eeac1","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135622.png","hash":"3c1a3eabf3bc357407e58a8219b2f30dba2a199a","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230825113322301.png","hash":"1fd332e1d443e73dc0c75053b6066970dc824936","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135633.png","hash":"87926b8222f29326113e03ac885db5dd6577e177","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135653.png","hash":"d024bcbfc315ce013760e2c3173a2301724f489c","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/03-19-23-140352.png","hash":"8c5e53a42097dce2f71b88436ec5c2d2f06f75a1","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140436.png","hash":"3d6215dedb730f538b5bfa6bbb8d8f96c5d6261f","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/05-19-23-140522.png","hash":"680d7edcd42d4aaa7297ea4f609e7d8ca554524c","modified":1695280313309},{"_id":"public/2023/09/11/ChatGTP搭建/23-11-23-132353.png","hash":"0044a33983b93e7f9943521efaacb6ec818b9612","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/07-21-23-150713.png","hash":"55695bbac35bf344929a2c27f2acdb4b7447b4b4","modified":1695280313309},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1695280313309},{"_id":"public/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1695280313309},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1695280313309},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1695280313309},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1695280313309},{"_id":"public/css/index.css","hash":"415259b926f098b10283e9ef4d874d61fdc33951","modified":1695280313309},{"_id":"public/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/42-21-23-144200.png","hash":"1da2d7e9d30a5554e04f749bd2bcb2e73677674a","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/33-05-23-173348.png","hash":"b8126515b6b6cd566b6ea4fee5f79773985fa5b9","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/33-05-23-173356.png","hash":"bc81da2dfff9be99fa2792866ce26f4a926e4bbf","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/40-05-23-174049.png","hash":"0ca07f346fd7b45b0ae84896ddf35f01fd4f5cf7","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174109.png","hash":"ad5cd51b5fbf2f89c1a78811dfd9f51307bdb2e1","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174120.png","hash":"a903ed10075130aad51d61a61ee60ff81a7c5398","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174130.png","hash":"35e930ecabe8009f30c5e3a517e21515ec1937ec","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174149.png","hash":"e505b56c4965e7d3e50dc77398fb339da2391b5a","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/19-05-23-171950.png","hash":"c05a973444e610d4969c01fd034c2c15b1a1ecfe","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172037.png","hash":"52b6371baf43e6541776fb740bc2d8cfa2a89646","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172042.png","hash":"16178974d2f52e84eeed4cfc64b84ffd2957d4a5","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172055.png","hash":"bf67dea56e25e324d490e3e92f22f774562be37e","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/20-05-23-172047.png","hash":"2de3c6522a1327605453dbc58115354f972ca36e","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144828.png","hash":"7136ac2cc74f9e0c35d984d68f8b34972cff70c8","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/48-21-23-144824.png","hash":"8a68052b6f10a00e1c2132bd1bc639dea22a7f2c","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/49-21-23-144901.png","hash":"6fbb89fac5ec061bc3e7ae28f89fbcb5593dcc58","modified":1695280313309},{"_id":"public/2023/09/21/进行JMeter分布式测试遇到的坑/49-21-23-144907.png","hash":"c7280d29060c6ec4045f7ec08b532707c8470aab","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822112903927.png","hash":"cc441442f76bd66ac649657c27483cca83bcef8f","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822113541137.png","hash":"8679e37217efa4ccd08a6737bc3ca8d998e4e545","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822114808809.png","hash":"55a42156f8c4ea76afde1768610b225a201b98d7","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822135321766.png","hash":"9ee5a1af0a4adbc440054b531268a50b883b09a6","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822135531324.png","hash":"62efb2aca3add5339076e0430745b5cdbe1555b0","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822135548543.png","hash":"31d735bc61ad5636ff866fd4531f8409ee36313a","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822135756380.png","hash":"a1b27a79c298ea568fda291d234d0d91d92967f1","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822135855228.png","hash":"9a8d9e680a6eedf368ad14989fd87c74ef9e9230","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822145022696.png","hash":"a3b47809dd0a8fba482f7471bd2d47f921728f4d","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822145325532.png","hash":"746ce511457a5d3f4af19529c249fd4281080d1e","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822151124832.png","hash":"eefcdb2f52d5131c986e0ddf95b3cc680ad24812","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822150817186.png","hash":"5807abc1195ae94ab24d83094d9f721cba0a5022","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230825111551346.png","hash":"e64a6b955f758bf6fa89dfb61ecaf4051895d189","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230823111152488.png","hash":"0f439b830941961f500d87be8d1450f1fe9a68c2","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140418.png","hash":"cf6b0c2b125d11ec9e727b984efcf6ea7ab6aaf5","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140423.png","hash":"b29cdcc1e7d0e2643489e52898ea036c1612935f","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140427.png","hash":"7b1d4a0f220943d8b8a8ba4b16741d77c52bd609","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140432.png","hash":"277678976dde910cd47df94ff29fbdeec541fca7","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140455.png","hash":"ca08c38236d78b22217e86ccf54eaf8ab809db67","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/05-19-23-140501.png","hash":"38a89076d9f0cd14bb8943331eb5ea46225b3734","modified":1695280313309},{"_id":"public/2023/09/11/ChatGTP搭建/23-11-23-132325.png","hash":"98fe4ce34d7f5462deccb15ac54d638f193137ec","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/40-21-23-144055.png","hash":"3af3bcafd24c651d1cc5e3eeeabfabab16b73d52","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/33-05-23-173335.png","hash":"840e3e16d5c8bf24cd669eeb7ab86d424083a960","modified":1695280313309},{"_id":"public/2023/09/21/JMeter分布式测试/41-21-23-144146.png","hash":"858fd86dc1a321ae279a46b31b44b8ce730ee3b7","modified":1695280313309},{"_id":"public/2023/08/30/JMeter学习/18-30-23-131804.png","hash":"b0f3e2b4fe9bedb9f616064f16e768db5ad4eadd","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/40-05-23-174059.png","hash":"617f09c2cb517e99eae67535390540fe71e47d23","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230815164033500.png","hash":"a058fa9378f6f1ebaf10c28557ab6d392bb3a011","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822100211467.png","hash":"b89278c81a556b68a48ff100b30b67286c0f592d","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822102038461.png","hash":"7b13eb3bb1c408dcf75cb6cf4631d2fe8aa72d60","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140439.png","hash":"1942d2c5834b1735b1007e92a71254c95568a2ab","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/05-19-23-140515.png","hash":"e2ebafc3401722f4099da93cf5155b0c8da2ba1e","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/05-19-23-140507.png","hash":"c84929ae3fb645a646257a722c13ead4b775fd01","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/05-19-23-140545.png","hash":"850d6a9af33230b2a7bcb2fc14dc42eafdf56637","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/33-05-23-173341.png","hash":"0e7a2919b407ac4ba2e1dcde740710b11a5e7549","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/34-05-23-173400.png","hash":"c30b1cc5896c6bd9045a4339e01b6c97019f5b7e","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174125.png","hash":"4c86391b7a9576ed6ebce615d3c89c32ca946abb","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/19-05-23-171942.png","hash":"13e4cba80c21759418b4a4db225ca67157ebb87f","modified":1695280313309},{"_id":"public/2023/09/05/JMeter的安装和启动-1/19-05-23-171931.png","hash":"c15cc08f9bb536791dd77440b5532e4cc0527dff","modified":1695280313309},{"_id":"public/2023/09/07/接口测试学习/01-07-23-110137.png","hash":"b474bb80ab419b5d4cb5ff896d1ed31e30203f1d","modified":1695280313309},{"_id":"public/img/sk.jpg","hash":"831894339e4a084cb77e8eb165d39756499ece7b","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822101641447.png","hash":"fcd41af7635f76a710ae24b6db3cbd5186dd6317","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135643.png","hash":"1406fbac4b66dc31d164c731b9c6ce6444557d2f","modified":1695280313309},{"_id":"public/2023/09/19/Badboy介绍/56-19-23-135648.png","hash":"1406fbac4b66dc31d164c731b9c6ce6444557d2f","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/03-19-23-140359.png","hash":"29e6bc98e6203377ab7d91a59af4b67a3aa7ce27","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140404.png","hash":"57fec547d21066ccd35d0faa166206c5360ba691","modified":1695280313309},{"_id":"public/2023/09/19/Badboy录制/04-19-23-140408.png","hash":"98f58be895f041a4d57023e8daeaec553829462b","modified":1695280313309},{"_id":"public/2023/09/11/ChatGTP搭建/24-11-23-132424.png","hash":"a19ebff182f3ba9bd754b46e87d82ee6a4ded5cb","modified":1695280313309},{"_id":"public/2023/09/05/JMeter常用目录介绍-1/34-05-23-173405.png","hash":"ae8a4f19c2e80a2dd34a8089360db7ac0898e1d5","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174105.png","hash":"1837c44b43cfd8f043f17ae3daa44a2b5978b232","modified":1695280313309},{"_id":"public/2023/09/05/JMeter插件管理-1/41-05-23-174143.png","hash":"b6aef721ebd888cc99d23beec8f757b0089a565b","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822101225757.png","hash":"5b5c9b97b479e118f8405069c5851f3bfea1ace6","modified":1695280313309},{"_id":"public/2023/09/07/接口测试学习/29-07-23-112918.png","hash":"86ad84610f895dccc564c588be239c4986907e06","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822102209820.png","hash":"a570fa223ba87b26743b77b537e8e79c197db498","modified":1695280313309},{"_id":"public/2023/08/29/Appium基础学习/image-20230822101402155.png","hash":"69910f2ab55824d6aa9b005a677f2ae5ac1d6fca","modified":1695280313309},{"_id":"public/img/top.jpg","hash":"abae1939e84bebf9b316175e6fccedd2a250b134","modified":1695280313309}],"Category":[{"name":"Appium基础学习","_id":"clmsu4nof0004fw48gye9cenz"},{"name":"Badboy学习","_id":"clmsu4non000cfw4891yodt0t"},{"name":"ChatGTP搭建教程","_id":"clmsu4np4000qfw48ckhp6bqx"},{"name":"Git基础学习","_id":"clmsu4npb000xfw484fch6r3z"},{"name":"JMeter分布式测试学习","_id":"clmsu4npg0012fw48ab5xh6pn"},{"name":"JMeter学习","_id":"clmsu4nph0015fw48a1jh16br"},{"name":"Nginx搭建","_id":"clmsu4npp001lfw4806vzam5t"},{"name":"Selenium学习","_id":"clmsu4npr001qfw482joobtxq"},{"name":"接口测试","_id":"clmsu4nq10020fw48brdj5plx"}],"Data":[{"_id":"_config","data":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}],"Page":[{"title":"学习中...","date":"2023-08-29T02:37:31.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 学习中...\ndate: 2023-08-29 10:37:31\n\ntype: \"categories\"\n---\n","updated":"2023-08-30T05:24:00.686Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clmsu4no00000fw485vk54kth","content":"","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":""},{"title":"movies","date":"2023-08-30T13:01:34.000Z","_content":"","source":"movies/index.md","raw":"---\ntitle: movies\ndate: 2023-08-30 21:01:34\n---\n","updated":"2023-08-30T13:01:34.961Z","path":"movies/index.html","comments":1,"layout":"page","_id":"clmsu4noc0002fw480y7681qn","content":"","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":""},{"title":"影像艺术","date":"2023-08-30T09:47:20.000Z","_content":"\n<div class=\"gallery-group-main\">\n{% galleryGroup '摄影' '人文、自然风光' '/gallery/photography' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '艺术' '绘画、雕塑' '/gallery/art' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}\n{% galleryGroup '壁纸' '超级好看的壁纸！' '/gallery/wallpaper' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}\n</div>\n","source":"gallery/index.md","raw":"---\ntitle: 影像艺术\ndate: 2023-08-30 17:47:20\n---\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '摄影' '人文、自然风光' '/gallery/photography' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '艺术' '绘画、雕塑' '/gallery/art' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}\n{% galleryGroup '壁纸' '超级好看的壁纸！' '/gallery/wallpaper' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}\n</div>\n","updated":"2023-08-30T13:18:36.584Z","path":"gallery/index.html","comments":1,"layout":"page","_id":"clmsu4noi0006fw48hy35gap0","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src=\"https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png\" alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">摄影</div>\n  <p>人文、自然风光</p>\n  <a href=\"/gallery/photography\"></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src=\"https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg\" alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">艺术</div>\n  <p>绘画、雕塑</p>\n  <a href=\"/gallery/art\"></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src=\"https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg\" alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>超级好看的壁纸！</p>\n  <a href=\"/gallery/wallpaper\"></a>\n  </figcaption>\n  </figure>\n  \n</div>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src=\"https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png\" alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">摄影</div>\n  <p>人文、自然风光</p>\n  <a href=\"/gallery/photography\"></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src=\"https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg\" alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">艺术</div>\n  <p>绘画、雕塑</p>\n  <a href=\"/gallery/art\"></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src=\"https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg\" alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>超级好看的壁纸！</p>\n  <a href=\"/gallery/wallpaper\"></a>\n  </figcaption>\n  </figure>\n  \n</div>\n"},{"title":"music","date":"2023-08-29T09:39:00.000Z","_content":"\n{% meting \"2400485596\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:400px\" \"preload:none\" \"theme:#ad7a86\"%}\n","source":"music/index.md","raw":"---\ntitle: music\ndate: 2023-08-29 17:39:00\n---\n\n{% meting \"2400485596\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:400px\" \"preload:none\" \"theme:#ad7a86\"%}\n","updated":"2023-09-07T02:00:55.255Z","path":"music/index.html","comments":1,"layout":"page","_id":"clmsu4nok0008fw484bx8g1rc","content":"\n    <div id=\"aplayer-gJMtMfdf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"2400485596\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"400px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":"\n    <div id=\"aplayer-gJMtMfdf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"2400485596\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"400px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n"},{"title":"tags","date":"2023-08-29T05:44:31.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-08-29 13:44:31\ntype: \"tags\"\n---\n","updated":"2023-08-29T05:45:18.442Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clmsu4nol000afw48hlgi88ot","content":"","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":""},{"title":"art","date":"2023-08-30T13:17:24.000Z","_content":"","source":"gallery/art/index.md","raw":"---\ntitle: art\ndate: 2023-08-30 21:17:24\n---\n","updated":"2023-08-30T13:17:24.495Z","path":"gallery/art/index.html","comments":1,"layout":"page","_id":"clmsu4noo000ffw48f99v9wud","content":"","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":""},{"title":"photography","date":"2023-08-30T13:17:24.000Z","_content":"\n{% gallery %}\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n\n{% endgallery %}\n\n\n","source":"gallery/photography/index.md","raw":"---\ntitle: photography\ndate: 2023-08-30 21:17:24\n---\n\n{% gallery %}\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n\n{% endgallery %}\n\n\n","updated":"2023-08-31T05:34:32.775Z","path":"gallery/photography/index.html","comments":1,"layout":"page","_id":"clmsu4nos000hfw484sn36x75","content":"<div class=\"gallery\">\n    <div class=\"fj-gallery  data\" data-rowheight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\",\"alt\":\"\"}]</span>\n    </div>\n    <button class=\"gallery-load-more\"><span>加载更多</span><i class=\"fa-solid fa-arrow-down\"></i></button>\n    </div>\n\n\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":"<div class=\"gallery\">\n    <div class=\"fj-gallery  data\" data-rowheight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\",\"alt\":\"\"}]</span>\n    </div>\n    <button class=\"gallery-load-more\"><span>加载更多</span><i class=\"fa-solid fa-arrow-down\"></i></button>\n    </div>\n\n\n"},{"title":"wallpaper","date":"2023-08-30T13:17:24.000Z","_content":"","source":"gallery/wallpaper/index.md","raw":"---\ntitle: wallpaper\ndate: 2023-08-30 21:17:24\n---\n","updated":"2023-08-30T13:20:13.043Z","path":"gallery/wallpaper/index.html","comments":1,"layout":"page","_id":"clmsu4noy000mfw485z0edjcy","content":"","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","cover_type":"img","excerpt":"","more":""}],"Post":[{"title":"Appium学习","date":"2023-08-29T01:37:08.000Z","keywords":"Appium基础","abbrlink":"","decription":null,"top_img":null,"cover":"https://s2.loli.net/2023/08/30/52LHYFsPjieb4K8.png","_content":"\n\n\n# **移动端自动化测试框架之Appium**\n\n## Appium元素定位\n\n元素定位工具：\n\n- Android使用Android—SDK里的Uiautomatorviewer工具。\n- IOS使用Appium Desktop里的Appium Inspector检测器。\n\n#### 1.\t**By_id定位（废弃统一用MobileBy类）**\n\n通过id属性定位元素，IOS应用上的元素没有这个属性，所有仅支持Android。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_id(\"id属性值\")\n#复数\ndriver.find_elements_by_id(\"id属性值\")\n```\n\n如下图所示：利用Uiautomatorviewer工具查看元素信息，resource-id属性就是元素的id属性。\n\n{% asset_img  image-20230822155516893.png %}\n\n练习：\n\n开启Appium服务，执行如下代码：\n\n```python\n\"\"\"\n1.学习目标\n\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)\n\t练习目标：掌握元素定位方式id定位\n2.操作步骤\n\tid定位\n\t\t只适用于Android，IOS不支持，id并不是唯一属性标识\n\t\tdriver.find_element_by_id(\"id属性值\")#单数\n\t\tdriver.find_elements_by_id(\"id属性值\")#复数\n3.需求\n\t在设置App中使用id属性定位”显示“\n\"\"\"\n#1.导入appium\nimport time\nfrom appium import webdriver\n\n#2.创建Desired capabilities对象，添加启动参数\ndesired_caps = {\n    \"platformName\":\"Android\",#系统名称\n    \"platformVersion\":\"7.1.2\",#系统版本\n    \"deviceName\":\"127.0.0.1:62001\",#设备名称\n    \"appPackage\":\"com.android.settings\",#App包名\n    \"appActivity\":\".Settings\"#App启动名\n}\n\n#3.启动App\ndriver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n\n#4.定位元素\n#在移动端，元素的id不再是唯一的，\n#我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。\n#这个时候我们就要用driver.find_element_by_id来定位元素\n#对应的字段resource-id属性值。\n#4.1 定位设置ap界面中的所有标题\nid_elements= driver.find_elements_by_id(\"android:id/title\")\n\n#4.2 查看一共获取了多少标题title\nprint(\"元素数量：\"+str(len(id_elements)))\n\n#4.3 遍历获取标题对应的文本\nfor element in id_elements:\n    print(element.text)#遍历打印所有元素的text值\n    \n#5.关闭App\ntime.sleep(3)\ndriver.quit()\n```\n\n输出结果如下：\n\n{% asset_img  image-20230822161734990.png %}\n\n#### 2.\tby_name定位\n\nAppium版本在1.5之后，Android就不再支持name的元素定位方法。\n\nAndroid如果使用name方法，则报如下错误：\n\n{% asset_img  image-20230822162016028.png %}\n\nIOS可以正常使用name元素定位。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_name(\"name\")\n#复数\ndriver.find_element_by_name(\"name\")\n```\n\n如图所示：利用Appium Inspector检查器，name属性指的是name属性。\n\n{% asset_img image-20230822162337100.png %}\n\n使用命令：driver.find_element_by_name(\"3个月\")\n\n这里我们就不做演示了。\n\n#### 3.\t**by_class_name定位**\n\n通过class_name属性定位元素。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_class_name(\"class值\")\n#复数\ndriver.find_element_by_class_name(\"class值\")\n```\n\n1. **Android**:\n\n   如图所示：利用Uiautomatorviewer工具查看，class_name属性指的是class属性。\n\n   {% asset_img image-20230822162910046.png %}\n\n2. **IOS:**\n\n   如图所示：利用Appium Inspector检查器，class_name属性指的是type属性。\n\n   {% asset_img image-20230822163042684.png %}\n\n   使用命令：driver.find_element_by_class_name(\"XCUIElementTypeStaticText\")\n\n   练习：\n\n   ```python\n   \"\"\"\n   1.学习目标\n   \t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)\n   \t练习目标：掌握元素定位方式id定位\n   2.操作步骤\n   \tid定位\n   \t\t只适用于Android，IOS不支持，id并不是唯一属性标识\n   \t\tdriver.find_element_by_class_name(\"id属性值\")#单数\n   \t\tdriver.find_elements_by_class_naem(\"id属性值\")#复数\n   3.需求\n   \t在设置App中使用id属性定位”显示“\n   \"\"\"\n   #1.导入appium\n   import time\n   from appium import webdriver\n   \n   #2.创建Desired capabilities对象，添加启动参数\n   desired_caps = {\n       \"platformName\":\"Android\",#系统名称\n       \"platformVersion\":\"7.1.2\",#系统版本\n       \"deviceName\":\"127.0.0.1:62001\",#设备名称\n       \"appPackage\":\"com.android.settings\",#App包名\n       \"appActivity\":\".Settings\"#App启动名\n   }\n   \n   #3.启动App\n   driver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n   \n   #4.定位元素\n   #在移动端，元素的id不再是唯一的，\n   #我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。\n   #这个时候我们就要用driver.find_element_by_id来定位元素\n   #对应的字段resource-id属性值。\n   #4.1 定位设置ap界面中的所有标题\n   class_elements= driver.find_elements_by_class_name(\"android.widget.TextView\")\n   \n   #4.2 查看一共获取了多少标题title\n   print(\"元素数量：\"+str(len(class_elements)))\n   \n   #4.3 遍历获取标题对应的文本\n   for element in class_elements:\n       print(element.text)#遍历打印所有元素的text值\n       \n   #5.关闭App\n   time.sleep(3)\n   driver.quit()\n   ```\n\n   运行结果：\n\n   {% asset_img image-20230822163521210.png %}\n\n#### 4.\t**by_xpath定位**\n\n通过xpath定位元素，这样就可以在页面中定位一个单个的元素了。\n\n（如果一个元素的id属性或者class_name属性也是唯一的，我们也可以通过id属性或者class_name属性进行定位。）\n\n代码如下：\n\n```python\n#单数\nderiver.find_element_by_xpath(\"xpath\")\n#复数\nderiver.find_elements_by_xpath(\"xpath\")\n```\n\n在移动端xpath用法与Web Selenium中的用法一致，在移动端自动化测试中使用xpath定位元素是比较多的。\n\n练习：\n\n```python\n\"\"\"\n1.学习目标\n\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)\n\t练习目标：掌握元素定位方式id定位\n2.操作步骤\n\tid定位\n\t\t只适用于Android，IOS不支持，id并不是唯一属性标识\n\t\tdriver.find_element_by_xpath(\"xpath表达式\")#单数\n\t\tdriver.find_elements_by_xpath(\"xpath表达式\")#复数\n3.需求\n\t在设置App中使用xpath定位”显示“标题\n\"\"\"\n#1.导入appium\nimport time\nfrom appium import webdriver\n\n#2.创建Desired capabilities对象，添加启动参数\ndesired_caps = {\n    \"platformName\":\"Android\",#系统名称\n    \"platformVersion\":\"7.1.2\",#系统版本\n    \"deviceName\":\"127.0.0.1:62001\",#设备名称\n    \"appPackage\":\"com.android.settings\",#App包名\n    \"appActivity\":\".Settings\"#App启动名\n}\n\n#3.启动App\ndriver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n\n#4.定位元素\n#4.1 xpath定位“显示”按钮\nmore = driver.find_elements_by_xpath(\"//*[@text='显示']\")\n\n#4.2 点击“显示”元素，进入显示页面\nmore.click()\n\n\n    \n#5.关闭App\ntime.sleep(3)\ndriver.quit()\n```\n\n#### 5.\t**by_accessibility_id定位**\n\n通过accessibility_id属性查找元素。（移动端特有）\n\n标识附加到给定元素的辅助功能或标签的字符串。\n\n针对ios的辅助功能标识符和针对Android的内容描述。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_accessibity_id(\"accessibity_id\")\n\n#复数\ndriver.find_element_by_accessibity_id(\"accessibity_id\")\n```\n\n1. Android：\n\n   如图所示：利用Uiautomatorviewer工具查看，accessility_id属性指的是content-desc属性。\n\n   {% asset_img image-20230825111551346.png %}\n\n   练习：\n\n   ```python\n   \"\"\"\n   1.学习目标\n    \t掌握appium中accessibility_id元素定位方法\n    2.操作步骤\n    \t使用方法：\n    \tdriver.find_element_by_accessibility_id(\"content-desc属性\")\n    3.需求\n    \t在设置App中使用accessibility_id方法定位搜索按钮\n   \"\"\"\n   \n   #1.导入appium\n   import time\n   from appium import webdriver\n   \n   #2.创建Desired capabilities对象， 添加启动参数\n   desired_caps = {\n       \"deviceName\": \"真机序列号或模拟器本机地址127.0.0.1 ：+模拟器端口\",#设备名称\n       \"platformName\"： \"Android\",#系统名称\n       \"platformVersion\": \"12\",#系统版本\n       \"appPackage\": \"com.android.setting\",#包名\n       \"appActivity\": \".Settings\"#app启动名\n   }\n   \n   #3.启动App\n   driver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n   \n   #4.定位元素\n   #4.1 定位搜索按钮，通过accessibility_id方法\n   search = driver.find_element_by_accessibility_id(\"搜索\")\n   \n   #4.2点击搜索按钮\n   serch.click()\n   \n   #5.关闭app\n   time.sleep(3)\n   driver.quit()\n   ```\n\n   \n\n2. IOS\n\n   如图所示：利用Appium Inspector检查器，accessibility_id指的是accessibility id属性或者name属性或label属性。\n\n   {% asset_img image-20230825113322301.png %}\n\n   使用方法：driver.find_element_by_accessibility_id(\"More Info\")\n\n#### 6.\t**By_android_uiautomator定位**\n\n通过Android Uiautomator搜索查找元素。（Android系统特有）\n\n这允许使用Uiautomator库，使用递归元素搜索来找到Android应用程序中的元素。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_android_uiautomator(\"android_uiautomator\")\n\n#复数\ndriver.find_element_by_android_uiautomator\n```\n\n可以利用uiautomatorviewer工具查看元素属性信息。\n\nuiselector工具类介绍：\n\n1. text属性的方法（text指的是text属性）\n\n   （text指的是text属性）\n\n   - 完全匹配。\n\n     driver.find_element_by_android_uiautomator('new UiSelector(),text(\"AndroidUI\")')\n\n   - 包含匹配（模拟定位）。\n\n     driver.find_element_by_android_uiautomator('new UiSelector().textContains(\"Android\")')\n\n   - 以什么内容开始匹配。\n\n     driver.find_element_by_android_uiautomator('new UiSelector().textStartWith(\"AndroidUI\")')\n\n   - 正则匹配查找。\n\n     driver.find_element_by_android_uiautomator('new UiSelector().textMatches(\"^Android.*\")')\n\n2. className属性的方法\n\n   （className指的是class属性）\n\n   - 完全匹配\n\n     driver.find_element_by_uiautomator('new UiSelector().className(\"android.widget.TextView\").text(\"AndroidUI\")')\n\n   - 正则匹配查找\n\n     driver.find_element_by_android_uiautomator('new UiSelector().classNameMatches(\".*TextViews\").text(AndroidUI)')\n\n3. xpath方法定位\n\n   driver.find_element_by_android_uiautomator('new UiSelector().className(\"android,widget.TextView\").childSelector(new UiSelector().text(\"AndroidUI\")')\n\n4. resourceId属性的方法\n\n   （resourceId指的是resource-id属性）\n\n   - driver.find_element_by_android_uiautomator('new UiSelector().resourceId(\"com.android.calculator2:id/op_add\")')\n   - driver.find_element_by_android_uiautomator('new UiSelector().resourceIdMatches(\".*id/op_adds\")')\n\n5. description属性的方法\n\n   （description指的是content-desc属性）\n\n   - driver.find_element_by_android_uiautomator('new UiSelector().description(\"加\")')\n   - driver.find_element_by_android_uiautomator('new UiSelector().descriptionStartsWith(\"加\")')\n   - driver.find_element_by_android_uiautomator('new UiSelector().descriptionMatches(\"^加.*\")')\n\n   UiSelector类中还支持其他一些方法，比如根据控件属性是否可聚焦可长按等来缩小要定位的控件的范围，具体使用方法不一一列举了。\n\n   练习：\n\n   ```python\n   \"\"\"\n   1.学习目标\n   \t了解appium中元素定位Android专用方法 Android_UIautomator\n   2.操作步骤\n   \t使用方法：\n   \tdriver.find_element_by_android_uiautomator(\"java代码\")\n   \tjava代码中使用UiSelector类来处理元素的定位\n   \t\tnew UiSelector().text(\"本文内容\")\n   3.需求\n   \t在设置App中使用Android专用的定位方法\n   \"\"\"\n   \n   #1.导入appium\n   import time\n   from appium import webdriver\n   \n   #2.创建Desired capabilities对象，添加启动参数\n   desired_caps = {\n       \"deviceName\": \"127.0.0.1:62001\",#设备名称\n       \"platformName\": \"Android\",#系统名称\n       \"platformVersion\": \"12\",#系统版本\n       \"appPackage\": \"com.android.settings\",#App包名\n       \"appActivity\": \".Settings\"#app启动名\n   }\n   \n   #3.启动App\n   driver = webdriver.Remote(\"http://127.0.0.1/wd/hub\",desired_caps)\n   \n   #4.定位元素\n   #4.1定位蓝牙，通过Android_Uiautomator方法\n   #单引号里面是java代码，使用UiSelector这个类来定位元素。\n   blue_tooth = driver.find_element_by_android_uiautomator(\"new UiSelector().text(\"蓝牙\")\")\n   \n   #注意：\n   #上面new UiSelector().text(\"蓝牙\")中，一定是外单引号，里边双引号\n   #因为这是一段java代码，而text()方法中要传入一个string类型的参数\n   #java中String类型的参数是加双引号的，所以必须是外单内双\n   #否则会报错。\n   \n   #4.2点击搜索按钮\n   blue_tooth.click()\n   \n   #5.关闭App\n   time.sleep(3)\n   driver.quit()\n   ```\n\n## Web页面自动化测试，元素定位是页面自动化测试的第一步。\n\n## App自动化测试的第一步，也是元素的定位。\n\n## App中的元素定位工具大致有三种：\n\n1. ##   Uiautomatorviewer\t工具\n\n2. ##   Appium \tInspector\t工具\n\n3. ##   Chrome\tInspect\t工具\n\n## **Uiautomatorviewer**\n\n### 1.\tUiautomatorviewer介绍\n\n在开始编写代码之前，需要获取待测应用的UI元素，可以通过Uiautomatorviewer工具来获取应用的界面截图并分析。\n\nUiautomatorviewer工具获取当前UI界面的快照，提供一个可视化的界面，来查看UI布局结构，并且可以查看各个控件的相关属性。利用这些信息来选择特定的UI组件并创建App中的自动化UI测试代码。\n\n总结：\n\n- Uiautomatorviewer工具是专门用来定位Android系统App中原生页面中的元素。\n- Uiautomatorviewer是AndroidSDK里的一个工具，这个工具在AndroidSDK目录下的tools文件夹下。（IOS系统在tools\\bin的子目录下）\n- Uiautomatorviewer使用简单，速度也相对比较快。\n\n### 2.\tUiautomatorviewer工具打开方式\n\n在下载的Android—SDK中找到tools里的Uiautomatorviewer.bat文件双击打开工具\n\n{% asset_img image-20230822093033212.png %}\n\n先会出现一个黑窗口，然后就会出现一个Uiautomatorviewer工具的界面\n\n{% asset_img image-20230822093619228.png %}\n\n### 3.\tUiautomatorviewer布局界面介绍\n\n{% asset_img image-20230822093814089.png %}\n\n整个界面分四个区域:\n\n   1. **工作栏区**\n\n      在工作栏中共有4个按钮从左至右分别用于：\n\n      - 打开已保存的界面快照和布局\n      - 抓取当前手机屏幕截图（Device Screenshoot Uiautomator dupm）\n      - 带有压缩层次结构的设备屏幕截图（Device Screenshoot with Compressed Hierarchy (Uiautomator dump -compressed)）第二按钮于第三按钮把全部布局呈现出来，而第三按钮只呈现有用的控件布局。比如存在一个Frame，但只有装饰功能，那么点击第三按钮时，可能不被呈现。\n      - 保存当前屏幕界面的快照和布局\n\n​\t\t\t2.**屏幕截图区**\n\n​\t\t\t\t显示当前屏幕显示的布局图片\n\n​\t\t\t3.**布局区**\n\n​\t\t\t\t已Xml树的形式，显示控件布局\n\n​\t\t\t4.**控件属性区**\n\n​\t\t\t\t当点击某一控件时，将显示该控件属性信息。\n\n### 4.Uiautomatorviewer工具的使用\n\n1. ​\t**Uiautomatorviewer工具使用的前提**\n   - 打开Uiautomatorviewer工具\n   - 所测试设备是开机状态（手机或者模拟器）\t\t\t\t\n   - 确保电脑与设备是链接状态，也就是cmd进入命令行终端，输入 adb connect 127.0.0.1:62001链接夜神模拟器，输入 adb devices 能够获取设备名称\n\n如果电脑没有与设备不是链接的状态，点击Uiautomatorviewer工具栏中的第二个按钮，来抓取手机界面是抓不到的。\n\n如下图所示：\n\n{% asset_img image-20230822095942818.png %}\n\n2. ​\t**抓取当前手机的屏幕界面**\n\n​\t\t\t\t\t就是点击Uiautomatorviewer工具栏中的第二个按钮进行抓取:\n\n{% asset_img image-20230822100211467.png %}\n\n说明:点击完成后，设备上的界面就会被同步到这个工具的左侧，点击左侧需要查看的控件，在这个工具的右侧就可以看到这个控件对应的详细信息。\n\n提示:\n\n当Uiautomatorviewer能够不抓取手机屏幕时，可以先关闭和重启adb服务\n\n执行命令如下：\n\n- adb\tkill-server\n- adb    start-server\n\n​\t\t3.**定位其它页面里的元素**\n\n​\t\t\t如果需要继续定位其他页面里的元素，先在设备中操作到定位元素的页面后，再次点击工具左上角的排子按钮，就可以抓取最新的页面元素信息。\n\n例如：\n\n定位完设置App中界面的元素，我又想定位淘宝首页的页面元素。\n\n首先在手机中打开淘宝App，进入到淘宝App的首页。\n\n{% asset_img image-20230822101225757.png %}\n\n然后点击Uiautomatorviewer工具栏中的第二个按钮，来抓取新的界面\n\n{% asset_img image-20230822101402155.png %}\n\n​\t\t\t\t\t4.**保存**\n\n​\t\t\t\t\t\t点击保存按钮，可保存抓取的屏幕截屏和一个uix文件（XML格式的的页面布局，就相当于页面源码）。\n\n{% asset_img image-20230822101641447.png %}\n\n我们可以看到文件夹中会有上面说过的两个文件。\n\n{% asset_img image-20230822101739507.png %}\n\n我们也可以对保存的文件进行重命名，方便我们以后的使用和管理。\n\n{% asset_img image-20230822101848241.png %}\n\n​\t\t\t\t5.打开已保存的界面快照和布局\n\n​\t\t\t\t点击打开文件，可以将之前保存好的页面屏幕截图和.uix文件导入进来。\n\n{% asset_img image-20230822102038461.png %}\n\n点击ok之后，就选显示以前保存过的界面信息了。\n\n如下图所示:\n\n{% asset_img image-20230822102209820.png %}\n\n导入后即可进行元素定位操作。\n\n## Appium Inspector\n\n### 1.\t**Appium Inspector**\n\nAppium Server有两种启动方式\n\n- 一种Appium Desktop有图形界面的启动方式，称之为桌面版；\n- 另一种版本是通过npm安装，使用命令行参数启动的Appium Server；\n\n而Appium Inspector工具就在Appium Desktop中，Appium Inspector是Appium Desktop附带的一个元素定位检查器，用来调试定位应用程序很方便。\n\nAppium Inspector工具同时支持Android系统和IOS系统中原生界面的元素定位。\n\n### 2.   **Appium Inspector打开方式**\n\nAppium  Desktop安装完成之后，双击打开。\n\n{% asset_img image-20230822103602071.png %}\n\n说明：界面有3个Tab选项\n\n- Simple：默认配置，监听本机4723端口；\n- Advanced：高级设置，可以自定义Appium Server端的配置，配置好后可以保存到Presets；\n- Presets：修改Advanced高级设置中的配置项。\n\n一般我们测试直接使用Simple即可，点击Start Server按钮，启动Appium Server，并开启监听本机4723端口。开启服务后，界面跳转到服务端控制台，如下图所示：\n\n{% asset_img image-20230822104412007.png %}\n\n提示：\n\n控制台显示运行的脚本中的日志信息，右上角有3个按钮，分别是：\n\n- 第一个按钮Start  Inspector Session，开启Appium Inspector定位工具；注意：inspector会新开一个Session；\n- 第二个按钮Get Raws Logs ，下载当前控制台中的log信息；\n- 第三按钮Stop Server，关闭当前的Appium Server。\n\n有两种方式可以启动Appium Inspector工具，\n\n- 方式一：点击右上角三个按钮中的第一个（一个放大镜样子的按钮），打开Appium Inspector工具。\n- 方式二：点击左上角File-->New Session Window.....Ctrl+N可以打开Appium Inspector工具\n\n如下图：\n\n{% asset_img image-20230822105454030.png %}\n\nAppium  Inspector工具开启后的界面如下图：\n\n{% asset_img image-20230822105546386.png %}\n\n### 3.Appium Inspector布局介绍\n\nAppium Inspector布局如下图所示：\n\n{% asset_img image-20230822105722220.png %}\n\n上图说明：\n\n1. 布局1是Appium Inspector服务的设置。Automatic  Server：自动服务器  Custom  Server:定制服务器 Select  Cloud  Providers:选择云提供商我们一般使用Automatic Server即可：will use currently-running Appium Desktop server http：//localhost：4723将使用当前运行的Appium桌面服务器http：//localhost：4723\n2. 布局2是高级设置。可以设置Allow Unauthorized Certificates：允许未经授权的证书。Use Proxy：使用代理服务器。初学一般我们不进行高级设置。\n3. 布局3是Desired Capabilities参数设置。Desired  Capabilities：编写Desired  Capabilities参数。Saved Capability Sets：已保存的Desired Capabilities，可以进行查看和修改。Attach to Session....:附加到会话...（用到的时候再说）\n\n### 4.Appium Inspector工具的配置\n\n1. **Appium Inspector工具使用前提**\n\n   - 打开Appium Desktop，开启Appium Inspector工具\n   - 所测试设备是开机状态（手机或者模拟器）\n   - 确保电脑与设备是链接状态，也就是从cmd进入命令行终端，输入  adb  connect 127.0.0.1:62001链接夜神模拟器，输入  adb   Devices能够获取设备名称。\n\n2. **Appium Inspector的服务器设置和高级设置**\n\n   - 服务器设置：选择Automator Server （一定要记得点击一下，进行选中）\n   - 高级设置：不进行设置\n\n3. **编写Desired Capabilities参数（重点）**\n\n   可以在左侧一行一行手动添加，如下图所示：\n\n   {% asset_img image-20230822111942478.png %}\n\n   提示：第二列的格式是针对第三列value值而言的。\n\n   也可以把Json格式的数据编辑好，直接粘贴在右侧Json Representation里。\n\n   {% asset_img image-20230822112351826.png %}\n\n   直接把Json格式的数据直接粘贴过来。\n\n   {% asset_img image-20230822112448330.png %}\n\n   点击保存之后，数据会同步到左侧，如下图所示：\n\n   {% asset_img image-20230822112543774.png %}\n\n4. **保存Desired Capabilities参数**\n\n   如有需要，在编辑完成Desired Capabilities参数之后，可以对其进行保存，方便以后的管理和使用。\n\n   {% asset_img image-20230822112903927.png %}\n\n   {% asset_img image-20230822112923800.png %}\n\n5. **查看和修改已存储的Desired Capabilities**\n\n   点击Saved Capabilities sets标签页，可以查看和修改已存储的Desired Capabilities。\n\n   {% asset_img image-20230822113205328.png %}\n\n6. **开启Session，连接手机获取手机界面**\n\n   点击start Session，开启使用Appium Inspector工具。\n\n   如下图所示：\n\n   {% asset_img image-20230822113541137.png %}\n\n   说明：\n\n   - Appium Inspector需要我们手动创建一个session，其实也就是一个客户端，和Appium Server连接，并且需要在Desired Capabilities 里面填入一些参数。\n   - 所需功能是在Desired Capabilities对象中编码的键和值，当请求新的自动化会话时，由Appium客户端发送到Appium Server服务器。Desired Capabilities告诉Appium驱动程序有关您希望测试如何工作的各种重要信息。最终Desired Capabilities将作为Json对象发送到Appium。\n   - 所需功能的Desired Capabilities对象可以在WebDriver测试中编写脚本，也可以在Appium Server GUI中设置（通过Inspector会话中，就是上边的介绍方式）。\n\n   提示：\n\n   当Appium Inspector能够不能抓取手机屏幕时，可以关闭和重启adb服务，或者重启Appium Inspector服务。\n\n   命令如下：\n\n   - adb kill-server\n   - adb start-server\n\n### 5.\t**Appium Inspector工具的使用**\n\n1. **Inspector定位控件界面的详细介绍**\n\n   {% asset_img image-20230822114808809.png %}\n\n   上图说明：\n\n   - 布局1：截图的手机界面\n\n     可以点击选择元素。\n\n   - 布局2：顶部操作栏\n\n     从左往右的按钮依次是\n\n     Select Element：选择元素。\n\n     Swipe By Coordinates：选择滑动的起始和结束位置。\n\n     Tap By Coordinates：使得手机界面变换可操作状态，可以点击界面的元素。\n\n     Back：模拟Android的返回键。\n\n     Refresh Source & Screenshot：刷新页面，用来重新获取手机当前界面。\n\n     Start Recording：录制操作。\n\n     Search for element：校验定位表达式。\n\n     Copy XML Source to Clipboard：复制XML树。\n\n     Quit Session & Close Inspector：退出当前Session。\n\n   - 布局3：XML树\n\n     以XML树的形式，展示界面上的控件布局。\n\n   - 布局4：控件属性区域\n\n     选择某个控件，在这里可以显示该控件的所有属性和值。\n\n   \n\n2. **Selected  Element的介绍**\n\n   选择元素功能：\n\n   {% asset_img image-20230822133904939.png %}\n\n   1. **顶部的Tap、Send Keys、Clear**\n\n      模拟用户的操作：\n\n      - tap：相当于点击元素。\n      - Send keys：输入值、针对输入框的操作。\n      - Clear：清除所有值。\n\n      建议：不建议用这些操作，因为很容易造成断开连接（左侧界面一直loading）.....反正我这边经常这样，如果不会的话当然最好用啦！\n\n   2. **Find By xpath**\n\n      提供了该元素的XPATH表达式\n\n      不推荐用，绝对路径太长了.....还是自己写吧！\n\n   3. **那串黄色背景色的英文**\n\n      不建议使用XPATH定位器，因为它很脆弱，建议让开发团队提供独特的可访问性定位器（即：resource-id）\n\n   4. **Attribute-Value**\n\n      属性列表\n\n3. **Search for element的介绍**\n\n   搜索元素功能，位置如下图：\n\n   {% asset_img image-20230822134908939.png %}\n\n   点击弹出如下界面：\n\n   选择定位策略，如下图：\n\n   {% asset_img image-20230822134952072.png %}\n\n   填写对应的定位表达式，如下图：\n\n   {% asset_img image-20230822135027681.png %}\n\n   点击Search 就可以进行元素定位了。\n\n   如果能找到Element的话表达式就是正确的，然后你还可以针对元素进行一些操作。\n\n4. **在Appium Inspector中操作手机**\n\n   当我们使用Appium Inspector定位工具获取到手机设置App界面的时候，如下图：\n\n   {% asset_img image-20230822135321766.png %}\n\n   点击顶部操作栏中的Tap By Coordinates按钮，使得手机界面变换可操作状态。\n\n   然后我们在左侧的手机界面中点击显示，就可以进入到显示的界面中了。\n\n   {% asset_img image-20230822135531324.png %}\n\n   {% asset_img image-20230822135548543.png %}\n\n   进入到显示之后，现在我们还是保持在可操作手机的状态。\n\n   之后我们就可以继续操作手机，也可以点击Select Element按钮，在当前页面中进行选择的元素。\n\n   {% asset_img image-20230822135756380.png %}\n\n   我们也可以点击Back按钮，返回到设置App的首界面。\n\n   {% asset_img image-20230822135855228.png %}\n\n   提示：这一点Appium Inspector定位工具就比Uiautomatorviewer定位方便多了。\n\n5. **Start Recording的介绍（了解）**\n\n   {% asset_img image-20230822140101952.png %}\n\n   - 操作步骤：点击开始录制之后，在点击Tap By Coordinates，进入界面可操作状态。\n   - 然后就可以开始点击你想要的元素了，这个时候就开始录制了。\n   - 最后在Recorder下面会显示对应的代码，右侧可以选择不同的语言。\n   - 建议：不要过多使用该功能，可以看到录制的代码是根据坐标去定位元素的，换个手机同一个元素坐标可能就不同了，可移植性不高。\n\n### 6.\t**Uiautomatorviewer工具和Appium Inspector工具对比**\n\n1. **Uiautomatorviewer的局限性：**\n\n   1. 不能校验我们写的定位表达式是否正确定位到控件（类似浏览器上的F12）\n   2. 连接不够稳定\n   3. 不能模拟用户动作\n\n2. **Appium Desktop的Inspector的优势：**\n\n   1. 可以校验定位表达式（如：XPATH表达式）。\n   2. 通过设置Desired Capabilities来连接手机，比较稳定。\n   3. 可以模拟用户动作（如：点击、返回、滑动等操作）。\n   4. 可以录制一系列操作，然后转换成代码。\n\n   提示：\n\n   学习或者编写脚本过程中，使用桌面版会方便一些，因为桌面版还提供了定位工具。而实际运行的时候，使用Server版本会更灵活，更容易与CI工具进行集成。\n\n## Chrome  Inspect\n\n### 1.\t**Chrome Inspect的介绍**\n\nChrome Inspect定位工具是用来抓取App中Webview页面的。\n\n为了项目的需求，为了更好的保证效果和布局跨平台，Android&H5混合开发一般是我们不错的选择。Google浏览器中的Chrome Inspect定位工具，提供了一个移动端Web页面开发调试的功能，通过它我们可以调试手机页面，可以看到页面的源码，从而进行元素的定位。\n\n**使用chrome Inspect定位工具的前提条件**\n\n使用Chrome开发人员工具调试原生Android应用中的WebView，Android版本应该在Android4.4（kitkat）或更高版本上，通过DevTools在原生Android应用中调试WebView页面中的内容。\n\n### 2.\t**Chrome Inspect打开方式**\n\n打开PC端的Chrome浏览器，在访问地址栏中输入Chrome：//inspect/就可以了，就是这么简单。\n\n如下图：\n\n{% asset_img image-20230822142646593.png %}\n\n### 3.\t**Chrome Inspect工具的使用**\n\n1. **Chrome Inspect工作前提**\n\n   - 所测试设备是开机状态（手机或者模拟器）。\n\n   - 确保电脑与设备是链接状态，也就是cmd进入命令行终端，\n\n     输入adb connect 127.0.0.1:62001链接夜神模拟器，\n\n     输入adb devices能够获取设备名称。\n\n2. **Chrome Inspect操作**\n\n   1. **在App中打开含有WebView的页面**\n\n      例如：开百度App，进入到微博登陆的界面就是一个含有Webview的页面\n\n      如下图：\n\n      {% asset_img image-20230822144556161.png %}\n\n   2. **在Chrome Inspect中识别到Webview页面**\n\n      我们进入到PC端的Chrome浏览器中，访问地址栏中输入chrome：//inspect/（没有显示的话就点击一下刷新），就可以检测到当前应用程序界面是Webview页面了。\n\n      如下图：\n\n      {% asset_img image-20230822145022696.png %}\n\n   3. 点击inspect可以进入调试视图\n\n      点击如上图中的inspect，可以进入Chrome Inspect工具的调试视图。\n\n      会弹出一个新窗口，显示当前页面的Webview元素信息。\n\n      并且元素定位方法同Selenium WebDriver一致。\n\n      {% asset_img image-20230822145325532.png %}\n\n      就是这么简单。\n\n4.**使用Chrome Inspect遇到的问题**\n\n1. **Android系统版本问题**\n\n   Android移动设备版本应该在Android4.4或更高版本上。\n\n   从Android4.4开始，webkit是支持远程调试的。\n\n2. **所测App的debug模式要打开**\n\n   在使用Chrome Inspect工具调试移动端App的Webview页面的时候，需要将该App的debug模式打开。\n\n   但其实大部分App的debug模式都是关闭的，要去找一个开启debug模式的版本还是比较麻烦的，因此需要使用借助第三方工具来强制开启任何App的Android webview debug模式，使之可以使用chrome Inspect。\n\n   而这个工具就是Xposed。\n\n3. **Xposed工具的安装**\n\n   1. **将设备进行root。**\n\n      因为涉及到root权限，因此需要将设备进行root。\n\n      很多工具可以来root，比如kingRoot等。\n\n      注：Android模拟器默认root\n\n   2. **下载Xposed框架。**\n\n      官方下载地址：http://repo.xposed.info/module/de.robv.android.xposed.installer\n\n      点击页面下方的show older version，选择一个稳定版本进行下载。\n\n      {% asset_img image-20230822150817186.png %}\n\n   3. **安装Xposed框架。**\n\n      将下载好的Xposed安装包de.robv.android.xposed.installer_v32_de4f0d.apk,直接拖入到Android模拟器中，进行安装。\n\n      安装好后如下图：\n\n      {% asset_img image-20230822151124832.png %}\n\n   4. 安装/更新Xposed框架。\n\n      打开Xposed Installer，选择“安装/更新”的最新版，然后“安装”会自动下载刷入。（过程可能会有一些慢）\n\n      如下图：\n\n      {% asset_img image-20230822151338617.png %}\n\n      安装界面，如下图所示：\n\n      {% asset_img image-20230822151416804.png %}\n\n      安装更新完成后的界面，如下图所示：\n\n      {% asset_img image-20230822151524633.png %}\n\n      \n\n4. **安装Xposed webview debugging模块。**\n\n   打开Xposed界面中点击左上角的三条横杠，选择模块，然后启用需激活模块的复选框，正常重启后即可使用。\n\n   如下图所示：\n\n   {% asset_img image-20230822151841755.png %}\n\n   如果你的手机中没有安装webViewDebugHook模块或者没有任何模块，如下图：\n\n   {% asset_img image-20230822152006781.png %}\n\n   可以在Xposed中进行下载安装WebViewDebugHook模块。\n\n   如下图：\n\n   {% asset_img image-20230822152114053.png %}\n\n   然后按照上面的方式激活WebViewDebugHook模块即可。\n\n5. **HTTP/1.1 404 Not Found和空白页问题**\n\n   在chrome：//inspect/#devices中点击inspect出现的窗口中，界面是出现HTTP/1.1 404 Not Found 或者是空白页的现象。\n\n   空白页，如下图所示：\n\n   {% asset_img image-20230822152535217.png %}\n\n   HTTP/1.1 404 Not Found界面，如下图所示：\n\n   {% asset_img image-20230822152632759.png %}\n\n   原因：\n\n   对于国内的程序猿来说，由于无法访问https://chrome-devtools-frontend.appspot.com,就会出现出现HTTP/1.1 404 Not Found或者空白页面的现象。\n\n   例如上面的@33f6ad690e178169a17596eeec8596751a696d1e就是移动设备中浏览器的一个版本号，当你换一个手机或模拟器的时候，版本号可能就不一样了。\n\n   因为不同型号的手机生产商可能会打包不同版本的chrome浏览器内核，chrome Inspect定位工具就会先访问https://chrome-devtools-frontend.appspot.com,下载对应的chrome-devtools相关驱动，而国内无法访问并下载这些驱动，就出现了404和空白页。\n\n   网上找到如下三种解决方式：\n\n   - 方法一：下载devtools的Inspect的离线开发者调试工具包。（花钱，没有免费的）\n\n   - 方法二：修改网络连接，修改hosts文件。\n\n   - 方法三：使用第三方的chrome内核的浏览器，如QQ浏览器。\n\n     （都不好使，大家也可以自己试试）\n\n     推荐使用VPN，或者下载一个可FQ的谷歌浏览器用一下即可，不用的时候就关了\n\n6. **补充：安卓模拟器打开开发者选项**\n\n   1. 打开手机的“设置”，进入到“设置”页面\n   2. 滑到“设置”页面的最下端，找到“关于手机”，进入到“关于手机”页面\n   3. 找到“版本号”，连续点击\n   4. 会弹出一段文字提醒，直到提醒次数为0后，结束点击\n   5. 返回“设置”界面，开发者选项就出来了\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","source":"_posts/Appium基础学习.md","raw":"---\ntitle: Appium学习\ndate: 2023-08-29 09:37:08\ncategories:\n   - Appium基础学习\ntags: \n   - Appium学习\nkeywords: \"Appium基础\"\nabbrlink: \"\"\ndecription:\ntop_img:\ncover: https://s2.loli.net/2023/08/30/52LHYFsPjieb4K8.png\n\n---\n\n\n\n# **移动端自动化测试框架之Appium**\n\n## Appium元素定位\n\n元素定位工具：\n\n- Android使用Android—SDK里的Uiautomatorviewer工具。\n- IOS使用Appium Desktop里的Appium Inspector检测器。\n\n#### 1.\t**By_id定位（废弃统一用MobileBy类）**\n\n通过id属性定位元素，IOS应用上的元素没有这个属性，所有仅支持Android。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_id(\"id属性值\")\n#复数\ndriver.find_elements_by_id(\"id属性值\")\n```\n\n如下图所示：利用Uiautomatorviewer工具查看元素信息，resource-id属性就是元素的id属性。\n\n{% asset_img  image-20230822155516893.png %}\n\n练习：\n\n开启Appium服务，执行如下代码：\n\n```python\n\"\"\"\n1.学习目标\n\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)\n\t练习目标：掌握元素定位方式id定位\n2.操作步骤\n\tid定位\n\t\t只适用于Android，IOS不支持，id并不是唯一属性标识\n\t\tdriver.find_element_by_id(\"id属性值\")#单数\n\t\tdriver.find_elements_by_id(\"id属性值\")#复数\n3.需求\n\t在设置App中使用id属性定位”显示“\n\"\"\"\n#1.导入appium\nimport time\nfrom appium import webdriver\n\n#2.创建Desired capabilities对象，添加启动参数\ndesired_caps = {\n    \"platformName\":\"Android\",#系统名称\n    \"platformVersion\":\"7.1.2\",#系统版本\n    \"deviceName\":\"127.0.0.1:62001\",#设备名称\n    \"appPackage\":\"com.android.settings\",#App包名\n    \"appActivity\":\".Settings\"#App启动名\n}\n\n#3.启动App\ndriver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n\n#4.定位元素\n#在移动端，元素的id不再是唯一的，\n#我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。\n#这个时候我们就要用driver.find_element_by_id来定位元素\n#对应的字段resource-id属性值。\n#4.1 定位设置ap界面中的所有标题\nid_elements= driver.find_elements_by_id(\"android:id/title\")\n\n#4.2 查看一共获取了多少标题title\nprint(\"元素数量：\"+str(len(id_elements)))\n\n#4.3 遍历获取标题对应的文本\nfor element in id_elements:\n    print(element.text)#遍历打印所有元素的text值\n    \n#5.关闭App\ntime.sleep(3)\ndriver.quit()\n```\n\n输出结果如下：\n\n{% asset_img  image-20230822161734990.png %}\n\n#### 2.\tby_name定位\n\nAppium版本在1.5之后，Android就不再支持name的元素定位方法。\n\nAndroid如果使用name方法，则报如下错误：\n\n{% asset_img  image-20230822162016028.png %}\n\nIOS可以正常使用name元素定位。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_name(\"name\")\n#复数\ndriver.find_element_by_name(\"name\")\n```\n\n如图所示：利用Appium Inspector检查器，name属性指的是name属性。\n\n{% asset_img image-20230822162337100.png %}\n\n使用命令：driver.find_element_by_name(\"3个月\")\n\n这里我们就不做演示了。\n\n#### 3.\t**by_class_name定位**\n\n通过class_name属性定位元素。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_class_name(\"class值\")\n#复数\ndriver.find_element_by_class_name(\"class值\")\n```\n\n1. **Android**:\n\n   如图所示：利用Uiautomatorviewer工具查看，class_name属性指的是class属性。\n\n   {% asset_img image-20230822162910046.png %}\n\n2. **IOS:**\n\n   如图所示：利用Appium Inspector检查器，class_name属性指的是type属性。\n\n   {% asset_img image-20230822163042684.png %}\n\n   使用命令：driver.find_element_by_class_name(\"XCUIElementTypeStaticText\")\n\n   练习：\n\n   ```python\n   \"\"\"\n   1.学习目标\n   \t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)\n   \t练习目标：掌握元素定位方式id定位\n   2.操作步骤\n   \tid定位\n   \t\t只适用于Android，IOS不支持，id并不是唯一属性标识\n   \t\tdriver.find_element_by_class_name(\"id属性值\")#单数\n   \t\tdriver.find_elements_by_class_naem(\"id属性值\")#复数\n   3.需求\n   \t在设置App中使用id属性定位”显示“\n   \"\"\"\n   #1.导入appium\n   import time\n   from appium import webdriver\n   \n   #2.创建Desired capabilities对象，添加启动参数\n   desired_caps = {\n       \"platformName\":\"Android\",#系统名称\n       \"platformVersion\":\"7.1.2\",#系统版本\n       \"deviceName\":\"127.0.0.1:62001\",#设备名称\n       \"appPackage\":\"com.android.settings\",#App包名\n       \"appActivity\":\".Settings\"#App启动名\n   }\n   \n   #3.启动App\n   driver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n   \n   #4.定位元素\n   #在移动端，元素的id不再是唯一的，\n   #我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。\n   #这个时候我们就要用driver.find_element_by_id来定位元素\n   #对应的字段resource-id属性值。\n   #4.1 定位设置ap界面中的所有标题\n   class_elements= driver.find_elements_by_class_name(\"android.widget.TextView\")\n   \n   #4.2 查看一共获取了多少标题title\n   print(\"元素数量：\"+str(len(class_elements)))\n   \n   #4.3 遍历获取标题对应的文本\n   for element in class_elements:\n       print(element.text)#遍历打印所有元素的text值\n       \n   #5.关闭App\n   time.sleep(3)\n   driver.quit()\n   ```\n\n   运行结果：\n\n   {% asset_img image-20230822163521210.png %}\n\n#### 4.\t**by_xpath定位**\n\n通过xpath定位元素，这样就可以在页面中定位一个单个的元素了。\n\n（如果一个元素的id属性或者class_name属性也是唯一的，我们也可以通过id属性或者class_name属性进行定位。）\n\n代码如下：\n\n```python\n#单数\nderiver.find_element_by_xpath(\"xpath\")\n#复数\nderiver.find_elements_by_xpath(\"xpath\")\n```\n\n在移动端xpath用法与Web Selenium中的用法一致，在移动端自动化测试中使用xpath定位元素是比较多的。\n\n练习：\n\n```python\n\"\"\"\n1.学习目标\n\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)\n\t练习目标：掌握元素定位方式id定位\n2.操作步骤\n\tid定位\n\t\t只适用于Android，IOS不支持，id并不是唯一属性标识\n\t\tdriver.find_element_by_xpath(\"xpath表达式\")#单数\n\t\tdriver.find_elements_by_xpath(\"xpath表达式\")#复数\n3.需求\n\t在设置App中使用xpath定位”显示“标题\n\"\"\"\n#1.导入appium\nimport time\nfrom appium import webdriver\n\n#2.创建Desired capabilities对象，添加启动参数\ndesired_caps = {\n    \"platformName\":\"Android\",#系统名称\n    \"platformVersion\":\"7.1.2\",#系统版本\n    \"deviceName\":\"127.0.0.1:62001\",#设备名称\n    \"appPackage\":\"com.android.settings\",#App包名\n    \"appActivity\":\".Settings\"#App启动名\n}\n\n#3.启动App\ndriver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n\n#4.定位元素\n#4.1 xpath定位“显示”按钮\nmore = driver.find_elements_by_xpath(\"//*[@text='显示']\")\n\n#4.2 点击“显示”元素，进入显示页面\nmore.click()\n\n\n    \n#5.关闭App\ntime.sleep(3)\ndriver.quit()\n```\n\n#### 5.\t**by_accessibility_id定位**\n\n通过accessibility_id属性查找元素。（移动端特有）\n\n标识附加到给定元素的辅助功能或标签的字符串。\n\n针对ios的辅助功能标识符和针对Android的内容描述。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_accessibity_id(\"accessibity_id\")\n\n#复数\ndriver.find_element_by_accessibity_id(\"accessibity_id\")\n```\n\n1. Android：\n\n   如图所示：利用Uiautomatorviewer工具查看，accessility_id属性指的是content-desc属性。\n\n   {% asset_img image-20230825111551346.png %}\n\n   练习：\n\n   ```python\n   \"\"\"\n   1.学习目标\n    \t掌握appium中accessibility_id元素定位方法\n    2.操作步骤\n    \t使用方法：\n    \tdriver.find_element_by_accessibility_id(\"content-desc属性\")\n    3.需求\n    \t在设置App中使用accessibility_id方法定位搜索按钮\n   \"\"\"\n   \n   #1.导入appium\n   import time\n   from appium import webdriver\n   \n   #2.创建Desired capabilities对象， 添加启动参数\n   desired_caps = {\n       \"deviceName\": \"真机序列号或模拟器本机地址127.0.0.1 ：+模拟器端口\",#设备名称\n       \"platformName\"： \"Android\",#系统名称\n       \"platformVersion\": \"12\",#系统版本\n       \"appPackage\": \"com.android.setting\",#包名\n       \"appActivity\": \".Settings\"#app启动名\n   }\n   \n   #3.启动App\n   driver = webdriver.Remote(\"http://127.0.0.1:4723/wd/hub\",desired_caps)\n   \n   #4.定位元素\n   #4.1 定位搜索按钮，通过accessibility_id方法\n   search = driver.find_element_by_accessibility_id(\"搜索\")\n   \n   #4.2点击搜索按钮\n   serch.click()\n   \n   #5.关闭app\n   time.sleep(3)\n   driver.quit()\n   ```\n\n   \n\n2. IOS\n\n   如图所示：利用Appium Inspector检查器，accessibility_id指的是accessibility id属性或者name属性或label属性。\n\n   {% asset_img image-20230825113322301.png %}\n\n   使用方法：driver.find_element_by_accessibility_id(\"More Info\")\n\n#### 6.\t**By_android_uiautomator定位**\n\n通过Android Uiautomator搜索查找元素。（Android系统特有）\n\n这允许使用Uiautomator库，使用递归元素搜索来找到Android应用程序中的元素。\n\n代码如下：\n\n```python\n#单数\ndriver.find_element_by_android_uiautomator(\"android_uiautomator\")\n\n#复数\ndriver.find_element_by_android_uiautomator\n```\n\n可以利用uiautomatorviewer工具查看元素属性信息。\n\nuiselector工具类介绍：\n\n1. text属性的方法（text指的是text属性）\n\n   （text指的是text属性）\n\n   - 完全匹配。\n\n     driver.find_element_by_android_uiautomator('new UiSelector(),text(\"AndroidUI\")')\n\n   - 包含匹配（模拟定位）。\n\n     driver.find_element_by_android_uiautomator('new UiSelector().textContains(\"Android\")')\n\n   - 以什么内容开始匹配。\n\n     driver.find_element_by_android_uiautomator('new UiSelector().textStartWith(\"AndroidUI\")')\n\n   - 正则匹配查找。\n\n     driver.find_element_by_android_uiautomator('new UiSelector().textMatches(\"^Android.*\")')\n\n2. className属性的方法\n\n   （className指的是class属性）\n\n   - 完全匹配\n\n     driver.find_element_by_uiautomator('new UiSelector().className(\"android.widget.TextView\").text(\"AndroidUI\")')\n\n   - 正则匹配查找\n\n     driver.find_element_by_android_uiautomator('new UiSelector().classNameMatches(\".*TextViews\").text(AndroidUI)')\n\n3. xpath方法定位\n\n   driver.find_element_by_android_uiautomator('new UiSelector().className(\"android,widget.TextView\").childSelector(new UiSelector().text(\"AndroidUI\")')\n\n4. resourceId属性的方法\n\n   （resourceId指的是resource-id属性）\n\n   - driver.find_element_by_android_uiautomator('new UiSelector().resourceId(\"com.android.calculator2:id/op_add\")')\n   - driver.find_element_by_android_uiautomator('new UiSelector().resourceIdMatches(\".*id/op_adds\")')\n\n5. description属性的方法\n\n   （description指的是content-desc属性）\n\n   - driver.find_element_by_android_uiautomator('new UiSelector().description(\"加\")')\n   - driver.find_element_by_android_uiautomator('new UiSelector().descriptionStartsWith(\"加\")')\n   - driver.find_element_by_android_uiautomator('new UiSelector().descriptionMatches(\"^加.*\")')\n\n   UiSelector类中还支持其他一些方法，比如根据控件属性是否可聚焦可长按等来缩小要定位的控件的范围，具体使用方法不一一列举了。\n\n   练习：\n\n   ```python\n   \"\"\"\n   1.学习目标\n   \t了解appium中元素定位Android专用方法 Android_UIautomator\n   2.操作步骤\n   \t使用方法：\n   \tdriver.find_element_by_android_uiautomator(\"java代码\")\n   \tjava代码中使用UiSelector类来处理元素的定位\n   \t\tnew UiSelector().text(\"本文内容\")\n   3.需求\n   \t在设置App中使用Android专用的定位方法\n   \"\"\"\n   \n   #1.导入appium\n   import time\n   from appium import webdriver\n   \n   #2.创建Desired capabilities对象，添加启动参数\n   desired_caps = {\n       \"deviceName\": \"127.0.0.1:62001\",#设备名称\n       \"platformName\": \"Android\",#系统名称\n       \"platformVersion\": \"12\",#系统版本\n       \"appPackage\": \"com.android.settings\",#App包名\n       \"appActivity\": \".Settings\"#app启动名\n   }\n   \n   #3.启动App\n   driver = webdriver.Remote(\"http://127.0.0.1/wd/hub\",desired_caps)\n   \n   #4.定位元素\n   #4.1定位蓝牙，通过Android_Uiautomator方法\n   #单引号里面是java代码，使用UiSelector这个类来定位元素。\n   blue_tooth = driver.find_element_by_android_uiautomator(\"new UiSelector().text(\"蓝牙\")\")\n   \n   #注意：\n   #上面new UiSelector().text(\"蓝牙\")中，一定是外单引号，里边双引号\n   #因为这是一段java代码，而text()方法中要传入一个string类型的参数\n   #java中String类型的参数是加双引号的，所以必须是外单内双\n   #否则会报错。\n   \n   #4.2点击搜索按钮\n   blue_tooth.click()\n   \n   #5.关闭App\n   time.sleep(3)\n   driver.quit()\n   ```\n\n## Web页面自动化测试，元素定位是页面自动化测试的第一步。\n\n## App自动化测试的第一步，也是元素的定位。\n\n## App中的元素定位工具大致有三种：\n\n1. ##   Uiautomatorviewer\t工具\n\n2. ##   Appium \tInspector\t工具\n\n3. ##   Chrome\tInspect\t工具\n\n## **Uiautomatorviewer**\n\n### 1.\tUiautomatorviewer介绍\n\n在开始编写代码之前，需要获取待测应用的UI元素，可以通过Uiautomatorviewer工具来获取应用的界面截图并分析。\n\nUiautomatorviewer工具获取当前UI界面的快照，提供一个可视化的界面，来查看UI布局结构，并且可以查看各个控件的相关属性。利用这些信息来选择特定的UI组件并创建App中的自动化UI测试代码。\n\n总结：\n\n- Uiautomatorviewer工具是专门用来定位Android系统App中原生页面中的元素。\n- Uiautomatorviewer是AndroidSDK里的一个工具，这个工具在AndroidSDK目录下的tools文件夹下。（IOS系统在tools\\bin的子目录下）\n- Uiautomatorviewer使用简单，速度也相对比较快。\n\n### 2.\tUiautomatorviewer工具打开方式\n\n在下载的Android—SDK中找到tools里的Uiautomatorviewer.bat文件双击打开工具\n\n{% asset_img image-20230822093033212.png %}\n\n先会出现一个黑窗口，然后就会出现一个Uiautomatorviewer工具的界面\n\n{% asset_img image-20230822093619228.png %}\n\n### 3.\tUiautomatorviewer布局界面介绍\n\n{% asset_img image-20230822093814089.png %}\n\n整个界面分四个区域:\n\n   1. **工作栏区**\n\n      在工作栏中共有4个按钮从左至右分别用于：\n\n      - 打开已保存的界面快照和布局\n      - 抓取当前手机屏幕截图（Device Screenshoot Uiautomator dupm）\n      - 带有压缩层次结构的设备屏幕截图（Device Screenshoot with Compressed Hierarchy (Uiautomator dump -compressed)）第二按钮于第三按钮把全部布局呈现出来，而第三按钮只呈现有用的控件布局。比如存在一个Frame，但只有装饰功能，那么点击第三按钮时，可能不被呈现。\n      - 保存当前屏幕界面的快照和布局\n\n​\t\t\t2.**屏幕截图区**\n\n​\t\t\t\t显示当前屏幕显示的布局图片\n\n​\t\t\t3.**布局区**\n\n​\t\t\t\t已Xml树的形式，显示控件布局\n\n​\t\t\t4.**控件属性区**\n\n​\t\t\t\t当点击某一控件时，将显示该控件属性信息。\n\n### 4.Uiautomatorviewer工具的使用\n\n1. ​\t**Uiautomatorviewer工具使用的前提**\n   - 打开Uiautomatorviewer工具\n   - 所测试设备是开机状态（手机或者模拟器）\t\t\t\t\n   - 确保电脑与设备是链接状态，也就是cmd进入命令行终端，输入 adb connect 127.0.0.1:62001链接夜神模拟器，输入 adb devices 能够获取设备名称\n\n如果电脑没有与设备不是链接的状态，点击Uiautomatorviewer工具栏中的第二个按钮，来抓取手机界面是抓不到的。\n\n如下图所示：\n\n{% asset_img image-20230822095942818.png %}\n\n2. ​\t**抓取当前手机的屏幕界面**\n\n​\t\t\t\t\t就是点击Uiautomatorviewer工具栏中的第二个按钮进行抓取:\n\n{% asset_img image-20230822100211467.png %}\n\n说明:点击完成后，设备上的界面就会被同步到这个工具的左侧，点击左侧需要查看的控件，在这个工具的右侧就可以看到这个控件对应的详细信息。\n\n提示:\n\n当Uiautomatorviewer能够不抓取手机屏幕时，可以先关闭和重启adb服务\n\n执行命令如下：\n\n- adb\tkill-server\n- adb    start-server\n\n​\t\t3.**定位其它页面里的元素**\n\n​\t\t\t如果需要继续定位其他页面里的元素，先在设备中操作到定位元素的页面后，再次点击工具左上角的排子按钮，就可以抓取最新的页面元素信息。\n\n例如：\n\n定位完设置App中界面的元素，我又想定位淘宝首页的页面元素。\n\n首先在手机中打开淘宝App，进入到淘宝App的首页。\n\n{% asset_img image-20230822101225757.png %}\n\n然后点击Uiautomatorviewer工具栏中的第二个按钮，来抓取新的界面\n\n{% asset_img image-20230822101402155.png %}\n\n​\t\t\t\t\t4.**保存**\n\n​\t\t\t\t\t\t点击保存按钮，可保存抓取的屏幕截屏和一个uix文件（XML格式的的页面布局，就相当于页面源码）。\n\n{% asset_img image-20230822101641447.png %}\n\n我们可以看到文件夹中会有上面说过的两个文件。\n\n{% asset_img image-20230822101739507.png %}\n\n我们也可以对保存的文件进行重命名，方便我们以后的使用和管理。\n\n{% asset_img image-20230822101848241.png %}\n\n​\t\t\t\t5.打开已保存的界面快照和布局\n\n​\t\t\t\t点击打开文件，可以将之前保存好的页面屏幕截图和.uix文件导入进来。\n\n{% asset_img image-20230822102038461.png %}\n\n点击ok之后，就选显示以前保存过的界面信息了。\n\n如下图所示:\n\n{% asset_img image-20230822102209820.png %}\n\n导入后即可进行元素定位操作。\n\n## Appium Inspector\n\n### 1.\t**Appium Inspector**\n\nAppium Server有两种启动方式\n\n- 一种Appium Desktop有图形界面的启动方式，称之为桌面版；\n- 另一种版本是通过npm安装，使用命令行参数启动的Appium Server；\n\n而Appium Inspector工具就在Appium Desktop中，Appium Inspector是Appium Desktop附带的一个元素定位检查器，用来调试定位应用程序很方便。\n\nAppium Inspector工具同时支持Android系统和IOS系统中原生界面的元素定位。\n\n### 2.   **Appium Inspector打开方式**\n\nAppium  Desktop安装完成之后，双击打开。\n\n{% asset_img image-20230822103602071.png %}\n\n说明：界面有3个Tab选项\n\n- Simple：默认配置，监听本机4723端口；\n- Advanced：高级设置，可以自定义Appium Server端的配置，配置好后可以保存到Presets；\n- Presets：修改Advanced高级设置中的配置项。\n\n一般我们测试直接使用Simple即可，点击Start Server按钮，启动Appium Server，并开启监听本机4723端口。开启服务后，界面跳转到服务端控制台，如下图所示：\n\n{% asset_img image-20230822104412007.png %}\n\n提示：\n\n控制台显示运行的脚本中的日志信息，右上角有3个按钮，分别是：\n\n- 第一个按钮Start  Inspector Session，开启Appium Inspector定位工具；注意：inspector会新开一个Session；\n- 第二个按钮Get Raws Logs ，下载当前控制台中的log信息；\n- 第三按钮Stop Server，关闭当前的Appium Server。\n\n有两种方式可以启动Appium Inspector工具，\n\n- 方式一：点击右上角三个按钮中的第一个（一个放大镜样子的按钮），打开Appium Inspector工具。\n- 方式二：点击左上角File-->New Session Window.....Ctrl+N可以打开Appium Inspector工具\n\n如下图：\n\n{% asset_img image-20230822105454030.png %}\n\nAppium  Inspector工具开启后的界面如下图：\n\n{% asset_img image-20230822105546386.png %}\n\n### 3.Appium Inspector布局介绍\n\nAppium Inspector布局如下图所示：\n\n{% asset_img image-20230822105722220.png %}\n\n上图说明：\n\n1. 布局1是Appium Inspector服务的设置。Automatic  Server：自动服务器  Custom  Server:定制服务器 Select  Cloud  Providers:选择云提供商我们一般使用Automatic Server即可：will use currently-running Appium Desktop server http：//localhost：4723将使用当前运行的Appium桌面服务器http：//localhost：4723\n2. 布局2是高级设置。可以设置Allow Unauthorized Certificates：允许未经授权的证书。Use Proxy：使用代理服务器。初学一般我们不进行高级设置。\n3. 布局3是Desired Capabilities参数设置。Desired  Capabilities：编写Desired  Capabilities参数。Saved Capability Sets：已保存的Desired Capabilities，可以进行查看和修改。Attach to Session....:附加到会话...（用到的时候再说）\n\n### 4.Appium Inspector工具的配置\n\n1. **Appium Inspector工具使用前提**\n\n   - 打开Appium Desktop，开启Appium Inspector工具\n   - 所测试设备是开机状态（手机或者模拟器）\n   - 确保电脑与设备是链接状态，也就是从cmd进入命令行终端，输入  adb  connect 127.0.0.1:62001链接夜神模拟器，输入  adb   Devices能够获取设备名称。\n\n2. **Appium Inspector的服务器设置和高级设置**\n\n   - 服务器设置：选择Automator Server （一定要记得点击一下，进行选中）\n   - 高级设置：不进行设置\n\n3. **编写Desired Capabilities参数（重点）**\n\n   可以在左侧一行一行手动添加，如下图所示：\n\n   {% asset_img image-20230822111942478.png %}\n\n   提示：第二列的格式是针对第三列value值而言的。\n\n   也可以把Json格式的数据编辑好，直接粘贴在右侧Json Representation里。\n\n   {% asset_img image-20230822112351826.png %}\n\n   直接把Json格式的数据直接粘贴过来。\n\n   {% asset_img image-20230822112448330.png %}\n\n   点击保存之后，数据会同步到左侧，如下图所示：\n\n   {% asset_img image-20230822112543774.png %}\n\n4. **保存Desired Capabilities参数**\n\n   如有需要，在编辑完成Desired Capabilities参数之后，可以对其进行保存，方便以后的管理和使用。\n\n   {% asset_img image-20230822112903927.png %}\n\n   {% asset_img image-20230822112923800.png %}\n\n5. **查看和修改已存储的Desired Capabilities**\n\n   点击Saved Capabilities sets标签页，可以查看和修改已存储的Desired Capabilities。\n\n   {% asset_img image-20230822113205328.png %}\n\n6. **开启Session，连接手机获取手机界面**\n\n   点击start Session，开启使用Appium Inspector工具。\n\n   如下图所示：\n\n   {% asset_img image-20230822113541137.png %}\n\n   说明：\n\n   - Appium Inspector需要我们手动创建一个session，其实也就是一个客户端，和Appium Server连接，并且需要在Desired Capabilities 里面填入一些参数。\n   - 所需功能是在Desired Capabilities对象中编码的键和值，当请求新的自动化会话时，由Appium客户端发送到Appium Server服务器。Desired Capabilities告诉Appium驱动程序有关您希望测试如何工作的各种重要信息。最终Desired Capabilities将作为Json对象发送到Appium。\n   - 所需功能的Desired Capabilities对象可以在WebDriver测试中编写脚本，也可以在Appium Server GUI中设置（通过Inspector会话中，就是上边的介绍方式）。\n\n   提示：\n\n   当Appium Inspector能够不能抓取手机屏幕时，可以关闭和重启adb服务，或者重启Appium Inspector服务。\n\n   命令如下：\n\n   - adb kill-server\n   - adb start-server\n\n### 5.\t**Appium Inspector工具的使用**\n\n1. **Inspector定位控件界面的详细介绍**\n\n   {% asset_img image-20230822114808809.png %}\n\n   上图说明：\n\n   - 布局1：截图的手机界面\n\n     可以点击选择元素。\n\n   - 布局2：顶部操作栏\n\n     从左往右的按钮依次是\n\n     Select Element：选择元素。\n\n     Swipe By Coordinates：选择滑动的起始和结束位置。\n\n     Tap By Coordinates：使得手机界面变换可操作状态，可以点击界面的元素。\n\n     Back：模拟Android的返回键。\n\n     Refresh Source & Screenshot：刷新页面，用来重新获取手机当前界面。\n\n     Start Recording：录制操作。\n\n     Search for element：校验定位表达式。\n\n     Copy XML Source to Clipboard：复制XML树。\n\n     Quit Session & Close Inspector：退出当前Session。\n\n   - 布局3：XML树\n\n     以XML树的形式，展示界面上的控件布局。\n\n   - 布局4：控件属性区域\n\n     选择某个控件，在这里可以显示该控件的所有属性和值。\n\n   \n\n2. **Selected  Element的介绍**\n\n   选择元素功能：\n\n   {% asset_img image-20230822133904939.png %}\n\n   1. **顶部的Tap、Send Keys、Clear**\n\n      模拟用户的操作：\n\n      - tap：相当于点击元素。\n      - Send keys：输入值、针对输入框的操作。\n      - Clear：清除所有值。\n\n      建议：不建议用这些操作，因为很容易造成断开连接（左侧界面一直loading）.....反正我这边经常这样，如果不会的话当然最好用啦！\n\n   2. **Find By xpath**\n\n      提供了该元素的XPATH表达式\n\n      不推荐用，绝对路径太长了.....还是自己写吧！\n\n   3. **那串黄色背景色的英文**\n\n      不建议使用XPATH定位器，因为它很脆弱，建议让开发团队提供独特的可访问性定位器（即：resource-id）\n\n   4. **Attribute-Value**\n\n      属性列表\n\n3. **Search for element的介绍**\n\n   搜索元素功能，位置如下图：\n\n   {% asset_img image-20230822134908939.png %}\n\n   点击弹出如下界面：\n\n   选择定位策略，如下图：\n\n   {% asset_img image-20230822134952072.png %}\n\n   填写对应的定位表达式，如下图：\n\n   {% asset_img image-20230822135027681.png %}\n\n   点击Search 就可以进行元素定位了。\n\n   如果能找到Element的话表达式就是正确的，然后你还可以针对元素进行一些操作。\n\n4. **在Appium Inspector中操作手机**\n\n   当我们使用Appium Inspector定位工具获取到手机设置App界面的时候，如下图：\n\n   {% asset_img image-20230822135321766.png %}\n\n   点击顶部操作栏中的Tap By Coordinates按钮，使得手机界面变换可操作状态。\n\n   然后我们在左侧的手机界面中点击显示，就可以进入到显示的界面中了。\n\n   {% asset_img image-20230822135531324.png %}\n\n   {% asset_img image-20230822135548543.png %}\n\n   进入到显示之后，现在我们还是保持在可操作手机的状态。\n\n   之后我们就可以继续操作手机，也可以点击Select Element按钮，在当前页面中进行选择的元素。\n\n   {% asset_img image-20230822135756380.png %}\n\n   我们也可以点击Back按钮，返回到设置App的首界面。\n\n   {% asset_img image-20230822135855228.png %}\n\n   提示：这一点Appium Inspector定位工具就比Uiautomatorviewer定位方便多了。\n\n5. **Start Recording的介绍（了解）**\n\n   {% asset_img image-20230822140101952.png %}\n\n   - 操作步骤：点击开始录制之后，在点击Tap By Coordinates，进入界面可操作状态。\n   - 然后就可以开始点击你想要的元素了，这个时候就开始录制了。\n   - 最后在Recorder下面会显示对应的代码，右侧可以选择不同的语言。\n   - 建议：不要过多使用该功能，可以看到录制的代码是根据坐标去定位元素的，换个手机同一个元素坐标可能就不同了，可移植性不高。\n\n### 6.\t**Uiautomatorviewer工具和Appium Inspector工具对比**\n\n1. **Uiautomatorviewer的局限性：**\n\n   1. 不能校验我们写的定位表达式是否正确定位到控件（类似浏览器上的F12）\n   2. 连接不够稳定\n   3. 不能模拟用户动作\n\n2. **Appium Desktop的Inspector的优势：**\n\n   1. 可以校验定位表达式（如：XPATH表达式）。\n   2. 通过设置Desired Capabilities来连接手机，比较稳定。\n   3. 可以模拟用户动作（如：点击、返回、滑动等操作）。\n   4. 可以录制一系列操作，然后转换成代码。\n\n   提示：\n\n   学习或者编写脚本过程中，使用桌面版会方便一些，因为桌面版还提供了定位工具。而实际运行的时候，使用Server版本会更灵活，更容易与CI工具进行集成。\n\n## Chrome  Inspect\n\n### 1.\t**Chrome Inspect的介绍**\n\nChrome Inspect定位工具是用来抓取App中Webview页面的。\n\n为了项目的需求，为了更好的保证效果和布局跨平台，Android&H5混合开发一般是我们不错的选择。Google浏览器中的Chrome Inspect定位工具，提供了一个移动端Web页面开发调试的功能，通过它我们可以调试手机页面，可以看到页面的源码，从而进行元素的定位。\n\n**使用chrome Inspect定位工具的前提条件**\n\n使用Chrome开发人员工具调试原生Android应用中的WebView，Android版本应该在Android4.4（kitkat）或更高版本上，通过DevTools在原生Android应用中调试WebView页面中的内容。\n\n### 2.\t**Chrome Inspect打开方式**\n\n打开PC端的Chrome浏览器，在访问地址栏中输入Chrome：//inspect/就可以了，就是这么简单。\n\n如下图：\n\n{% asset_img image-20230822142646593.png %}\n\n### 3.\t**Chrome Inspect工具的使用**\n\n1. **Chrome Inspect工作前提**\n\n   - 所测试设备是开机状态（手机或者模拟器）。\n\n   - 确保电脑与设备是链接状态，也就是cmd进入命令行终端，\n\n     输入adb connect 127.0.0.1:62001链接夜神模拟器，\n\n     输入adb devices能够获取设备名称。\n\n2. **Chrome Inspect操作**\n\n   1. **在App中打开含有WebView的页面**\n\n      例如：开百度App，进入到微博登陆的界面就是一个含有Webview的页面\n\n      如下图：\n\n      {% asset_img image-20230822144556161.png %}\n\n   2. **在Chrome Inspect中识别到Webview页面**\n\n      我们进入到PC端的Chrome浏览器中，访问地址栏中输入chrome：//inspect/（没有显示的话就点击一下刷新），就可以检测到当前应用程序界面是Webview页面了。\n\n      如下图：\n\n      {% asset_img image-20230822145022696.png %}\n\n   3. 点击inspect可以进入调试视图\n\n      点击如上图中的inspect，可以进入Chrome Inspect工具的调试视图。\n\n      会弹出一个新窗口，显示当前页面的Webview元素信息。\n\n      并且元素定位方法同Selenium WebDriver一致。\n\n      {% asset_img image-20230822145325532.png %}\n\n      就是这么简单。\n\n4.**使用Chrome Inspect遇到的问题**\n\n1. **Android系统版本问题**\n\n   Android移动设备版本应该在Android4.4或更高版本上。\n\n   从Android4.4开始，webkit是支持远程调试的。\n\n2. **所测App的debug模式要打开**\n\n   在使用Chrome Inspect工具调试移动端App的Webview页面的时候，需要将该App的debug模式打开。\n\n   但其实大部分App的debug模式都是关闭的，要去找一个开启debug模式的版本还是比较麻烦的，因此需要使用借助第三方工具来强制开启任何App的Android webview debug模式，使之可以使用chrome Inspect。\n\n   而这个工具就是Xposed。\n\n3. **Xposed工具的安装**\n\n   1. **将设备进行root。**\n\n      因为涉及到root权限，因此需要将设备进行root。\n\n      很多工具可以来root，比如kingRoot等。\n\n      注：Android模拟器默认root\n\n   2. **下载Xposed框架。**\n\n      官方下载地址：http://repo.xposed.info/module/de.robv.android.xposed.installer\n\n      点击页面下方的show older version，选择一个稳定版本进行下载。\n\n      {% asset_img image-20230822150817186.png %}\n\n   3. **安装Xposed框架。**\n\n      将下载好的Xposed安装包de.robv.android.xposed.installer_v32_de4f0d.apk,直接拖入到Android模拟器中，进行安装。\n\n      安装好后如下图：\n\n      {% asset_img image-20230822151124832.png %}\n\n   4. 安装/更新Xposed框架。\n\n      打开Xposed Installer，选择“安装/更新”的最新版，然后“安装”会自动下载刷入。（过程可能会有一些慢）\n\n      如下图：\n\n      {% asset_img image-20230822151338617.png %}\n\n      安装界面，如下图所示：\n\n      {% asset_img image-20230822151416804.png %}\n\n      安装更新完成后的界面，如下图所示：\n\n      {% asset_img image-20230822151524633.png %}\n\n      \n\n4. **安装Xposed webview debugging模块。**\n\n   打开Xposed界面中点击左上角的三条横杠，选择模块，然后启用需激活模块的复选框，正常重启后即可使用。\n\n   如下图所示：\n\n   {% asset_img image-20230822151841755.png %}\n\n   如果你的手机中没有安装webViewDebugHook模块或者没有任何模块，如下图：\n\n   {% asset_img image-20230822152006781.png %}\n\n   可以在Xposed中进行下载安装WebViewDebugHook模块。\n\n   如下图：\n\n   {% asset_img image-20230822152114053.png %}\n\n   然后按照上面的方式激活WebViewDebugHook模块即可。\n\n5. **HTTP/1.1 404 Not Found和空白页问题**\n\n   在chrome：//inspect/#devices中点击inspect出现的窗口中，界面是出现HTTP/1.1 404 Not Found 或者是空白页的现象。\n\n   空白页，如下图所示：\n\n   {% asset_img image-20230822152535217.png %}\n\n   HTTP/1.1 404 Not Found界面，如下图所示：\n\n   {% asset_img image-20230822152632759.png %}\n\n   原因：\n\n   对于国内的程序猿来说，由于无法访问https://chrome-devtools-frontend.appspot.com,就会出现出现HTTP/1.1 404 Not Found或者空白页面的现象。\n\n   例如上面的@33f6ad690e178169a17596eeec8596751a696d1e就是移动设备中浏览器的一个版本号，当你换一个手机或模拟器的时候，版本号可能就不一样了。\n\n   因为不同型号的手机生产商可能会打包不同版本的chrome浏览器内核，chrome Inspect定位工具就会先访问https://chrome-devtools-frontend.appspot.com,下载对应的chrome-devtools相关驱动，而国内无法访问并下载这些驱动，就出现了404和空白页。\n\n   网上找到如下三种解决方式：\n\n   - 方法一：下载devtools的Inspect的离线开发者调试工具包。（花钱，没有免费的）\n\n   - 方法二：修改网络连接，修改hosts文件。\n\n   - 方法三：使用第三方的chrome内核的浏览器，如QQ浏览器。\n\n     （都不好使，大家也可以自己试试）\n\n     推荐使用VPN，或者下载一个可FQ的谷歌浏览器用一下即可，不用的时候就关了\n\n6. **补充：安卓模拟器打开开发者选项**\n\n   1. 打开手机的“设置”，进入到“设置”页面\n   2. 滑到“设置”页面的最下端，找到“关于手机”，进入到“关于手机”页面\n   3. 找到“版本号”，连续点击\n   4. 会弹出一段文字提醒，直到提醒次数为0后，结束点击\n   5. 返回“设置”界面，开发者选项就出来了\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","slug":"Appium基础学习","published":1,"updated":"2023-09-19T03:56:51.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4no50001fw48dlp26aib","content":"<h1 id=\"移动端自动化测试框架之Appium\"><a href=\"#移动端自动化测试框架之Appium\" class=\"headerlink\" title=\"移动端自动化测试框架之Appium\"></a><strong>移动端自动化测试框架之Appium</strong></h1><h2 id=\"Appium元素定位\"><a href=\"#Appium元素定位\" class=\"headerlink\" title=\"Appium元素定位\"></a>Appium元素定位</h2><p>元素定位工具：</p>\n<ul>\n<li>Android使用Android—SDK里的Uiautomatorviewer工具。</li>\n<li>IOS使用Appium Desktop里的Appium Inspector检测器。</li>\n</ul>\n<h4 id=\"1-By-id定位（废弃统一用MobileBy类）\"><a href=\"#1-By-id定位（废弃统一用MobileBy类）\" class=\"headerlink\" title=\"1.\tBy_id定位（废弃统一用MobileBy类）\"></a>1.\t<strong>By_id定位（废弃统一用MobileBy类）</strong></h4><p>通过id属性定位元素，IOS应用上的元素没有这个属性，所有仅支持Android。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_id(<span class=\"string\">&quot;id属性值&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_elements_by_id(<span class=\"string\">&quot;id属性值&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：利用Uiautomatorviewer工具查看元素信息，resource-id属性就是元素的id属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822155516893.png\" class>\n\n<p>练习：</p>\n<p>开启Appium服务，执行如下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)</span></span><br><span class=\"line\"><span class=\"string\">\t练习目标：掌握元素定位方式id定位</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\tid定位</span></span><br><span class=\"line\"><span class=\"string\">\t\t只适用于Android，IOS不支持，id并不是唯一属性标识</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_element_by_id(&quot;id属性值&quot;)#单数</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_elements_by_id(&quot;id属性值&quot;)#复数</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用id属性定位”显示“</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>:<span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>:<span class=\"string\">&quot;7.1.2&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>:<span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>:<span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>:<span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#App启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#在移动端，元素的id不再是唯一的，</span></span><br><span class=\"line\"><span class=\"comment\">#我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。</span></span><br><span class=\"line\"><span class=\"comment\">#这个时候我们就要用driver.find_element_by_id来定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#对应的字段resource-id属性值。</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 定位设置ap界面中的所有标题</span></span><br><span class=\"line\">id_elements= driver.find_elements_by_id(<span class=\"string\">&quot;android:id/title&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2 查看一共获取了多少标题title</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;元素数量：&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>(id_elements)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.3 遍历获取标题对应的文本</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> id_elements:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element.text)<span class=\"comment\">#遍历打印所有元素的text值</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822161734990.png\" class>\n\n<h4 id=\"2-by-name定位\"><a href=\"#2-by-name定位\" class=\"headerlink\" title=\"2.\tby_name定位\"></a>2.\tby_name定位</h4><p>Appium版本在1.5之后，Android就不再支持name的元素定位方法。</p>\n<p>Android如果使用name方法，则报如下错误：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822162016028.png\" class>\n\n<p>IOS可以正常使用name元素定位。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_name(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_name(<span class=\"string\">&quot;name&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>如图所示：利用Appium Inspector检查器，name属性指的是name属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822162337100.png\" class>\n\n<p>使用命令：driver.find_element_by_name(“3个月”)</p>\n<p>这里我们就不做演示了。</p>\n<h4 id=\"3-by-class-name定位\"><a href=\"#3-by-class-name定位\" class=\"headerlink\" title=\"3.\tby_class_name定位\"></a>3.\t<strong>by_class_name定位</strong></h4><p>通过class_name属性定位元素。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_class_name(<span class=\"string\">&quot;class值&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_class_name(<span class=\"string\">&quot;class值&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p><strong>Android</strong>:</p>\n<p>如图所示：利用Uiautomatorviewer工具查看，class_name属性指的是class属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822162910046.png\" class>\n</li>\n<li><p><strong>IOS:</strong></p>\n<p>如图所示：利用Appium Inspector检查器，class_name属性指的是type属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822163042684.png\" class>\n\n<p>使用命令：driver.find_element_by_class_name(“XCUIElementTypeStaticText”)</p>\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)</span></span><br><span class=\"line\"><span class=\"string\">\t练习目标：掌握元素定位方式id定位</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\tid定位</span></span><br><span class=\"line\"><span class=\"string\">\t\t只适用于Android，IOS不支持，id并不是唯一属性标识</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_element_by_class_name(&quot;id属性值&quot;)#单数</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_elements_by_class_naem(&quot;id属性值&quot;)#复数</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用id属性定位”显示“</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>:<span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>:<span class=\"string\">&quot;7.1.2&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>:<span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>:<span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>:<span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#App启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#在移动端，元素的id不再是唯一的，</span></span><br><span class=\"line\"><span class=\"comment\">#我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。</span></span><br><span class=\"line\"><span class=\"comment\">#这个时候我们就要用driver.find_element_by_id来定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#对应的字段resource-id属性值。</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 定位设置ap界面中的所有标题</span></span><br><span class=\"line\">class_elements= driver.find_elements_by_class_name(<span class=\"string\">&quot;android.widget.TextView&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2 查看一共获取了多少标题title</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;元素数量：&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>(class_elements)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.3 遍历获取标题对应的文本</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> class_elements:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element.text)<span class=\"comment\">#遍历打印所有元素的text值</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822163521210.png\" class></li>\n</ol>\n<h4 id=\"4-by-xpath定位\"><a href=\"#4-by-xpath定位\" class=\"headerlink\" title=\"4.\tby_xpath定位\"></a>4.\t<strong>by_xpath定位</strong></h4><p>通过xpath定位元素，这样就可以在页面中定位一个单个的元素了。</p>\n<p>（如果一个元素的id属性或者class_name属性也是唯一的，我们也可以通过id属性或者class_name属性进行定位。）</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">deriver.find_element_by_xpath(<span class=\"string\">&quot;xpath&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">deriver.find_elements_by_xpath(<span class=\"string\">&quot;xpath&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在移动端xpath用法与Web Selenium中的用法一致，在移动端自动化测试中使用xpath定位元素是比较多的。</p>\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)</span></span><br><span class=\"line\"><span class=\"string\">\t练习目标：掌握元素定位方式id定位</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\tid定位</span></span><br><span class=\"line\"><span class=\"string\">\t\t只适用于Android，IOS不支持，id并不是唯一属性标识</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_element_by_xpath(&quot;xpath表达式&quot;)#单数</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_elements_by_xpath(&quot;xpath表达式&quot;)#复数</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用xpath定位”显示“标题</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>:<span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>:<span class=\"string\">&quot;7.1.2&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>:<span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>:<span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>:<span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#App启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 xpath定位“显示”按钮</span></span><br><span class=\"line\">more = driver.find_elements_by_xpath(<span class=\"string\">&quot;//*[@text=&#x27;显示&#x27;]&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2 点击“显示”元素，进入显示页面</span></span><br><span class=\"line\">more.click()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-by-accessibility-id定位\"><a href=\"#5-by-accessibility-id定位\" class=\"headerlink\" title=\"5.\tby_accessibility_id定位\"></a>5.\t<strong>by_accessibility_id定位</strong></h4><p>通过accessibility_id属性查找元素。（移动端特有）</p>\n<p>标识附加到给定元素的辅助功能或标签的字符串。</p>\n<p>针对ios的辅助功能标识符和针对Android的内容描述。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_accessibity_id(<span class=\"string\">&quot;accessibity_id&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_accessibity_id(<span class=\"string\">&quot;accessibity_id&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>Android：</p>\n<p>如图所示：利用Uiautomatorviewer工具查看，accessility_id属性指的是content-desc属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230825111551346.png\" class>\n\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\"> \t掌握appium中accessibility_id元素定位方法</span></span><br><span class=\"line\"><span class=\"string\"> 2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\"> \t使用方法：</span></span><br><span class=\"line\"><span class=\"string\"> \tdriver.find_element_by_accessibility_id(&quot;content-desc属性&quot;)</span></span><br><span class=\"line\"><span class=\"string\"> 3.需求</span></span><br><span class=\"line\"><span class=\"string\"> \t在设置App中使用accessibility_id方法定位搜索按钮</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象， 添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>: <span class=\"string\">&quot;真机序列号或模拟器本机地址127.0.0.1 ：+模拟器端口&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>： <span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>: <span class=\"string\">&quot;12&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>: <span class=\"string\">&quot;com.android.setting&quot;</span>,<span class=\"comment\">#包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>: <span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#app启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 定位搜索按钮，通过accessibility_id方法</span></span><br><span class=\"line\">search = driver.find_element_by_accessibility_id(<span class=\"string\">&quot;搜索&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2点击搜索按钮</span></span><br><span class=\"line\">serch.click()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.关闭app</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>IOS</p>\n<p>如图所示：利用Appium Inspector检查器，accessibility_id指的是accessibility id属性或者name属性或label属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230825113322301.png\" class>\n\n<p>使用方法：driver.find_element_by_accessibility_id(“More Info”)</p>\n</li>\n</ol>\n<h4 id=\"6-By-android-uiautomator定位\"><a href=\"#6-By-android-uiautomator定位\" class=\"headerlink\" title=\"6.\tBy_android_uiautomator定位\"></a>6.\t<strong>By_android_uiautomator定位</strong></h4><p>通过Android Uiautomator搜索查找元素。（Android系统特有）</p>\n<p>这允许使用Uiautomator库，使用递归元素搜索来找到Android应用程序中的元素。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_android_uiautomator(<span class=\"string\">&quot;android_uiautomator&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_android_uiautomator</span><br></pre></td></tr></table></figure>\n\n<p>可以利用uiautomatorviewer工具查看元素属性信息。</p>\n<p>uiselector工具类介绍：</p>\n<ol>\n<li><p>text属性的方法（text指的是text属性）</p>\n<p>（text指的是text属性）</p>\n<ul>\n<li><p>完全匹配。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector(),text(“AndroidUI”)’)</p>\n</li>\n<li><p>包含匹配（模拟定位）。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().textContains(“Android”)’)</p>\n</li>\n<li><p>以什么内容开始匹配。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().textStartWith(“AndroidUI”)’)</p>\n</li>\n<li><p>正则匹配查找。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().textMatches(“^Android.*”)’)</p>\n</li>\n</ul>\n</li>\n<li><p>className属性的方法</p>\n<p>（className指的是class属性）</p>\n<ul>\n<li><p>完全匹配</p>\n<p>driver.find_element_by_uiautomator(‘new UiSelector().className(“android.widget.TextView”).text(“AndroidUI”)’)</p>\n</li>\n<li><p>正则匹配查找</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().classNameMatches(“.*TextViews”).text(AndroidUI)’)</p>\n</li>\n</ul>\n</li>\n<li><p>xpath方法定位</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().className(“android,widget.TextView”).childSelector(new UiSelector().text(“AndroidUI”)’)</p>\n</li>\n<li><p>resourceId属性的方法</p>\n<p>（resourceId指的是resource-id属性）</p>\n<ul>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().resourceId(“com.android.calculator2:id&#x2F;op_add”)’)</li>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().resourceIdMatches(“.*id&#x2F;op_adds”)’)</li>\n</ul>\n</li>\n<li><p>description属性的方法</p>\n<p>（description指的是content-desc属性）</p>\n<ul>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().description(“加”)’)</li>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().descriptionStartsWith(“加”)’)</li>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().descriptionMatches(“^加.*”)’)</li>\n</ul>\n<p>UiSelector类中还支持其他一些方法，比如根据控件属性是否可聚焦可长按等来缩小要定位的控件的范围，具体使用方法不一一列举了。</p>\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t了解appium中元素定位Android专用方法 Android_UIautomator</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\t使用方法：</span></span><br><span class=\"line\"><span class=\"string\">\tdriver.find_element_by_android_uiautomator(&quot;java代码&quot;)</span></span><br><span class=\"line\"><span class=\"string\">\tjava代码中使用UiSelector类来处理元素的定位</span></span><br><span class=\"line\"><span class=\"string\">\t\tnew UiSelector().text(&quot;本文内容&quot;)</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用Android专用的定位方法</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>: <span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>: <span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>: <span class=\"string\">&quot;12&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>: <span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>: <span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#app启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#4.1定位蓝牙，通过Android_Uiautomator方法</span></span><br><span class=\"line\"><span class=\"comment\">#单引号里面是java代码，使用UiSelector这个类来定位元素。</span></span><br><span class=\"line\">blue_tooth = driver.find_element_by_android_uiautomator(<span class=\"string\">&quot;new UiSelector().text(&quot;</span>蓝牙<span class=\"string\">&quot;)&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#注意：</span></span><br><span class=\"line\"><span class=\"comment\">#上面new UiSelector().text(&quot;蓝牙&quot;)中，一定是外单引号，里边双引号</span></span><br><span class=\"line\"><span class=\"comment\">#因为这是一段java代码，而text()方法中要传入一个string类型的参数</span></span><br><span class=\"line\"><span class=\"comment\">#java中String类型的参数是加双引号的，所以必须是外单内双</span></span><br><span class=\"line\"><span class=\"comment\">#否则会报错。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2点击搜索按钮</span></span><br><span class=\"line\">blue_tooth.click()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Web页面自动化测试，元素定位是页面自动化测试的第一步。\"><a href=\"#Web页面自动化测试，元素定位是页面自动化测试的第一步。\" class=\"headerlink\" title=\"Web页面自动化测试，元素定位是页面自动化测试的第一步。\"></a>Web页面自动化测试，元素定位是页面自动化测试的第一步。</h2><h2 id=\"App自动化测试的第一步，也是元素的定位。\"><a href=\"#App自动化测试的第一步，也是元素的定位。\" class=\"headerlink\" title=\"App自动化测试的第一步，也是元素的定位。\"></a>App自动化测试的第一步，也是元素的定位。</h2><h2 id=\"App中的元素定位工具大致有三种：\"><a href=\"#App中的元素定位工具大致有三种：\" class=\"headerlink\" title=\"App中的元素定位工具大致有三种：\"></a>App中的元素定位工具大致有三种：</h2><ol>\n<li><h2 id=\"Uiautomatorviewer工具\"><a href=\"#Uiautomatorviewer工具\" class=\"headerlink\" title=\"Uiautomatorviewer\t工具\"></a>Uiautomatorviewer\t工具</h2></li>\n<li><h2 id=\"Appium-Inspector工具\"><a href=\"#Appium-Inspector工具\" class=\"headerlink\" title=\"Appium \tInspector\t工具\"></a>Appium \tInspector\t工具</h2></li>\n<li><h2 id=\"ChromeInspect工具\"><a href=\"#ChromeInspect工具\" class=\"headerlink\" title=\"Chrome\tInspect\t工具\"></a>Chrome\tInspect\t工具</h2></li>\n</ol>\n<h2 id=\"Uiautomatorviewer\"><a href=\"#Uiautomatorviewer\" class=\"headerlink\" title=\"Uiautomatorviewer\"></a><strong>Uiautomatorviewer</strong></h2><h3 id=\"1-Uiautomatorviewer介绍\"><a href=\"#1-Uiautomatorviewer介绍\" class=\"headerlink\" title=\"1.\tUiautomatorviewer介绍\"></a>1.\tUiautomatorviewer介绍</h3><p>在开始编写代码之前，需要获取待测应用的UI元素，可以通过Uiautomatorviewer工具来获取应用的界面截图并分析。</p>\n<p>Uiautomatorviewer工具获取当前UI界面的快照，提供一个可视化的界面，来查看UI布局结构，并且可以查看各个控件的相关属性。利用这些信息来选择特定的UI组件并创建App中的自动化UI测试代码。</p>\n<p>总结：</p>\n<ul>\n<li>Uiautomatorviewer工具是专门用来定位Android系统App中原生页面中的元素。</li>\n<li>Uiautomatorviewer是AndroidSDK里的一个工具，这个工具在AndroidSDK目录下的tools文件夹下。（IOS系统在tools\\bin的子目录下）</li>\n<li>Uiautomatorviewer使用简单，速度也相对比较快。</li>\n</ul>\n<h3 id=\"2-Uiautomatorviewer工具打开方式\"><a href=\"#2-Uiautomatorviewer工具打开方式\" class=\"headerlink\" title=\"2.\tUiautomatorviewer工具打开方式\"></a>2.\tUiautomatorviewer工具打开方式</h3><p>在下载的Android—SDK中找到tools里的Uiautomatorviewer.bat文件双击打开工具</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822093033212.png\" class>\n\n<p>先会出现一个黑窗口，然后就会出现一个Uiautomatorviewer工具的界面</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822093619228.png\" class>\n\n<h3 id=\"3-Uiautomatorviewer布局界面介绍\"><a href=\"#3-Uiautomatorviewer布局界面介绍\" class=\"headerlink\" title=\"3.\tUiautomatorviewer布局界面介绍\"></a>3.\tUiautomatorviewer布局界面介绍</h3><img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822093814089.png\" class>\n\n<p>整个界面分四个区域:</p>\n<ol>\n<li><p><strong>工作栏区</strong></p>\n<p>在工作栏中共有4个按钮从左至右分别用于：</p>\n<ul>\n<li>打开已保存的界面快照和布局</li>\n<li>抓取当前手机屏幕截图（Device Screenshoot Uiautomator dupm）</li>\n<li>带有压缩层次结构的设备屏幕截图（Device Screenshoot with Compressed Hierarchy (Uiautomator dump -compressed)）第二按钮于第三按钮把全部布局呈现出来，而第三按钮只呈现有用的控件布局。比如存在一个Frame，但只有装饰功能，那么点击第三按钮时，可能不被呈现。</li>\n<li>保存当前屏幕界面的快照和布局</li>\n</ul>\n</li>\n</ol>\n<p>​\t\t\t2.<strong>屏幕截图区</strong></p>\n<p>​\t\t\t\t显示当前屏幕显示的布局图片</p>\n<p>​\t\t\t3.<strong>布局区</strong></p>\n<p>​\t\t\t\t已Xml树的形式，显示控件布局</p>\n<p>​\t\t\t4.<strong>控件属性区</strong></p>\n<p>​\t\t\t\t当点击某一控件时，将显示该控件属性信息。</p>\n<h3 id=\"4-Uiautomatorviewer工具的使用\"><a href=\"#4-Uiautomatorviewer工具的使用\" class=\"headerlink\" title=\"4.Uiautomatorviewer工具的使用\"></a>4.Uiautomatorviewer工具的使用</h3><ol>\n<li>​\t<strong>Uiautomatorviewer工具使用的前提</strong><ul>\n<li>打开Uiautomatorviewer工具</li>\n<li>所测试设备是开机状态（手机或者模拟器）\t\t\t\t</li>\n<li>确保电脑与设备是链接状态，也就是cmd进入命令行终端，输入 adb connect 127.0.0.1:62001链接夜神模拟器，输入 adb devices 能够获取设备名称</li>\n</ul>\n</li>\n</ol>\n<p>如果电脑没有与设备不是链接的状态，点击Uiautomatorviewer工具栏中的第二个按钮，来抓取手机界面是抓不到的。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822095942818.png\" class>\n\n<ol start=\"2\">\n<li>​\t<strong>抓取当前手机的屏幕界面</strong></li>\n</ol>\n<p>​\t\t\t\t\t就是点击Uiautomatorviewer工具栏中的第二个按钮进行抓取:</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822100211467.png\" class>\n\n<p>说明:点击完成后，设备上的界面就会被同步到这个工具的左侧，点击左侧需要查看的控件，在这个工具的右侧就可以看到这个控件对应的详细信息。</p>\n<p>提示:</p>\n<p>当Uiautomatorviewer能够不抓取手机屏幕时，可以先关闭和重启adb服务</p>\n<p>执行命令如下：</p>\n<ul>\n<li>adb\tkill-server</li>\n<li>adb    start-server</li>\n</ul>\n<p>​\t\t3.<strong>定位其它页面里的元素</strong></p>\n<p>​\t\t\t如果需要继续定位其他页面里的元素，先在设备中操作到定位元素的页面后，再次点击工具左上角的排子按钮，就可以抓取最新的页面元素信息。</p>\n<p>例如：</p>\n<p>定位完设置App中界面的元素，我又想定位淘宝首页的页面元素。</p>\n<p>首先在手机中打开淘宝App，进入到淘宝App的首页。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101225757.png\" class>\n\n<p>然后点击Uiautomatorviewer工具栏中的第二个按钮，来抓取新的界面</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101402155.png\" class>\n\n<p>​\t\t\t\t\t4.<strong>保存</strong></p>\n<p>​\t\t\t\t\t\t点击保存按钮，可保存抓取的屏幕截屏和一个uix文件（XML格式的的页面布局，就相当于页面源码）。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101641447.png\" class>\n\n<p>我们可以看到文件夹中会有上面说过的两个文件。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101739507.png\" class>\n\n<p>我们也可以对保存的文件进行重命名，方便我们以后的使用和管理。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101848241.png\" class>\n\n<p>​\t\t\t\t5.打开已保存的界面快照和布局</p>\n<p>​\t\t\t\t点击打开文件，可以将之前保存好的页面屏幕截图和.uix文件导入进来。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822102038461.png\" class>\n\n<p>点击ok之后，就选显示以前保存过的界面信息了。</p>\n<p>如下图所示:</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822102209820.png\" class>\n\n<p>导入后即可进行元素定位操作。</p>\n<h2 id=\"Appium-Inspector\"><a href=\"#Appium-Inspector\" class=\"headerlink\" title=\"Appium Inspector\"></a>Appium Inspector</h2><h3 id=\"1-Appium-Inspector\"><a href=\"#1-Appium-Inspector\" class=\"headerlink\" title=\"1.\tAppium Inspector\"></a>1.\t<strong>Appium Inspector</strong></h3><p>Appium Server有两种启动方式</p>\n<ul>\n<li>一种Appium Desktop有图形界面的启动方式，称之为桌面版；</li>\n<li>另一种版本是通过npm安装，使用命令行参数启动的Appium Server；</li>\n</ul>\n<p>而Appium Inspector工具就在Appium Desktop中，Appium Inspector是Appium Desktop附带的一个元素定位检查器，用来调试定位应用程序很方便。</p>\n<p>Appium Inspector工具同时支持Android系统和IOS系统中原生界面的元素定位。</p>\n<h3 id=\"2-Appium-Inspector打开方式\"><a href=\"#2-Appium-Inspector打开方式\" class=\"headerlink\" title=\"2.   Appium Inspector打开方式\"></a>2.   <strong>Appium Inspector打开方式</strong></h3><p>Appium  Desktop安装完成之后，双击打开。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822103602071.png\" class>\n\n<p>说明：界面有3个Tab选项</p>\n<ul>\n<li>Simple：默认配置，监听本机4723端口；</li>\n<li>Advanced：高级设置，可以自定义Appium Server端的配置，配置好后可以保存到Presets；</li>\n<li>Presets：修改Advanced高级设置中的配置项。</li>\n</ul>\n<p>一般我们测试直接使用Simple即可，点击Start Server按钮，启动Appium Server，并开启监听本机4723端口。开启服务后，界面跳转到服务端控制台，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822104412007.png\" class>\n\n<p>提示：</p>\n<p>控制台显示运行的脚本中的日志信息，右上角有3个按钮，分别是：</p>\n<ul>\n<li>第一个按钮Start  Inspector Session，开启Appium Inspector定位工具；注意：inspector会新开一个Session；</li>\n<li>第二个按钮Get Raws Logs ，下载当前控制台中的log信息；</li>\n<li>第三按钮Stop Server，关闭当前的Appium Server。</li>\n</ul>\n<p>有两种方式可以启动Appium Inspector工具，</p>\n<ul>\n<li>方式一：点击右上角三个按钮中的第一个（一个放大镜样子的按钮），打开Appium Inspector工具。</li>\n<li>方式二：点击左上角File–&gt;New Session Window…..Ctrl+N可以打开Appium Inspector工具</li>\n</ul>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822105454030.png\" class>\n\n<p>Appium  Inspector工具开启后的界面如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822105546386.png\" class>\n\n<h3 id=\"3-Appium-Inspector布局介绍\"><a href=\"#3-Appium-Inspector布局介绍\" class=\"headerlink\" title=\"3.Appium Inspector布局介绍\"></a>3.Appium Inspector布局介绍</h3><p>Appium Inspector布局如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822105722220.png\" class>\n\n<p>上图说明：</p>\n<ol>\n<li>布局1是Appium Inspector服务的设置。Automatic  Server：自动服务器  Custom  Server:定制服务器 Select  Cloud  Providers:选择云提供商我们一般使用Automatic Server即可：will use currently-running Appium Desktop server http：&#x2F;&#x2F;localhost：4723将使用当前运行的Appium桌面服务器http：&#x2F;&#x2F;localhost：4723</li>\n<li>布局2是高级设置。可以设置Allow Unauthorized Certificates：允许未经授权的证书。Use Proxy：使用代理服务器。初学一般我们不进行高级设置。</li>\n<li>布局3是Desired Capabilities参数设置。Desired  Capabilities：编写Desired  Capabilities参数。Saved Capability Sets：已保存的Desired Capabilities，可以进行查看和修改。Attach to Session….:附加到会话…（用到的时候再说）</li>\n</ol>\n<h3 id=\"4-Appium-Inspector工具的配置\"><a href=\"#4-Appium-Inspector工具的配置\" class=\"headerlink\" title=\"4.Appium Inspector工具的配置\"></a>4.Appium Inspector工具的配置</h3><ol>\n<li><p><strong>Appium Inspector工具使用前提</strong></p>\n<ul>\n<li>打开Appium Desktop，开启Appium Inspector工具</li>\n<li>所测试设备是开机状态（手机或者模拟器）</li>\n<li>确保电脑与设备是链接状态，也就是从cmd进入命令行终端，输入  adb  connect 127.0.0.1:62001链接夜神模拟器，输入  adb   Devices能够获取设备名称。</li>\n</ul>\n</li>\n<li><p><strong>Appium Inspector的服务器设置和高级设置</strong></p>\n<ul>\n<li>服务器设置：选择Automator Server （一定要记得点击一下，进行选中）</li>\n<li>高级设置：不进行设置</li>\n</ul>\n</li>\n<li><p><strong>编写Desired Capabilities参数（重点）</strong></p>\n<p>可以在左侧一行一行手动添加，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822111942478.png\" class>\n\n<p>提示：第二列的格式是针对第三列value值而言的。</p>\n<p>也可以把Json格式的数据编辑好，直接粘贴在右侧Json Representation里。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112351826.png\" class>\n\n<p>直接把Json格式的数据直接粘贴过来。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112448330.png\" class>\n\n<p>点击保存之后，数据会同步到左侧，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112543774.png\" class>\n</li>\n<li><p><strong>保存Desired Capabilities参数</strong></p>\n<p>如有需要，在编辑完成Desired Capabilities参数之后，可以对其进行保存，方便以后的管理和使用。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112903927.png\" class>\n\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112923800.png\" class>\n</li>\n<li><p><strong>查看和修改已存储的Desired Capabilities</strong></p>\n<p>点击Saved Capabilities sets标签页，可以查看和修改已存储的Desired Capabilities。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822113205328.png\" class>\n</li>\n<li><p><strong>开启Session，连接手机获取手机界面</strong></p>\n<p>点击start Session，开启使用Appium Inspector工具。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822113541137.png\" class>\n\n<p>说明：</p>\n<ul>\n<li>Appium Inspector需要我们手动创建一个session，其实也就是一个客户端，和Appium Server连接，并且需要在Desired Capabilities 里面填入一些参数。</li>\n<li>所需功能是在Desired Capabilities对象中编码的键和值，当请求新的自动化会话时，由Appium客户端发送到Appium Server服务器。Desired Capabilities告诉Appium驱动程序有关您希望测试如何工作的各种重要信息。最终Desired Capabilities将作为Json对象发送到Appium。</li>\n<li>所需功能的Desired Capabilities对象可以在WebDriver测试中编写脚本，也可以在Appium Server GUI中设置（通过Inspector会话中，就是上边的介绍方式）。</li>\n</ul>\n<p>提示：</p>\n<p>当Appium Inspector能够不能抓取手机屏幕时，可以关闭和重启adb服务，或者重启Appium Inspector服务。</p>\n<p>命令如下：</p>\n<ul>\n<li>adb kill-server</li>\n<li>adb start-server</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"5-Appium-Inspector工具的使用\"><a href=\"#5-Appium-Inspector工具的使用\" class=\"headerlink\" title=\"5.\tAppium Inspector工具的使用\"></a>5.\t<strong>Appium Inspector工具的使用</strong></h3><ol>\n<li><p><strong>Inspector定位控件界面的详细介绍</strong></p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822114808809.png\" class>\n\n<p>上图说明：</p>\n<ul>\n<li><p>布局1：截图的手机界面</p>\n<p>可以点击选择元素。</p>\n</li>\n<li><p>布局2：顶部操作栏</p>\n<p>从左往右的按钮依次是</p>\n<p>Select Element：选择元素。</p>\n<p>Swipe By Coordinates：选择滑动的起始和结束位置。</p>\n<p>Tap By Coordinates：使得手机界面变换可操作状态，可以点击界面的元素。</p>\n<p>Back：模拟Android的返回键。</p>\n<p>Refresh Source &amp; Screenshot：刷新页面，用来重新获取手机当前界面。</p>\n<p>Start Recording：录制操作。</p>\n<p>Search for element：校验定位表达式。</p>\n<p>Copy XML Source to Clipboard：复制XML树。</p>\n<p>Quit Session &amp; Close Inspector：退出当前Session。</p>\n</li>\n<li><p>布局3：XML树</p>\n<p>以XML树的形式，展示界面上的控件布局。</p>\n</li>\n<li><p>布局4：控件属性区域</p>\n<p>选择某个控件，在这里可以显示该控件的所有属性和值。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Selected  Element的介绍</strong></p>\n<p>选择元素功能：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822133904939.png\" class>\n\n<ol>\n<li><p><strong>顶部的Tap、Send Keys、Clear</strong></p>\n<p>模拟用户的操作：</p>\n<ul>\n<li>tap：相当于点击元素。</li>\n<li>Send keys：输入值、针对输入框的操作。</li>\n<li>Clear：清除所有值。</li>\n</ul>\n<p>建议：不建议用这些操作，因为很容易造成断开连接（左侧界面一直loading）…..反正我这边经常这样，如果不会的话当然最好用啦！</p>\n</li>\n<li><p><strong>Find By xpath</strong></p>\n<p>提供了该元素的XPATH表达式</p>\n<p>不推荐用，绝对路径太长了…..还是自己写吧！</p>\n</li>\n<li><p><strong>那串黄色背景色的英文</strong></p>\n<p>不建议使用XPATH定位器，因为它很脆弱，建议让开发团队提供独特的可访问性定位器（即：resource-id）</p>\n</li>\n<li><p><strong>Attribute-Value</strong></p>\n<p>属性列表</p>\n</li>\n</ol>\n</li>\n<li><p><strong>Search for element的介绍</strong></p>\n<p>搜索元素功能，位置如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822134908939.png\" class>\n\n<p>点击弹出如下界面：</p>\n<p>选择定位策略，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822134952072.png\" class>\n\n<p>填写对应的定位表达式，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135027681.png\" class>\n\n<p>点击Search 就可以进行元素定位了。</p>\n<p>如果能找到Element的话表达式就是正确的，然后你还可以针对元素进行一些操作。</p>\n</li>\n<li><p><strong>在Appium Inspector中操作手机</strong></p>\n<p>当我们使用Appium Inspector定位工具获取到手机设置App界面的时候，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135321766.png\" class>\n\n<p>点击顶部操作栏中的Tap By Coordinates按钮，使得手机界面变换可操作状态。</p>\n<p>然后我们在左侧的手机界面中点击显示，就可以进入到显示的界面中了。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135531324.png\" class>\n\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135548543.png\" class>\n\n<p>进入到显示之后，现在我们还是保持在可操作手机的状态。</p>\n<p>之后我们就可以继续操作手机，也可以点击Select Element按钮，在当前页面中进行选择的元素。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135756380.png\" class>\n\n<p>我们也可以点击Back按钮，返回到设置App的首界面。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135855228.png\" class>\n\n<p>提示：这一点Appium Inspector定位工具就比Uiautomatorviewer定位方便多了。</p>\n</li>\n<li><p><strong>Start Recording的介绍（了解）</strong></p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822140101952.png\" class>\n\n<ul>\n<li>操作步骤：点击开始录制之后，在点击Tap By Coordinates，进入界面可操作状态。</li>\n<li>然后就可以开始点击你想要的元素了，这个时候就开始录制了。</li>\n<li>最后在Recorder下面会显示对应的代码，右侧可以选择不同的语言。</li>\n<li>建议：不要过多使用该功能，可以看到录制的代码是根据坐标去定位元素的，换个手机同一个元素坐标可能就不同了，可移植性不高。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"6-Uiautomatorviewer工具和Appium-Inspector工具对比\"><a href=\"#6-Uiautomatorviewer工具和Appium-Inspector工具对比\" class=\"headerlink\" title=\"6.\tUiautomatorviewer工具和Appium Inspector工具对比\"></a>6.\t<strong>Uiautomatorviewer工具和Appium Inspector工具对比</strong></h3><ol>\n<li><p><strong>Uiautomatorviewer的局限性：</strong></p>\n<ol>\n<li>不能校验我们写的定位表达式是否正确定位到控件（类似浏览器上的F12）</li>\n<li>连接不够稳定</li>\n<li>不能模拟用户动作</li>\n</ol>\n</li>\n<li><p><strong>Appium Desktop的Inspector的优势：</strong></p>\n<ol>\n<li>可以校验定位表达式（如：XPATH表达式）。</li>\n<li>通过设置Desired Capabilities来连接手机，比较稳定。</li>\n<li>可以模拟用户动作（如：点击、返回、滑动等操作）。</li>\n<li>可以录制一系列操作，然后转换成代码。</li>\n</ol>\n<p>提示：</p>\n<p>学习或者编写脚本过程中，使用桌面版会方便一些，因为桌面版还提供了定位工具。而实际运行的时候，使用Server版本会更灵活，更容易与CI工具进行集成。</p>\n</li>\n</ol>\n<h2 id=\"Chrome-Inspect\"><a href=\"#Chrome-Inspect\" class=\"headerlink\" title=\"Chrome  Inspect\"></a>Chrome  Inspect</h2><h3 id=\"1-Chrome-Inspect的介绍\"><a href=\"#1-Chrome-Inspect的介绍\" class=\"headerlink\" title=\"1.\tChrome Inspect的介绍\"></a>1.\t<strong>Chrome Inspect的介绍</strong></h3><p>Chrome Inspect定位工具是用来抓取App中Webview页面的。</p>\n<p>为了项目的需求，为了更好的保证效果和布局跨平台，Android&amp;H5混合开发一般是我们不错的选择。Google浏览器中的Chrome Inspect定位工具，提供了一个移动端Web页面开发调试的功能，通过它我们可以调试手机页面，可以看到页面的源码，从而进行元素的定位。</p>\n<p><strong>使用chrome Inspect定位工具的前提条件</strong></p>\n<p>使用Chrome开发人员工具调试原生Android应用中的WebView，Android版本应该在Android4.4（kitkat）或更高版本上，通过DevTools在原生Android应用中调试WebView页面中的内容。</p>\n<h3 id=\"2-Chrome-Inspect打开方式\"><a href=\"#2-Chrome-Inspect打开方式\" class=\"headerlink\" title=\"2.\tChrome Inspect打开方式\"></a>2.\t<strong>Chrome Inspect打开方式</strong></h3><p>打开PC端的Chrome浏览器，在访问地址栏中输入Chrome：&#x2F;&#x2F;inspect&#x2F;就可以了，就是这么简单。</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822142646593.png\" class>\n\n<h3 id=\"3-Chrome-Inspect工具的使用\"><a href=\"#3-Chrome-Inspect工具的使用\" class=\"headerlink\" title=\"3.\tChrome Inspect工具的使用\"></a>3.\t<strong>Chrome Inspect工具的使用</strong></h3><ol>\n<li><p><strong>Chrome Inspect工作前提</strong></p>\n<ul>\n<li><p>所测试设备是开机状态（手机或者模拟器）。</p>\n</li>\n<li><p>确保电脑与设备是链接状态，也就是cmd进入命令行终端，</p>\n<p>输入adb connect 127.0.0.1:62001链接夜神模拟器，</p>\n<p>输入adb devices能够获取设备名称。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Chrome Inspect操作</strong></p>\n<ol>\n<li><p><strong>在App中打开含有WebView的页面</strong></p>\n<p>例如：开百度App，进入到微博登陆的界面就是一个含有Webview的页面</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822144556161.png\" class>\n</li>\n<li><p><strong>在Chrome Inspect中识别到Webview页面</strong></p>\n<p>我们进入到PC端的Chrome浏览器中，访问地址栏中输入chrome：&#x2F;&#x2F;inspect&#x2F;（没有显示的话就点击一下刷新），就可以检测到当前应用程序界面是Webview页面了。</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822145022696.png\" class>\n</li>\n<li><p>点击inspect可以进入调试视图</p>\n<p>点击如上图中的inspect，可以进入Chrome Inspect工具的调试视图。</p>\n<p>会弹出一个新窗口，显示当前页面的Webview元素信息。</p>\n<p>并且元素定位方法同Selenium WebDriver一致。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822145325532.png\" class>\n\n<p>就是这么简单。</p>\n</li>\n</ol>\n</li>\n</ol>\n<p>4.<strong>使用Chrome Inspect遇到的问题</strong></p>\n<ol>\n<li><p><strong>Android系统版本问题</strong></p>\n<p>Android移动设备版本应该在Android4.4或更高版本上。</p>\n<p>从Android4.4开始，webkit是支持远程调试的。</p>\n</li>\n<li><p><strong>所测App的debug模式要打开</strong></p>\n<p>在使用Chrome Inspect工具调试移动端App的Webview页面的时候，需要将该App的debug模式打开。</p>\n<p>但其实大部分App的debug模式都是关闭的，要去找一个开启debug模式的版本还是比较麻烦的，因此需要使用借助第三方工具来强制开启任何App的Android webview debug模式，使之可以使用chrome Inspect。</p>\n<p>而这个工具就是Xposed。</p>\n</li>\n<li><p><strong>Xposed工具的安装</strong></p>\n<ol>\n<li><p><strong>将设备进行root。</strong></p>\n<p>因为涉及到root权限，因此需要将设备进行root。</p>\n<p>很多工具可以来root，比如kingRoot等。</p>\n<p>注：Android模拟器默认root</p>\n</li>\n<li><p><strong>下载Xposed框架。</strong></p>\n<p>官方下载地址：<a href=\"http://repo.xposed.info/module/de.robv.android.xposed.installer\">http://repo.xposed.info/module/de.robv.android.xposed.installer</a></p>\n<p>点击页面下方的show older version，选择一个稳定版本进行下载。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822150817186.png\" class>\n</li>\n<li><p><strong>安装Xposed框架。</strong></p>\n<p>将下载好的Xposed安装包de.robv.android.xposed.installer_v32_de4f0d.apk,直接拖入到Android模拟器中，进行安装。</p>\n<p>安装好后如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151124832.png\" class>\n</li>\n<li><p>安装&#x2F;更新Xposed框架。</p>\n<p>打开Xposed Installer，选择“安装&#x2F;更新”的最新版，然后“安装”会自动下载刷入。（过程可能会有一些慢）</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151338617.png\" class>\n\n<p>安装界面，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151416804.png\" class>\n\n<p>安装更新完成后的界面，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151524633.png\" class></li>\n</ol>\n</li>\n<li><p><strong>安装Xposed webview debugging模块。</strong></p>\n<p>打开Xposed界面中点击左上角的三条横杠，选择模块，然后启用需激活模块的复选框，正常重启后即可使用。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151841755.png\" class>\n\n<p>如果你的手机中没有安装webViewDebugHook模块或者没有任何模块，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152006781.png\" class>\n\n<p>可以在Xposed中进行下载安装WebViewDebugHook模块。</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152114053.png\" class>\n\n<p>然后按照上面的方式激活WebViewDebugHook模块即可。</p>\n</li>\n<li><p><strong>HTTP&#x2F;1.1 404 Not Found和空白页问题</strong></p>\n<p>在chrome：&#x2F;&#x2F;inspect&#x2F;#devices中点击inspect出现的窗口中，界面是出现HTTP&#x2F;1.1 404 Not Found 或者是空白页的现象。</p>\n<p>空白页，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152535217.png\" class>\n\n<p>HTTP&#x2F;1.1 404 Not Found界面，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152632759.png\" class>\n\n<p>原因：</p>\n<p>对于国内的程序猿来说，由于无法访问<a href=\"https://chrome-devtools-frontend.appspot.com,就会出现出现http/1.1\">https://chrome-devtools-frontend.appspot.com,就会出现出现HTTP/1.1</a> 404 Not Found或者空白页面的现象。</p>\n<p>例如上面的@33f6ad690e178169a17596eeec8596751a696d1e就是移动设备中浏览器的一个版本号，当你换一个手机或模拟器的时候，版本号可能就不一样了。</p>\n<p>因为不同型号的手机生产商可能会打包不同版本的chrome浏览器内核，chrome Inspect定位工具就会先访问<a href=\"https://chrome-devtools-frontend.appspot.com,下载对应的chrome-devtools相关驱动,而国内无法访问并下载这些驱动,就出现了404和空白页./\">https://chrome-devtools-frontend.appspot.com,下载对应的chrome-devtools相关驱动，而国内无法访问并下载这些驱动，就出现了404和空白页。</a></p>\n<p>网上找到如下三种解决方式：</p>\n<ul>\n<li><p>方法一：下载devtools的Inspect的离线开发者调试工具包。（花钱，没有免费的）</p>\n</li>\n<li><p>方法二：修改网络连接，修改hosts文件。</p>\n</li>\n<li><p>方法三：使用第三方的chrome内核的浏览器，如QQ浏览器。</p>\n<p>（都不好使，大家也可以自己试试）</p>\n<p>推荐使用VPN，或者下载一个可FQ的谷歌浏览器用一下即可，不用的时候就关了</p>\n</li>\n</ul>\n</li>\n<li><p><strong>补充：安卓模拟器打开开发者选项</strong></p>\n<ol>\n<li>打开手机的“设置”，进入到“设置”页面</li>\n<li>滑到“设置”页面的最下端，找到“关于手机”，进入到“关于手机”页面</li>\n<li>找到“版本号”，连续点击</li>\n<li>会弹出一段文字提醒，直到提醒次数为0后，结束点击</li>\n<li>返回“设置”界面，开发者选项就出来了</li>\n</ol>\n</li>\n</ol>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h1 id=\"移动端自动化测试框架之Appium\"><a href=\"#移动端自动化测试框架之Appium\" class=\"headerlink\" title=\"移动端自动化测试框架之Appium\"></a><strong>移动端自动化测试框架之Appium</strong></h1><h2 id=\"Appium元素定位\"><a href=\"#Appium元素定位\" class=\"headerlink\" title=\"Appium元素定位\"></a>Appium元素定位</h2><p>元素定位工具：</p>\n<ul>\n<li>Android使用Android—SDK里的Uiautomatorviewer工具。</li>\n<li>IOS使用Appium Desktop里的Appium Inspector检测器。</li>\n</ul>\n<h4 id=\"1-By-id定位（废弃统一用MobileBy类）\"><a href=\"#1-By-id定位（废弃统一用MobileBy类）\" class=\"headerlink\" title=\"1.\tBy_id定位（废弃统一用MobileBy类）\"></a>1.\t<strong>By_id定位（废弃统一用MobileBy类）</strong></h4><p>通过id属性定位元素，IOS应用上的元素没有这个属性，所有仅支持Android。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_id(<span class=\"string\">&quot;id属性值&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_elements_by_id(<span class=\"string\">&quot;id属性值&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：利用Uiautomatorviewer工具查看元素信息，resource-id属性就是元素的id属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822155516893.png\" class>\n\n<p>练习：</p>\n<p>开启Appium服务，执行如下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)</span></span><br><span class=\"line\"><span class=\"string\">\t练习目标：掌握元素定位方式id定位</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\tid定位</span></span><br><span class=\"line\"><span class=\"string\">\t\t只适用于Android，IOS不支持，id并不是唯一属性标识</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_element_by_id(&quot;id属性值&quot;)#单数</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_elements_by_id(&quot;id属性值&quot;)#复数</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用id属性定位”显示“</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>:<span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>:<span class=\"string\">&quot;7.1.2&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>:<span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>:<span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>:<span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#App启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#在移动端，元素的id不再是唯一的，</span></span><br><span class=\"line\"><span class=\"comment\">#我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。</span></span><br><span class=\"line\"><span class=\"comment\">#这个时候我们就要用driver.find_element_by_id来定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#对应的字段resource-id属性值。</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 定位设置ap界面中的所有标题</span></span><br><span class=\"line\">id_elements= driver.find_elements_by_id(<span class=\"string\">&quot;android:id/title&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2 查看一共获取了多少标题title</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;元素数量：&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>(id_elements)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.3 遍历获取标题对应的文本</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> id_elements:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element.text)<span class=\"comment\">#遍历打印所有元素的text值</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822161734990.png\" class>\n\n<h4 id=\"2-by-name定位\"><a href=\"#2-by-name定位\" class=\"headerlink\" title=\"2.\tby_name定位\"></a>2.\tby_name定位</h4><p>Appium版本在1.5之后，Android就不再支持name的元素定位方法。</p>\n<p>Android如果使用name方法，则报如下错误：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822162016028.png\" class>\n\n<p>IOS可以正常使用name元素定位。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_name(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_name(<span class=\"string\">&quot;name&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>如图所示：利用Appium Inspector检查器，name属性指的是name属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822162337100.png\" class>\n\n<p>使用命令：driver.find_element_by_name(“3个月”)</p>\n<p>这里我们就不做演示了。</p>\n<h4 id=\"3-by-class-name定位\"><a href=\"#3-by-class-name定位\" class=\"headerlink\" title=\"3.\tby_class_name定位\"></a>3.\t<strong>by_class_name定位</strong></h4><p>通过class_name属性定位元素。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_class_name(<span class=\"string\">&quot;class值&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_class_name(<span class=\"string\">&quot;class值&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p><strong>Android</strong>:</p>\n<p>如图所示：利用Uiautomatorviewer工具查看，class_name属性指的是class属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822162910046.png\" class>\n</li>\n<li><p><strong>IOS:</strong></p>\n<p>如图所示：利用Appium Inspector检查器，class_name属性指的是type属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822163042684.png\" class>\n\n<p>使用命令：driver.find_element_by_class_name(“XCUIElementTypeStaticText”)</p>\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)</span></span><br><span class=\"line\"><span class=\"string\">\t练习目标：掌握元素定位方式id定位</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\tid定位</span></span><br><span class=\"line\"><span class=\"string\">\t\t只适用于Android，IOS不支持，id并不是唯一属性标识</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_element_by_class_name(&quot;id属性值&quot;)#单数</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_elements_by_class_naem(&quot;id属性值&quot;)#复数</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用id属性定位”显示“</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>:<span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>:<span class=\"string\">&quot;7.1.2&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>:<span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>:<span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>:<span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#App启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#在移动端，元素的id不再是唯一的，</span></span><br><span class=\"line\"><span class=\"comment\">#我们可以在Uiautomatorviewer工具查看到，一个页面中类似元素的id都是相同的。</span></span><br><span class=\"line\"><span class=\"comment\">#这个时候我们就要用driver.find_element_by_id来定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#对应的字段resource-id属性值。</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 定位设置ap界面中的所有标题</span></span><br><span class=\"line\">class_elements= driver.find_elements_by_class_name(<span class=\"string\">&quot;android.widget.TextView&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2 查看一共获取了多少标题title</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;元素数量：&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>(class_elements)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.3 遍历获取标题对应的文本</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> class_elements:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element.text)<span class=\"comment\">#遍历打印所有元素的text值</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822163521210.png\" class></li>\n</ol>\n<h4 id=\"4-by-xpath定位\"><a href=\"#4-by-xpath定位\" class=\"headerlink\" title=\"4.\tby_xpath定位\"></a>4.\t<strong>by_xpath定位</strong></h4><p>通过xpath定位元素，这样就可以在页面中定位一个单个的元素了。</p>\n<p>（如果一个元素的id属性或者class_name属性也是唯一的，我们也可以通过id属性或者class_name属性进行定位。）</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">deriver.find_element_by_xpath(<span class=\"string\">&quot;xpath&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">deriver.find_elements_by_xpath(<span class=\"string\">&quot;xpath&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在移动端xpath用法与Web Selenium中的用法一致，在移动端自动化测试中使用xpath定位元素是比较多的。</p>\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t必须掌握appium中元素定位基本方法(这些方法我们在Selenium中学习过)</span></span><br><span class=\"line\"><span class=\"string\">\t练习目标：掌握元素定位方式id定位</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\tid定位</span></span><br><span class=\"line\"><span class=\"string\">\t\t只适用于Android，IOS不支持，id并不是唯一属性标识</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_element_by_xpath(&quot;xpath表达式&quot;)#单数</span></span><br><span class=\"line\"><span class=\"string\">\t\tdriver.find_elements_by_xpath(&quot;xpath表达式&quot;)#复数</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用xpath定位”显示“标题</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>:<span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>:<span class=\"string\">&quot;7.1.2&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>:<span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>:<span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>:<span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#App启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 xpath定位“显示”按钮</span></span><br><span class=\"line\">more = driver.find_elements_by_xpath(<span class=\"string\">&quot;//*[@text=&#x27;显示&#x27;]&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2 点击“显示”元素，进入显示页面</span></span><br><span class=\"line\">more.click()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-by-accessibility-id定位\"><a href=\"#5-by-accessibility-id定位\" class=\"headerlink\" title=\"5.\tby_accessibility_id定位\"></a>5.\t<strong>by_accessibility_id定位</strong></h4><p>通过accessibility_id属性查找元素。（移动端特有）</p>\n<p>标识附加到给定元素的辅助功能或标签的字符串。</p>\n<p>针对ios的辅助功能标识符和针对Android的内容描述。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_accessibity_id(<span class=\"string\">&quot;accessibity_id&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_accessibity_id(<span class=\"string\">&quot;accessibity_id&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>Android：</p>\n<p>如图所示：利用Uiautomatorviewer工具查看，accessility_id属性指的是content-desc属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230825111551346.png\" class>\n\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\"> \t掌握appium中accessibility_id元素定位方法</span></span><br><span class=\"line\"><span class=\"string\"> 2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\"> \t使用方法：</span></span><br><span class=\"line\"><span class=\"string\"> \tdriver.find_element_by_accessibility_id(&quot;content-desc属性&quot;)</span></span><br><span class=\"line\"><span class=\"string\"> 3.需求</span></span><br><span class=\"line\"><span class=\"string\"> \t在设置App中使用accessibility_id方法定位搜索按钮</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象， 添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>: <span class=\"string\">&quot;真机序列号或模拟器本机地址127.0.0.1 ：+模拟器端口&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>： <span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>: <span class=\"string\">&quot;12&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>: <span class=\"string\">&quot;com.android.setting&quot;</span>,<span class=\"comment\">#包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>: <span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#app启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1:4723/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#4.1 定位搜索按钮，通过accessibility_id方法</span></span><br><span class=\"line\">search = driver.find_element_by_accessibility_id(<span class=\"string\">&quot;搜索&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2点击搜索按钮</span></span><br><span class=\"line\">serch.click()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.关闭app</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>IOS</p>\n<p>如图所示：利用Appium Inspector检查器，accessibility_id指的是accessibility id属性或者name属性或label属性。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230825113322301.png\" class>\n\n<p>使用方法：driver.find_element_by_accessibility_id(“More Info”)</p>\n</li>\n</ol>\n<h4 id=\"6-By-android-uiautomator定位\"><a href=\"#6-By-android-uiautomator定位\" class=\"headerlink\" title=\"6.\tBy_android_uiautomator定位\"></a>6.\t<strong>By_android_uiautomator定位</strong></h4><p>通过Android Uiautomator搜索查找元素。（Android系统特有）</p>\n<p>这允许使用Uiautomator库，使用递归元素搜索来找到Android应用程序中的元素。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单数</span></span><br><span class=\"line\">driver.find_element_by_android_uiautomator(<span class=\"string\">&quot;android_uiautomator&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#复数</span></span><br><span class=\"line\">driver.find_element_by_android_uiautomator</span><br></pre></td></tr></table></figure>\n\n<p>可以利用uiautomatorviewer工具查看元素属性信息。</p>\n<p>uiselector工具类介绍：</p>\n<ol>\n<li><p>text属性的方法（text指的是text属性）</p>\n<p>（text指的是text属性）</p>\n<ul>\n<li><p>完全匹配。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector(),text(“AndroidUI”)’)</p>\n</li>\n<li><p>包含匹配（模拟定位）。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().textContains(“Android”)’)</p>\n</li>\n<li><p>以什么内容开始匹配。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().textStartWith(“AndroidUI”)’)</p>\n</li>\n<li><p>正则匹配查找。</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().textMatches(“^Android.*”)’)</p>\n</li>\n</ul>\n</li>\n<li><p>className属性的方法</p>\n<p>（className指的是class属性）</p>\n<ul>\n<li><p>完全匹配</p>\n<p>driver.find_element_by_uiautomator(‘new UiSelector().className(“android.widget.TextView”).text(“AndroidUI”)’)</p>\n</li>\n<li><p>正则匹配查找</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().classNameMatches(“.*TextViews”).text(AndroidUI)’)</p>\n</li>\n</ul>\n</li>\n<li><p>xpath方法定位</p>\n<p>driver.find_element_by_android_uiautomator(‘new UiSelector().className(“android,widget.TextView”).childSelector(new UiSelector().text(“AndroidUI”)’)</p>\n</li>\n<li><p>resourceId属性的方法</p>\n<p>（resourceId指的是resource-id属性）</p>\n<ul>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().resourceId(“com.android.calculator2:id&#x2F;op_add”)’)</li>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().resourceIdMatches(“.*id&#x2F;op_adds”)’)</li>\n</ul>\n</li>\n<li><p>description属性的方法</p>\n<p>（description指的是content-desc属性）</p>\n<ul>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().description(“加”)’)</li>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().descriptionStartsWith(“加”)’)</li>\n<li>driver.find_element_by_android_uiautomator(‘new UiSelector().descriptionMatches(“^加.*”)’)</li>\n</ul>\n<p>UiSelector类中还支持其他一些方法，比如根据控件属性是否可聚焦可长按等来缩小要定位的控件的范围，具体使用方法不一一列举了。</p>\n<p>练习：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.学习目标</span></span><br><span class=\"line\"><span class=\"string\">\t了解appium中元素定位Android专用方法 Android_UIautomator</span></span><br><span class=\"line\"><span class=\"string\">2.操作步骤</span></span><br><span class=\"line\"><span class=\"string\">\t使用方法：</span></span><br><span class=\"line\"><span class=\"string\">\tdriver.find_element_by_android_uiautomator(&quot;java代码&quot;)</span></span><br><span class=\"line\"><span class=\"string\">\tjava代码中使用UiSelector类来处理元素的定位</span></span><br><span class=\"line\"><span class=\"string\">\t\tnew UiSelector().text(&quot;本文内容&quot;)</span></span><br><span class=\"line\"><span class=\"string\">3.需求</span></span><br><span class=\"line\"><span class=\"string\">\t在设置App中使用Android专用的定位方法</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.导入appium</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> appium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.创建Desired capabilities对象，添加启动参数</span></span><br><span class=\"line\">desired_caps = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;deviceName&quot;</span>: <span class=\"string\">&quot;127.0.0.1:62001&quot;</span>,<span class=\"comment\">#设备名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformName&quot;</span>: <span class=\"string\">&quot;Android&quot;</span>,<span class=\"comment\">#系统名称</span></span><br><span class=\"line\">    <span class=\"string\">&quot;platformVersion&quot;</span>: <span class=\"string\">&quot;12&quot;</span>,<span class=\"comment\">#系统版本</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appPackage&quot;</span>: <span class=\"string\">&quot;com.android.settings&quot;</span>,<span class=\"comment\">#App包名</span></span><br><span class=\"line\">    <span class=\"string\">&quot;appActivity&quot;</span>: <span class=\"string\">&quot;.Settings&quot;</span><span class=\"comment\">#app启动名</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.启动App</span></span><br><span class=\"line\">driver = webdriver.Remote(<span class=\"string\">&quot;http://127.0.0.1/wd/hub&quot;</span>,desired_caps)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.定位元素</span></span><br><span class=\"line\"><span class=\"comment\">#4.1定位蓝牙，通过Android_Uiautomator方法</span></span><br><span class=\"line\"><span class=\"comment\">#单引号里面是java代码，使用UiSelector这个类来定位元素。</span></span><br><span class=\"line\">blue_tooth = driver.find_element_by_android_uiautomator(<span class=\"string\">&quot;new UiSelector().text(&quot;</span>蓝牙<span class=\"string\">&quot;)&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#注意：</span></span><br><span class=\"line\"><span class=\"comment\">#上面new UiSelector().text(&quot;蓝牙&quot;)中，一定是外单引号，里边双引号</span></span><br><span class=\"line\"><span class=\"comment\">#因为这是一段java代码，而text()方法中要传入一个string类型的参数</span></span><br><span class=\"line\"><span class=\"comment\">#java中String类型的参数是加双引号的，所以必须是外单内双</span></span><br><span class=\"line\"><span class=\"comment\">#否则会报错。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.2点击搜索按钮</span></span><br><span class=\"line\">blue_tooth.click()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.关闭App</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Web页面自动化测试，元素定位是页面自动化测试的第一步。\"><a href=\"#Web页面自动化测试，元素定位是页面自动化测试的第一步。\" class=\"headerlink\" title=\"Web页面自动化测试，元素定位是页面自动化测试的第一步。\"></a>Web页面自动化测试，元素定位是页面自动化测试的第一步。</h2><h2 id=\"App自动化测试的第一步，也是元素的定位。\"><a href=\"#App自动化测试的第一步，也是元素的定位。\" class=\"headerlink\" title=\"App自动化测试的第一步，也是元素的定位。\"></a>App自动化测试的第一步，也是元素的定位。</h2><h2 id=\"App中的元素定位工具大致有三种：\"><a href=\"#App中的元素定位工具大致有三种：\" class=\"headerlink\" title=\"App中的元素定位工具大致有三种：\"></a>App中的元素定位工具大致有三种：</h2><ol>\n<li><h2 id=\"Uiautomatorviewer工具\"><a href=\"#Uiautomatorviewer工具\" class=\"headerlink\" title=\"Uiautomatorviewer\t工具\"></a>Uiautomatorviewer\t工具</h2></li>\n<li><h2 id=\"Appium-Inspector工具\"><a href=\"#Appium-Inspector工具\" class=\"headerlink\" title=\"Appium \tInspector\t工具\"></a>Appium \tInspector\t工具</h2></li>\n<li><h2 id=\"ChromeInspect工具\"><a href=\"#ChromeInspect工具\" class=\"headerlink\" title=\"Chrome\tInspect\t工具\"></a>Chrome\tInspect\t工具</h2></li>\n</ol>\n<h2 id=\"Uiautomatorviewer\"><a href=\"#Uiautomatorviewer\" class=\"headerlink\" title=\"Uiautomatorviewer\"></a><strong>Uiautomatorviewer</strong></h2><h3 id=\"1-Uiautomatorviewer介绍\"><a href=\"#1-Uiautomatorviewer介绍\" class=\"headerlink\" title=\"1.\tUiautomatorviewer介绍\"></a>1.\tUiautomatorviewer介绍</h3><p>在开始编写代码之前，需要获取待测应用的UI元素，可以通过Uiautomatorviewer工具来获取应用的界面截图并分析。</p>\n<p>Uiautomatorviewer工具获取当前UI界面的快照，提供一个可视化的界面，来查看UI布局结构，并且可以查看各个控件的相关属性。利用这些信息来选择特定的UI组件并创建App中的自动化UI测试代码。</p>\n<p>总结：</p>\n<ul>\n<li>Uiautomatorviewer工具是专门用来定位Android系统App中原生页面中的元素。</li>\n<li>Uiautomatorviewer是AndroidSDK里的一个工具，这个工具在AndroidSDK目录下的tools文件夹下。（IOS系统在tools\\bin的子目录下）</li>\n<li>Uiautomatorviewer使用简单，速度也相对比较快。</li>\n</ul>\n<h3 id=\"2-Uiautomatorviewer工具打开方式\"><a href=\"#2-Uiautomatorviewer工具打开方式\" class=\"headerlink\" title=\"2.\tUiautomatorviewer工具打开方式\"></a>2.\tUiautomatorviewer工具打开方式</h3><p>在下载的Android—SDK中找到tools里的Uiautomatorviewer.bat文件双击打开工具</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822093033212.png\" class>\n\n<p>先会出现一个黑窗口，然后就会出现一个Uiautomatorviewer工具的界面</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822093619228.png\" class>\n\n<h3 id=\"3-Uiautomatorviewer布局界面介绍\"><a href=\"#3-Uiautomatorviewer布局界面介绍\" class=\"headerlink\" title=\"3.\tUiautomatorviewer布局界面介绍\"></a>3.\tUiautomatorviewer布局界面介绍</h3><img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822093814089.png\" class>\n\n<p>整个界面分四个区域:</p>\n<ol>\n<li><p><strong>工作栏区</strong></p>\n<p>在工作栏中共有4个按钮从左至右分别用于：</p>\n<ul>\n<li>打开已保存的界面快照和布局</li>\n<li>抓取当前手机屏幕截图（Device Screenshoot Uiautomator dupm）</li>\n<li>带有压缩层次结构的设备屏幕截图（Device Screenshoot with Compressed Hierarchy (Uiautomator dump -compressed)）第二按钮于第三按钮把全部布局呈现出来，而第三按钮只呈现有用的控件布局。比如存在一个Frame，但只有装饰功能，那么点击第三按钮时，可能不被呈现。</li>\n<li>保存当前屏幕界面的快照和布局</li>\n</ul>\n</li>\n</ol>\n<p>​\t\t\t2.<strong>屏幕截图区</strong></p>\n<p>​\t\t\t\t显示当前屏幕显示的布局图片</p>\n<p>​\t\t\t3.<strong>布局区</strong></p>\n<p>​\t\t\t\t已Xml树的形式，显示控件布局</p>\n<p>​\t\t\t4.<strong>控件属性区</strong></p>\n<p>​\t\t\t\t当点击某一控件时，将显示该控件属性信息。</p>\n<h3 id=\"4-Uiautomatorviewer工具的使用\"><a href=\"#4-Uiautomatorviewer工具的使用\" class=\"headerlink\" title=\"4.Uiautomatorviewer工具的使用\"></a>4.Uiautomatorviewer工具的使用</h3><ol>\n<li>​\t<strong>Uiautomatorviewer工具使用的前提</strong><ul>\n<li>打开Uiautomatorviewer工具</li>\n<li>所测试设备是开机状态（手机或者模拟器）\t\t\t\t</li>\n<li>确保电脑与设备是链接状态，也就是cmd进入命令行终端，输入 adb connect 127.0.0.1:62001链接夜神模拟器，输入 adb devices 能够获取设备名称</li>\n</ul>\n</li>\n</ol>\n<p>如果电脑没有与设备不是链接的状态，点击Uiautomatorviewer工具栏中的第二个按钮，来抓取手机界面是抓不到的。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822095942818.png\" class>\n\n<ol start=\"2\">\n<li>​\t<strong>抓取当前手机的屏幕界面</strong></li>\n</ol>\n<p>​\t\t\t\t\t就是点击Uiautomatorviewer工具栏中的第二个按钮进行抓取:</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822100211467.png\" class>\n\n<p>说明:点击完成后，设备上的界面就会被同步到这个工具的左侧，点击左侧需要查看的控件，在这个工具的右侧就可以看到这个控件对应的详细信息。</p>\n<p>提示:</p>\n<p>当Uiautomatorviewer能够不抓取手机屏幕时，可以先关闭和重启adb服务</p>\n<p>执行命令如下：</p>\n<ul>\n<li>adb\tkill-server</li>\n<li>adb    start-server</li>\n</ul>\n<p>​\t\t3.<strong>定位其它页面里的元素</strong></p>\n<p>​\t\t\t如果需要继续定位其他页面里的元素，先在设备中操作到定位元素的页面后，再次点击工具左上角的排子按钮，就可以抓取最新的页面元素信息。</p>\n<p>例如：</p>\n<p>定位完设置App中界面的元素，我又想定位淘宝首页的页面元素。</p>\n<p>首先在手机中打开淘宝App，进入到淘宝App的首页。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101225757.png\" class>\n\n<p>然后点击Uiautomatorviewer工具栏中的第二个按钮，来抓取新的界面</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101402155.png\" class>\n\n<p>​\t\t\t\t\t4.<strong>保存</strong></p>\n<p>​\t\t\t\t\t\t点击保存按钮，可保存抓取的屏幕截屏和一个uix文件（XML格式的的页面布局，就相当于页面源码）。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101641447.png\" class>\n\n<p>我们可以看到文件夹中会有上面说过的两个文件。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101739507.png\" class>\n\n<p>我们也可以对保存的文件进行重命名，方便我们以后的使用和管理。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822101848241.png\" class>\n\n<p>​\t\t\t\t5.打开已保存的界面快照和布局</p>\n<p>​\t\t\t\t点击打开文件，可以将之前保存好的页面屏幕截图和.uix文件导入进来。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822102038461.png\" class>\n\n<p>点击ok之后，就选显示以前保存过的界面信息了。</p>\n<p>如下图所示:</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822102209820.png\" class>\n\n<p>导入后即可进行元素定位操作。</p>\n<h2 id=\"Appium-Inspector\"><a href=\"#Appium-Inspector\" class=\"headerlink\" title=\"Appium Inspector\"></a>Appium Inspector</h2><h3 id=\"1-Appium-Inspector\"><a href=\"#1-Appium-Inspector\" class=\"headerlink\" title=\"1.\tAppium Inspector\"></a>1.\t<strong>Appium Inspector</strong></h3><p>Appium Server有两种启动方式</p>\n<ul>\n<li>一种Appium Desktop有图形界面的启动方式，称之为桌面版；</li>\n<li>另一种版本是通过npm安装，使用命令行参数启动的Appium Server；</li>\n</ul>\n<p>而Appium Inspector工具就在Appium Desktop中，Appium Inspector是Appium Desktop附带的一个元素定位检查器，用来调试定位应用程序很方便。</p>\n<p>Appium Inspector工具同时支持Android系统和IOS系统中原生界面的元素定位。</p>\n<h3 id=\"2-Appium-Inspector打开方式\"><a href=\"#2-Appium-Inspector打开方式\" class=\"headerlink\" title=\"2.   Appium Inspector打开方式\"></a>2.   <strong>Appium Inspector打开方式</strong></h3><p>Appium  Desktop安装完成之后，双击打开。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822103602071.png\" class>\n\n<p>说明：界面有3个Tab选项</p>\n<ul>\n<li>Simple：默认配置，监听本机4723端口；</li>\n<li>Advanced：高级设置，可以自定义Appium Server端的配置，配置好后可以保存到Presets；</li>\n<li>Presets：修改Advanced高级设置中的配置项。</li>\n</ul>\n<p>一般我们测试直接使用Simple即可，点击Start Server按钮，启动Appium Server，并开启监听本机4723端口。开启服务后，界面跳转到服务端控制台，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822104412007.png\" class>\n\n<p>提示：</p>\n<p>控制台显示运行的脚本中的日志信息，右上角有3个按钮，分别是：</p>\n<ul>\n<li>第一个按钮Start  Inspector Session，开启Appium Inspector定位工具；注意：inspector会新开一个Session；</li>\n<li>第二个按钮Get Raws Logs ，下载当前控制台中的log信息；</li>\n<li>第三按钮Stop Server，关闭当前的Appium Server。</li>\n</ul>\n<p>有两种方式可以启动Appium Inspector工具，</p>\n<ul>\n<li>方式一：点击右上角三个按钮中的第一个（一个放大镜样子的按钮），打开Appium Inspector工具。</li>\n<li>方式二：点击左上角File–&gt;New Session Window…..Ctrl+N可以打开Appium Inspector工具</li>\n</ul>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822105454030.png\" class>\n\n<p>Appium  Inspector工具开启后的界面如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822105546386.png\" class>\n\n<h3 id=\"3-Appium-Inspector布局介绍\"><a href=\"#3-Appium-Inspector布局介绍\" class=\"headerlink\" title=\"3.Appium Inspector布局介绍\"></a>3.Appium Inspector布局介绍</h3><p>Appium Inspector布局如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822105722220.png\" class>\n\n<p>上图说明：</p>\n<ol>\n<li>布局1是Appium Inspector服务的设置。Automatic  Server：自动服务器  Custom  Server:定制服务器 Select  Cloud  Providers:选择云提供商我们一般使用Automatic Server即可：will use currently-running Appium Desktop server http：&#x2F;&#x2F;localhost：4723将使用当前运行的Appium桌面服务器http：&#x2F;&#x2F;localhost：4723</li>\n<li>布局2是高级设置。可以设置Allow Unauthorized Certificates：允许未经授权的证书。Use Proxy：使用代理服务器。初学一般我们不进行高级设置。</li>\n<li>布局3是Desired Capabilities参数设置。Desired  Capabilities：编写Desired  Capabilities参数。Saved Capability Sets：已保存的Desired Capabilities，可以进行查看和修改。Attach to Session….:附加到会话…（用到的时候再说）</li>\n</ol>\n<h3 id=\"4-Appium-Inspector工具的配置\"><a href=\"#4-Appium-Inspector工具的配置\" class=\"headerlink\" title=\"4.Appium Inspector工具的配置\"></a>4.Appium Inspector工具的配置</h3><ol>\n<li><p><strong>Appium Inspector工具使用前提</strong></p>\n<ul>\n<li>打开Appium Desktop，开启Appium Inspector工具</li>\n<li>所测试设备是开机状态（手机或者模拟器）</li>\n<li>确保电脑与设备是链接状态，也就是从cmd进入命令行终端，输入  adb  connect 127.0.0.1:62001链接夜神模拟器，输入  adb   Devices能够获取设备名称。</li>\n</ul>\n</li>\n<li><p><strong>Appium Inspector的服务器设置和高级设置</strong></p>\n<ul>\n<li>服务器设置：选择Automator Server （一定要记得点击一下，进行选中）</li>\n<li>高级设置：不进行设置</li>\n</ul>\n</li>\n<li><p><strong>编写Desired Capabilities参数（重点）</strong></p>\n<p>可以在左侧一行一行手动添加，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822111942478.png\" class>\n\n<p>提示：第二列的格式是针对第三列value值而言的。</p>\n<p>也可以把Json格式的数据编辑好，直接粘贴在右侧Json Representation里。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112351826.png\" class>\n\n<p>直接把Json格式的数据直接粘贴过来。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112448330.png\" class>\n\n<p>点击保存之后，数据会同步到左侧，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112543774.png\" class>\n</li>\n<li><p><strong>保存Desired Capabilities参数</strong></p>\n<p>如有需要，在编辑完成Desired Capabilities参数之后，可以对其进行保存，方便以后的管理和使用。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112903927.png\" class>\n\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822112923800.png\" class>\n</li>\n<li><p><strong>查看和修改已存储的Desired Capabilities</strong></p>\n<p>点击Saved Capabilities sets标签页，可以查看和修改已存储的Desired Capabilities。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822113205328.png\" class>\n</li>\n<li><p><strong>开启Session，连接手机获取手机界面</strong></p>\n<p>点击start Session，开启使用Appium Inspector工具。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822113541137.png\" class>\n\n<p>说明：</p>\n<ul>\n<li>Appium Inspector需要我们手动创建一个session，其实也就是一个客户端，和Appium Server连接，并且需要在Desired Capabilities 里面填入一些参数。</li>\n<li>所需功能是在Desired Capabilities对象中编码的键和值，当请求新的自动化会话时，由Appium客户端发送到Appium Server服务器。Desired Capabilities告诉Appium驱动程序有关您希望测试如何工作的各种重要信息。最终Desired Capabilities将作为Json对象发送到Appium。</li>\n<li>所需功能的Desired Capabilities对象可以在WebDriver测试中编写脚本，也可以在Appium Server GUI中设置（通过Inspector会话中，就是上边的介绍方式）。</li>\n</ul>\n<p>提示：</p>\n<p>当Appium Inspector能够不能抓取手机屏幕时，可以关闭和重启adb服务，或者重启Appium Inspector服务。</p>\n<p>命令如下：</p>\n<ul>\n<li>adb kill-server</li>\n<li>adb start-server</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"5-Appium-Inspector工具的使用\"><a href=\"#5-Appium-Inspector工具的使用\" class=\"headerlink\" title=\"5.\tAppium Inspector工具的使用\"></a>5.\t<strong>Appium Inspector工具的使用</strong></h3><ol>\n<li><p><strong>Inspector定位控件界面的详细介绍</strong></p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822114808809.png\" class>\n\n<p>上图说明：</p>\n<ul>\n<li><p>布局1：截图的手机界面</p>\n<p>可以点击选择元素。</p>\n</li>\n<li><p>布局2：顶部操作栏</p>\n<p>从左往右的按钮依次是</p>\n<p>Select Element：选择元素。</p>\n<p>Swipe By Coordinates：选择滑动的起始和结束位置。</p>\n<p>Tap By Coordinates：使得手机界面变换可操作状态，可以点击界面的元素。</p>\n<p>Back：模拟Android的返回键。</p>\n<p>Refresh Source &amp; Screenshot：刷新页面，用来重新获取手机当前界面。</p>\n<p>Start Recording：录制操作。</p>\n<p>Search for element：校验定位表达式。</p>\n<p>Copy XML Source to Clipboard：复制XML树。</p>\n<p>Quit Session &amp; Close Inspector：退出当前Session。</p>\n</li>\n<li><p>布局3：XML树</p>\n<p>以XML树的形式，展示界面上的控件布局。</p>\n</li>\n<li><p>布局4：控件属性区域</p>\n<p>选择某个控件，在这里可以显示该控件的所有属性和值。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Selected  Element的介绍</strong></p>\n<p>选择元素功能：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822133904939.png\" class>\n\n<ol>\n<li><p><strong>顶部的Tap、Send Keys、Clear</strong></p>\n<p>模拟用户的操作：</p>\n<ul>\n<li>tap：相当于点击元素。</li>\n<li>Send keys：输入值、针对输入框的操作。</li>\n<li>Clear：清除所有值。</li>\n</ul>\n<p>建议：不建议用这些操作，因为很容易造成断开连接（左侧界面一直loading）…..反正我这边经常这样，如果不会的话当然最好用啦！</p>\n</li>\n<li><p><strong>Find By xpath</strong></p>\n<p>提供了该元素的XPATH表达式</p>\n<p>不推荐用，绝对路径太长了…..还是自己写吧！</p>\n</li>\n<li><p><strong>那串黄色背景色的英文</strong></p>\n<p>不建议使用XPATH定位器，因为它很脆弱，建议让开发团队提供独特的可访问性定位器（即：resource-id）</p>\n</li>\n<li><p><strong>Attribute-Value</strong></p>\n<p>属性列表</p>\n</li>\n</ol>\n</li>\n<li><p><strong>Search for element的介绍</strong></p>\n<p>搜索元素功能，位置如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822134908939.png\" class>\n\n<p>点击弹出如下界面：</p>\n<p>选择定位策略，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822134952072.png\" class>\n\n<p>填写对应的定位表达式，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135027681.png\" class>\n\n<p>点击Search 就可以进行元素定位了。</p>\n<p>如果能找到Element的话表达式就是正确的，然后你还可以针对元素进行一些操作。</p>\n</li>\n<li><p><strong>在Appium Inspector中操作手机</strong></p>\n<p>当我们使用Appium Inspector定位工具获取到手机设置App界面的时候，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135321766.png\" class>\n\n<p>点击顶部操作栏中的Tap By Coordinates按钮，使得手机界面变换可操作状态。</p>\n<p>然后我们在左侧的手机界面中点击显示，就可以进入到显示的界面中了。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135531324.png\" class>\n\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135548543.png\" class>\n\n<p>进入到显示之后，现在我们还是保持在可操作手机的状态。</p>\n<p>之后我们就可以继续操作手机，也可以点击Select Element按钮，在当前页面中进行选择的元素。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135756380.png\" class>\n\n<p>我们也可以点击Back按钮，返回到设置App的首界面。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822135855228.png\" class>\n\n<p>提示：这一点Appium Inspector定位工具就比Uiautomatorviewer定位方便多了。</p>\n</li>\n<li><p><strong>Start Recording的介绍（了解）</strong></p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822140101952.png\" class>\n\n<ul>\n<li>操作步骤：点击开始录制之后，在点击Tap By Coordinates，进入界面可操作状态。</li>\n<li>然后就可以开始点击你想要的元素了，这个时候就开始录制了。</li>\n<li>最后在Recorder下面会显示对应的代码，右侧可以选择不同的语言。</li>\n<li>建议：不要过多使用该功能，可以看到录制的代码是根据坐标去定位元素的，换个手机同一个元素坐标可能就不同了，可移植性不高。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"6-Uiautomatorviewer工具和Appium-Inspector工具对比\"><a href=\"#6-Uiautomatorviewer工具和Appium-Inspector工具对比\" class=\"headerlink\" title=\"6.\tUiautomatorviewer工具和Appium Inspector工具对比\"></a>6.\t<strong>Uiautomatorviewer工具和Appium Inspector工具对比</strong></h3><ol>\n<li><p><strong>Uiautomatorviewer的局限性：</strong></p>\n<ol>\n<li>不能校验我们写的定位表达式是否正确定位到控件（类似浏览器上的F12）</li>\n<li>连接不够稳定</li>\n<li>不能模拟用户动作</li>\n</ol>\n</li>\n<li><p><strong>Appium Desktop的Inspector的优势：</strong></p>\n<ol>\n<li>可以校验定位表达式（如：XPATH表达式）。</li>\n<li>通过设置Desired Capabilities来连接手机，比较稳定。</li>\n<li>可以模拟用户动作（如：点击、返回、滑动等操作）。</li>\n<li>可以录制一系列操作，然后转换成代码。</li>\n</ol>\n<p>提示：</p>\n<p>学习或者编写脚本过程中，使用桌面版会方便一些，因为桌面版还提供了定位工具。而实际运行的时候，使用Server版本会更灵活，更容易与CI工具进行集成。</p>\n</li>\n</ol>\n<h2 id=\"Chrome-Inspect\"><a href=\"#Chrome-Inspect\" class=\"headerlink\" title=\"Chrome  Inspect\"></a>Chrome  Inspect</h2><h3 id=\"1-Chrome-Inspect的介绍\"><a href=\"#1-Chrome-Inspect的介绍\" class=\"headerlink\" title=\"1.\tChrome Inspect的介绍\"></a>1.\t<strong>Chrome Inspect的介绍</strong></h3><p>Chrome Inspect定位工具是用来抓取App中Webview页面的。</p>\n<p>为了项目的需求，为了更好的保证效果和布局跨平台，Android&amp;H5混合开发一般是我们不错的选择。Google浏览器中的Chrome Inspect定位工具，提供了一个移动端Web页面开发调试的功能，通过它我们可以调试手机页面，可以看到页面的源码，从而进行元素的定位。</p>\n<p><strong>使用chrome Inspect定位工具的前提条件</strong></p>\n<p>使用Chrome开发人员工具调试原生Android应用中的WebView，Android版本应该在Android4.4（kitkat）或更高版本上，通过DevTools在原生Android应用中调试WebView页面中的内容。</p>\n<h3 id=\"2-Chrome-Inspect打开方式\"><a href=\"#2-Chrome-Inspect打开方式\" class=\"headerlink\" title=\"2.\tChrome Inspect打开方式\"></a>2.\t<strong>Chrome Inspect打开方式</strong></h3><p>打开PC端的Chrome浏览器，在访问地址栏中输入Chrome：&#x2F;&#x2F;inspect&#x2F;就可以了，就是这么简单。</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822142646593.png\" class>\n\n<h3 id=\"3-Chrome-Inspect工具的使用\"><a href=\"#3-Chrome-Inspect工具的使用\" class=\"headerlink\" title=\"3.\tChrome Inspect工具的使用\"></a>3.\t<strong>Chrome Inspect工具的使用</strong></h3><ol>\n<li><p><strong>Chrome Inspect工作前提</strong></p>\n<ul>\n<li><p>所测试设备是开机状态（手机或者模拟器）。</p>\n</li>\n<li><p>确保电脑与设备是链接状态，也就是cmd进入命令行终端，</p>\n<p>输入adb connect 127.0.0.1:62001链接夜神模拟器，</p>\n<p>输入adb devices能够获取设备名称。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Chrome Inspect操作</strong></p>\n<ol>\n<li><p><strong>在App中打开含有WebView的页面</strong></p>\n<p>例如：开百度App，进入到微博登陆的界面就是一个含有Webview的页面</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822144556161.png\" class>\n</li>\n<li><p><strong>在Chrome Inspect中识别到Webview页面</strong></p>\n<p>我们进入到PC端的Chrome浏览器中，访问地址栏中输入chrome：&#x2F;&#x2F;inspect&#x2F;（没有显示的话就点击一下刷新），就可以检测到当前应用程序界面是Webview页面了。</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822145022696.png\" class>\n</li>\n<li><p>点击inspect可以进入调试视图</p>\n<p>点击如上图中的inspect，可以进入Chrome Inspect工具的调试视图。</p>\n<p>会弹出一个新窗口，显示当前页面的Webview元素信息。</p>\n<p>并且元素定位方法同Selenium WebDriver一致。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822145325532.png\" class>\n\n<p>就是这么简单。</p>\n</li>\n</ol>\n</li>\n</ol>\n<p>4.<strong>使用Chrome Inspect遇到的问题</strong></p>\n<ol>\n<li><p><strong>Android系统版本问题</strong></p>\n<p>Android移动设备版本应该在Android4.4或更高版本上。</p>\n<p>从Android4.4开始，webkit是支持远程调试的。</p>\n</li>\n<li><p><strong>所测App的debug模式要打开</strong></p>\n<p>在使用Chrome Inspect工具调试移动端App的Webview页面的时候，需要将该App的debug模式打开。</p>\n<p>但其实大部分App的debug模式都是关闭的，要去找一个开启debug模式的版本还是比较麻烦的，因此需要使用借助第三方工具来强制开启任何App的Android webview debug模式，使之可以使用chrome Inspect。</p>\n<p>而这个工具就是Xposed。</p>\n</li>\n<li><p><strong>Xposed工具的安装</strong></p>\n<ol>\n<li><p><strong>将设备进行root。</strong></p>\n<p>因为涉及到root权限，因此需要将设备进行root。</p>\n<p>很多工具可以来root，比如kingRoot等。</p>\n<p>注：Android模拟器默认root</p>\n</li>\n<li><p><strong>下载Xposed框架。</strong></p>\n<p>官方下载地址：<a href=\"http://repo.xposed.info/module/de.robv.android.xposed.installer\">http://repo.xposed.info/module/de.robv.android.xposed.installer</a></p>\n<p>点击页面下方的show older version，选择一个稳定版本进行下载。</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822150817186.png\" class>\n</li>\n<li><p><strong>安装Xposed框架。</strong></p>\n<p>将下载好的Xposed安装包de.robv.android.xposed.installer_v32_de4f0d.apk,直接拖入到Android模拟器中，进行安装。</p>\n<p>安装好后如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151124832.png\" class>\n</li>\n<li><p>安装&#x2F;更新Xposed框架。</p>\n<p>打开Xposed Installer，选择“安装&#x2F;更新”的最新版，然后“安装”会自动下载刷入。（过程可能会有一些慢）</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151338617.png\" class>\n\n<p>安装界面，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151416804.png\" class>\n\n<p>安装更新完成后的界面，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151524633.png\" class></li>\n</ol>\n</li>\n<li><p><strong>安装Xposed webview debugging模块。</strong></p>\n<p>打开Xposed界面中点击左上角的三条横杠，选择模块，然后启用需激活模块的复选框，正常重启后即可使用。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822151841755.png\" class>\n\n<p>如果你的手机中没有安装webViewDebugHook模块或者没有任何模块，如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152006781.png\" class>\n\n<p>可以在Xposed中进行下载安装WebViewDebugHook模块。</p>\n<p>如下图：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152114053.png\" class>\n\n<p>然后按照上面的方式激活WebViewDebugHook模块即可。</p>\n</li>\n<li><p><strong>HTTP&#x2F;1.1 404 Not Found和空白页问题</strong></p>\n<p>在chrome：&#x2F;&#x2F;inspect&#x2F;#devices中点击inspect出现的窗口中，界面是出现HTTP&#x2F;1.1 404 Not Found 或者是空白页的现象。</p>\n<p>空白页，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152535217.png\" class>\n\n<p>HTTP&#x2F;1.1 404 Not Found界面，如下图所示：</p>\n<img src=\"/2023/08/29/Appium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/image-20230822152632759.png\" class>\n\n<p>原因：</p>\n<p>对于国内的程序猿来说，由于无法访问<a href=\"https://chrome-devtools-frontend.appspot.com,就会出现出现http/1.1\">https://chrome-devtools-frontend.appspot.com,就会出现出现HTTP/1.1</a> 404 Not Found或者空白页面的现象。</p>\n<p>例如上面的@33f6ad690e178169a17596eeec8596751a696d1e就是移动设备中浏览器的一个版本号，当你换一个手机或模拟器的时候，版本号可能就不一样了。</p>\n<p>因为不同型号的手机生产商可能会打包不同版本的chrome浏览器内核，chrome Inspect定位工具就会先访问<a href=\"https://chrome-devtools-frontend.appspot.com,下载对应的chrome-devtools相关驱动,而国内无法访问并下载这些驱动,就出现了404和空白页./\">https://chrome-devtools-frontend.appspot.com,下载对应的chrome-devtools相关驱动，而国内无法访问并下载这些驱动，就出现了404和空白页。</a></p>\n<p>网上找到如下三种解决方式：</p>\n<ul>\n<li><p>方法一：下载devtools的Inspect的离线开发者调试工具包。（花钱，没有免费的）</p>\n</li>\n<li><p>方法二：修改网络连接，修改hosts文件。</p>\n</li>\n<li><p>方法三：使用第三方的chrome内核的浏览器，如QQ浏览器。</p>\n<p>（都不好使，大家也可以自己试试）</p>\n<p>推荐使用VPN，或者下载一个可FQ的谷歌浏览器用一下即可，不用的时候就关了</p>\n</li>\n</ul>\n</li>\n<li><p><strong>补充：安卓模拟器打开开发者选项</strong></p>\n<ol>\n<li>打开手机的“设置”，进入到“设置”页面</li>\n<li>滑到“设置”页面的最下端，找到“关于手机”，进入到“关于手机”页面</li>\n<li>找到“版本号”，连续点击</li>\n<li>会弹出一段文字提醒，直到提醒次数为0后，结束点击</li>\n<li>返回“设置”界面，开发者选项就出来了</li>\n</ol>\n</li>\n</ol>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"Badboy介绍","date":"2023-09-19T05:55:06.000Z","keywords":"Badboy","decription":"","top_img":"","cover":"https://s2.loli.net/2023/09/19/283fEFLdNsTgIHG.png","_content":"\n## **脚本录制工具--Badboy介绍**\n\n## 1.**Badboy软件介绍**\n\nBadboy是一款免费的Web自动化测试工具，是用C++开发的动态应用测试工具。\n\n其拥有强大的屏幕录制和回放功能，提供图形结果分析功能，刚好弥补了JMeter的不足之处。所有再做Web测试时，使用这两个工具将是最佳组合。\n\n同时Badboy提供了将录制好的Web测试脚本，可直接导出生成JMeter支持的.jmx格式的脚本。\n\n## 2.**Badboy下载**\n\nBadboy官网地址：http://www.badboy.com.au\n\n提示：官网下载时候会有用户邮箱验证的，直接continue跳过，下载即可。不过现在可能在国内无法登陆该官网，那就需要梯子。或者在国内的第三方网站上进行下载。\n\n## 3.**Badboy安装**\n\n双击打开BadboyInstaller-2.2.5.exe安装文件。\n\n1. Badboy许可协议界面，点击I Agree。\n\n   {%asset_img 56-19-23-135622.png%}\n\n2. 选择Badboy要安装的目录，选择目录完成后，点击Install。\n\n   {%asset_img 56-19-23-135628.png%}\n\n3. 确认提示\n\n   在安装的过程中会弹出一个提示，如下：\n\n   {%asset_img 56-19-23-135633.png%}\n\n   意思是说：Badboy想要在\"开始\"菜单中创建一个名为Programs、Badboy的项目，要执行此操作吗？\n\n   点击是即可。\n\n4. 点击close完成安装。\n\n   {%asset_img 56-19-23-135638.png%}\n\n   \n\n总结：\n\n- Badboy的安装和一般的Windows安装程序没区别，无脑下一步就行；\n- 安装完成后再开始菜单里面有Badboy的快捷方式（桌面没有）。如果没有找到，在Badboy安装目录下找到badboy.exe文件，双击启动即可。\n\n## 4.**Badboy界面介绍**\n\nBadboy安装完成后，在计算机的桌面上没有快捷方式的，需要点击左下角开始，在开始菜单中打开Badboy软件。\n\n打开界面如下：\n\n{%asset_img 56-19-23-135643.png%}\n\n1. 菜单栏：\n\n   - File：有常用的打开脚本、新建脚本、导出脚本、保存脚本等功能。\n\n   - Edit：有常用的撤销、重做、剪切、复制、粘贴、搜索/替换等功能。\n\n     可以使用F3快捷键弹出**搜索/替换**界面\n\n   - View：展示和隐藏视图区域，其中Report功能还有3种定制供用户选择。\n\n     {%asset_img 56-19-23-135648.png%}\n\n   - Tool：其中的功能较多。\n\n     例如：我们可以配置数据源自动化的填充数据。\n\n     还可以插入一些测试元件，如：断言，监视器等功能。\n\n     {%asset_img 56-19-23-135653.png%}\n\n   - Preferences：我们可以在Preferences选项下改变Badboy系统设置，是针对Badboy软件的一些配置。\n\n   - Help：其中点击Content是帮助文档。\n\n2. **工具栏：**\n\n   工具栏中全部的功能都包含在菜单栏中，换句话说就是把菜单栏中常用的操作编辑到工具栏中了。\n\n   常用的快捷键说明一下:\n\n   {%asset_img 57-19-23-135700.png%}\n\n   (1)新建录制脚本。\n\n   (2)打开已录制的脚本。\n\n   (3)保存录制好的脚本。\n\n   (4)录制按钮，点击之后记录操作。\n\n   (5)停止按钮，在停止途中不会记录操作，如果需要再次开始录制，需要再次点击录制按钮，会继续录制，在Step1头部会出现红点。\n\n   (6)回放按钮。\n\n   (7)回放所有。\n\n   (8)倒回按钮，退回到前一步操作。\n\n   (9)单独运行一个请求。\n\n3. 左下角界面视图：\n\n   1. Variables View：变量视图，在录制到的需要参数化的地方能够在这里操作之后导入JMeter。\n\n   2. Summary View：摘要视图\n\n      参数说明：\n\n      - Played：运行或回放脚本的次数。\n\n      - Succeeded：成功运行或回放脚本的次数。\n\n      - Failed：失败运行或回放脚本的次数。\n\n      - Assertions：断言失败次数。\n\n      - Warnings：生成的警告次数。\n\n        当发生的问题时警告不会阻止回放，只是表明你的脚本或Web站点的问题。例如，一个页面存JavaScript错误，或者在填充Form时无法找到指定的表单，将被记录为此次回放响应的警告。\n\n      - Timeouts:发生超时的次数。\n\n      - Avg  Time(ms):运行或回放的平均时间(毫秒)。\n\n      - Max Time(ms):运行或回放的最长时间(毫秒)。\n","source":"_posts/Badboy介绍.md","raw":"---\ntitle: Badboy介绍\ndate: 2023-09-19 13:55:06\ntags:\n   - Badboy\ncategories:\n   - Badboy学习\nkeywords: \"Badboy\"\ndecription: \"\"\ntop_img: \"\"\ncover: https://s2.loli.net/2023/09/19/283fEFLdNsTgIHG.png\n---\n\n## **脚本录制工具--Badboy介绍**\n\n## 1.**Badboy软件介绍**\n\nBadboy是一款免费的Web自动化测试工具，是用C++开发的动态应用测试工具。\n\n其拥有强大的屏幕录制和回放功能，提供图形结果分析功能，刚好弥补了JMeter的不足之处。所有再做Web测试时，使用这两个工具将是最佳组合。\n\n同时Badboy提供了将录制好的Web测试脚本，可直接导出生成JMeter支持的.jmx格式的脚本。\n\n## 2.**Badboy下载**\n\nBadboy官网地址：http://www.badboy.com.au\n\n提示：官网下载时候会有用户邮箱验证的，直接continue跳过，下载即可。不过现在可能在国内无法登陆该官网，那就需要梯子。或者在国内的第三方网站上进行下载。\n\n## 3.**Badboy安装**\n\n双击打开BadboyInstaller-2.2.5.exe安装文件。\n\n1. Badboy许可协议界面，点击I Agree。\n\n   {%asset_img 56-19-23-135622.png%}\n\n2. 选择Badboy要安装的目录，选择目录完成后，点击Install。\n\n   {%asset_img 56-19-23-135628.png%}\n\n3. 确认提示\n\n   在安装的过程中会弹出一个提示，如下：\n\n   {%asset_img 56-19-23-135633.png%}\n\n   意思是说：Badboy想要在\"开始\"菜单中创建一个名为Programs、Badboy的项目，要执行此操作吗？\n\n   点击是即可。\n\n4. 点击close完成安装。\n\n   {%asset_img 56-19-23-135638.png%}\n\n   \n\n总结：\n\n- Badboy的安装和一般的Windows安装程序没区别，无脑下一步就行；\n- 安装完成后再开始菜单里面有Badboy的快捷方式（桌面没有）。如果没有找到，在Badboy安装目录下找到badboy.exe文件，双击启动即可。\n\n## 4.**Badboy界面介绍**\n\nBadboy安装完成后，在计算机的桌面上没有快捷方式的，需要点击左下角开始，在开始菜单中打开Badboy软件。\n\n打开界面如下：\n\n{%asset_img 56-19-23-135643.png%}\n\n1. 菜单栏：\n\n   - File：有常用的打开脚本、新建脚本、导出脚本、保存脚本等功能。\n\n   - Edit：有常用的撤销、重做、剪切、复制、粘贴、搜索/替换等功能。\n\n     可以使用F3快捷键弹出**搜索/替换**界面\n\n   - View：展示和隐藏视图区域，其中Report功能还有3种定制供用户选择。\n\n     {%asset_img 56-19-23-135648.png%}\n\n   - Tool：其中的功能较多。\n\n     例如：我们可以配置数据源自动化的填充数据。\n\n     还可以插入一些测试元件，如：断言，监视器等功能。\n\n     {%asset_img 56-19-23-135653.png%}\n\n   - Preferences：我们可以在Preferences选项下改变Badboy系统设置，是针对Badboy软件的一些配置。\n\n   - Help：其中点击Content是帮助文档。\n\n2. **工具栏：**\n\n   工具栏中全部的功能都包含在菜单栏中，换句话说就是把菜单栏中常用的操作编辑到工具栏中了。\n\n   常用的快捷键说明一下:\n\n   {%asset_img 57-19-23-135700.png%}\n\n   (1)新建录制脚本。\n\n   (2)打开已录制的脚本。\n\n   (3)保存录制好的脚本。\n\n   (4)录制按钮，点击之后记录操作。\n\n   (5)停止按钮，在停止途中不会记录操作，如果需要再次开始录制，需要再次点击录制按钮，会继续录制，在Step1头部会出现红点。\n\n   (6)回放按钮。\n\n   (7)回放所有。\n\n   (8)倒回按钮，退回到前一步操作。\n\n   (9)单独运行一个请求。\n\n3. 左下角界面视图：\n\n   1. Variables View：变量视图，在录制到的需要参数化的地方能够在这里操作之后导入JMeter。\n\n   2. Summary View：摘要视图\n\n      参数说明：\n\n      - Played：运行或回放脚本的次数。\n\n      - Succeeded：成功运行或回放脚本的次数。\n\n      - Failed：失败运行或回放脚本的次数。\n\n      - Assertions：断言失败次数。\n\n      - Warnings：生成的警告次数。\n\n        当发生的问题时警告不会阻止回放，只是表明你的脚本或Web站点的问题。例如，一个页面存JavaScript错误，或者在填充Form时无法找到指定的表单，将被记录为此次回放响应的警告。\n\n      - Timeouts:发生超时的次数。\n\n      - Avg  Time(ms):运行或回放的平均时间(毫秒)。\n\n      - Max Time(ms):运行或回放的最长时间(毫秒)。\n","slug":"Badboy介绍","published":1,"updated":"2023-09-19T06:03:23.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4noc0003fw484h370qn5","content":"<h2 id=\"脚本录制工具–Badboy介绍\"><a href=\"#脚本录制工具–Badboy介绍\" class=\"headerlink\" title=\"脚本录制工具–Badboy介绍\"></a><strong>脚本录制工具–Badboy介绍</strong></h2><h2 id=\"1-Badboy软件介绍\"><a href=\"#1-Badboy软件介绍\" class=\"headerlink\" title=\"1.Badboy软件介绍\"></a>1.<strong>Badboy软件介绍</strong></h2><p>Badboy是一款免费的Web自动化测试工具，是用C++开发的动态应用测试工具。</p>\n<p>其拥有强大的屏幕录制和回放功能，提供图形结果分析功能，刚好弥补了JMeter的不足之处。所有再做Web测试时，使用这两个工具将是最佳组合。</p>\n<p>同时Badboy提供了将录制好的Web测试脚本，可直接导出生成JMeter支持的.jmx格式的脚本。</p>\n<h2 id=\"2-Badboy下载\"><a href=\"#2-Badboy下载\" class=\"headerlink\" title=\"2.Badboy下载\"></a>2.<strong>Badboy下载</strong></h2><p>Badboy官网地址：<a href=\"http://www.badboy.com.au/\">http://www.badboy.com.au</a></p>\n<p>提示：官网下载时候会有用户邮箱验证的，直接continue跳过，下载即可。不过现在可能在国内无法登陆该官网，那就需要梯子。或者在国内的第三方网站上进行下载。</p>\n<h2 id=\"3-Badboy安装\"><a href=\"#3-Badboy安装\" class=\"headerlink\" title=\"3.Badboy安装\"></a>3.<strong>Badboy安装</strong></h2><p>双击打开BadboyInstaller-2.2.5.exe安装文件。</p>\n<ol>\n<li><p>Badboy许可协议界面，点击I Agree。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135622.png\" class>\n</li>\n<li><p>选择Badboy要安装的目录，选择目录完成后，点击Install。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135628.png\" class>\n</li>\n<li><p>确认提示</p>\n<p>在安装的过程中会弹出一个提示，如下：</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135633.png\" class>\n\n<p>意思是说：Badboy想要在”开始”菜单中创建一个名为Programs、Badboy的项目，要执行此操作吗？</p>\n<p>点击是即可。</p>\n</li>\n<li><p>点击close完成安装。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135638.png\" class></li>\n</ol>\n<p>总结：</p>\n<ul>\n<li>Badboy的安装和一般的Windows安装程序没区别，无脑下一步就行；</li>\n<li>安装完成后再开始菜单里面有Badboy的快捷方式（桌面没有）。如果没有找到，在Badboy安装目录下找到badboy.exe文件，双击启动即可。</li>\n</ul>\n<h2 id=\"4-Badboy界面介绍\"><a href=\"#4-Badboy界面介绍\" class=\"headerlink\" title=\"4.Badboy界面介绍\"></a>4.<strong>Badboy界面介绍</strong></h2><p>Badboy安装完成后，在计算机的桌面上没有快捷方式的，需要点击左下角开始，在开始菜单中打开Badboy软件。</p>\n<p>打开界面如下：</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135643.png\" class>\n\n<ol>\n<li><p>菜单栏：</p>\n<ul>\n<li><p>File：有常用的打开脚本、新建脚本、导出脚本、保存脚本等功能。</p>\n</li>\n<li><p>Edit：有常用的撤销、重做、剪切、复制、粘贴、搜索&#x2F;替换等功能。</p>\n<p>可以使用F3快捷键弹出<strong>搜索&#x2F;替换</strong>界面</p>\n</li>\n<li><p>View：展示和隐藏视图区域，其中Report功能还有3种定制供用户选择。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135648.png\" class>\n</li>\n<li><p>Tool：其中的功能较多。</p>\n<p>例如：我们可以配置数据源自动化的填充数据。</p>\n<p>还可以插入一些测试元件，如：断言，监视器等功能。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135653.png\" class>\n</li>\n<li><p>Preferences：我们可以在Preferences选项下改变Badboy系统设置，是针对Badboy软件的一些配置。</p>\n</li>\n<li><p>Help：其中点击Content是帮助文档。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>工具栏：</strong></p>\n<p>工具栏中全部的功能都包含在菜单栏中，换句话说就是把菜单栏中常用的操作编辑到工具栏中了。</p>\n<p>常用的快捷键说明一下:</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/57-19-23-135700.png\" class>\n\n<p>(1)新建录制脚本。</p>\n<p>(2)打开已录制的脚本。</p>\n<p>(3)保存录制好的脚本。</p>\n<p>(4)录制按钮，点击之后记录操作。</p>\n<p>(5)停止按钮，在停止途中不会记录操作，如果需要再次开始录制，需要再次点击录制按钮，会继续录制，在Step1头部会出现红点。</p>\n<p>(6)回放按钮。</p>\n<p>(7)回放所有。</p>\n<p>(8)倒回按钮，退回到前一步操作。</p>\n<p>(9)单独运行一个请求。</p>\n</li>\n<li><p>左下角界面视图：</p>\n<ol>\n<li><p>Variables View：变量视图，在录制到的需要参数化的地方能够在这里操作之后导入JMeter。</p>\n</li>\n<li><p>Summary View：摘要视图</p>\n<p>参数说明：</p>\n<ul>\n<li><p>Played：运行或回放脚本的次数。</p>\n</li>\n<li><p>Succeeded：成功运行或回放脚本的次数。</p>\n</li>\n<li><p>Failed：失败运行或回放脚本的次数。</p>\n</li>\n<li><p>Assertions：断言失败次数。</p>\n</li>\n<li><p>Warnings：生成的警告次数。</p>\n<p>当发生的问题时警告不会阻止回放，只是表明你的脚本或Web站点的问题。例如，一个页面存JavaScript错误，或者在填充Form时无法找到指定的表单，将被记录为此次回放响应的警告。</p>\n</li>\n<li><p>Timeouts:发生超时的次数。</p>\n</li>\n<li><p>Avg  Time(ms):运行或回放的平均时间(毫秒)。</p>\n</li>\n<li><p>Max Time(ms):运行或回放的最长时间(毫秒)。</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"脚本录制工具–Badboy介绍\"><a href=\"#脚本录制工具–Badboy介绍\" class=\"headerlink\" title=\"脚本录制工具–Badboy介绍\"></a><strong>脚本录制工具–Badboy介绍</strong></h2><h2 id=\"1-Badboy软件介绍\"><a href=\"#1-Badboy软件介绍\" class=\"headerlink\" title=\"1.Badboy软件介绍\"></a>1.<strong>Badboy软件介绍</strong></h2><p>Badboy是一款免费的Web自动化测试工具，是用C++开发的动态应用测试工具。</p>\n<p>其拥有强大的屏幕录制和回放功能，提供图形结果分析功能，刚好弥补了JMeter的不足之处。所有再做Web测试时，使用这两个工具将是最佳组合。</p>\n<p>同时Badboy提供了将录制好的Web测试脚本，可直接导出生成JMeter支持的.jmx格式的脚本。</p>\n<h2 id=\"2-Badboy下载\"><a href=\"#2-Badboy下载\" class=\"headerlink\" title=\"2.Badboy下载\"></a>2.<strong>Badboy下载</strong></h2><p>Badboy官网地址：<a href=\"http://www.badboy.com.au/\">http://www.badboy.com.au</a></p>\n<p>提示：官网下载时候会有用户邮箱验证的，直接continue跳过，下载即可。不过现在可能在国内无法登陆该官网，那就需要梯子。或者在国内的第三方网站上进行下载。</p>\n<h2 id=\"3-Badboy安装\"><a href=\"#3-Badboy安装\" class=\"headerlink\" title=\"3.Badboy安装\"></a>3.<strong>Badboy安装</strong></h2><p>双击打开BadboyInstaller-2.2.5.exe安装文件。</p>\n<ol>\n<li><p>Badboy许可协议界面，点击I Agree。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135622.png\" class>\n</li>\n<li><p>选择Badboy要安装的目录，选择目录完成后，点击Install。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135628.png\" class>\n</li>\n<li><p>确认提示</p>\n<p>在安装的过程中会弹出一个提示，如下：</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135633.png\" class>\n\n<p>意思是说：Badboy想要在”开始”菜单中创建一个名为Programs、Badboy的项目，要执行此操作吗？</p>\n<p>点击是即可。</p>\n</li>\n<li><p>点击close完成安装。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135638.png\" class></li>\n</ol>\n<p>总结：</p>\n<ul>\n<li>Badboy的安装和一般的Windows安装程序没区别，无脑下一步就行；</li>\n<li>安装完成后再开始菜单里面有Badboy的快捷方式（桌面没有）。如果没有找到，在Badboy安装目录下找到badboy.exe文件，双击启动即可。</li>\n</ul>\n<h2 id=\"4-Badboy界面介绍\"><a href=\"#4-Badboy界面介绍\" class=\"headerlink\" title=\"4.Badboy界面介绍\"></a>4.<strong>Badboy界面介绍</strong></h2><p>Badboy安装完成后，在计算机的桌面上没有快捷方式的，需要点击左下角开始，在开始菜单中打开Badboy软件。</p>\n<p>打开界面如下：</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135643.png\" class>\n\n<ol>\n<li><p>菜单栏：</p>\n<ul>\n<li><p>File：有常用的打开脚本、新建脚本、导出脚本、保存脚本等功能。</p>\n</li>\n<li><p>Edit：有常用的撤销、重做、剪切、复制、粘贴、搜索&#x2F;替换等功能。</p>\n<p>可以使用F3快捷键弹出<strong>搜索&#x2F;替换</strong>界面</p>\n</li>\n<li><p>View：展示和隐藏视图区域，其中Report功能还有3种定制供用户选择。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135648.png\" class>\n</li>\n<li><p>Tool：其中的功能较多。</p>\n<p>例如：我们可以配置数据源自动化的填充数据。</p>\n<p>还可以插入一些测试元件，如：断言，监视器等功能。</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/56-19-23-135653.png\" class>\n</li>\n<li><p>Preferences：我们可以在Preferences选项下改变Badboy系统设置，是针对Badboy软件的一些配置。</p>\n</li>\n<li><p>Help：其中点击Content是帮助文档。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>工具栏：</strong></p>\n<p>工具栏中全部的功能都包含在菜单栏中，换句话说就是把菜单栏中常用的操作编辑到工具栏中了。</p>\n<p>常用的快捷键说明一下:</p>\n<img src=\"/2023/09/19/Badboy%E4%BB%8B%E7%BB%8D/57-19-23-135700.png\" class>\n\n<p>(1)新建录制脚本。</p>\n<p>(2)打开已录制的脚本。</p>\n<p>(3)保存录制好的脚本。</p>\n<p>(4)录制按钮，点击之后记录操作。</p>\n<p>(5)停止按钮，在停止途中不会记录操作，如果需要再次开始录制，需要再次点击录制按钮，会继续录制，在Step1头部会出现红点。</p>\n<p>(6)回放按钮。</p>\n<p>(7)回放所有。</p>\n<p>(8)倒回按钮，退回到前一步操作。</p>\n<p>(9)单独运行一个请求。</p>\n</li>\n<li><p>左下角界面视图：</p>\n<ol>\n<li><p>Variables View：变量视图，在录制到的需要参数化的地方能够在这里操作之后导入JMeter。</p>\n</li>\n<li><p>Summary View：摘要视图</p>\n<p>参数说明：</p>\n<ul>\n<li><p>Played：运行或回放脚本的次数。</p>\n</li>\n<li><p>Succeeded：成功运行或回放脚本的次数。</p>\n</li>\n<li><p>Failed：失败运行或回放脚本的次数。</p>\n</li>\n<li><p>Assertions：断言失败次数。</p>\n</li>\n<li><p>Warnings：生成的警告次数。</p>\n<p>当发生的问题时警告不会阻止回放，只是表明你的脚本或Web站点的问题。例如，一个页面存JavaScript错误，或者在填充Form时无法找到指定的表单，将被记录为此次回放响应的警告。</p>\n</li>\n<li><p>Timeouts:发生超时的次数。</p>\n</li>\n<li><p>Avg  Time(ms):运行或回放的平均时间(毫秒)。</p>\n</li>\n<li><p>Max Time(ms):运行或回放的最长时间(毫秒)。</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n"},{"title":"Badboy录制","date":"2023-09-19T05:55:36.000Z","keywords":"Badboy","decription":"","top_img":"","cover":"https://s2.loli.net/2023/09/19/283fEFLdNsTgIHG.png","_content":"\n## **使用Badboy工具录制Jmeter脚本**\n\n## 1.使用Badboy录制JMeter脚本\n\n打开Badboy工具开始进行脚本录制。\n\n1. 当我们打开Badboy工具时，默认就进入录制状态。\n\n   如下图：\n\n   {%asset_img 03-19-23-140352.png%}\n\n   当然我们也可以点击录制按钮，进行状态的切换。\n\n2. 在地址栏中输入被测地址，并访问。\n\n   我们以访问京东为例：\n\n   在输入栏中输入京东网址，点击后边的小箭头，跳转到被测地址中。\n\n   {%asset_img 03-19-23-140359.png%}\n\n   当点击剪头后，记录一步操作(相当于创建了一个取样器)，并在右侧视图中显示被测网址的内容，如下图：\n\n   {%asset_img 04-19-23-140404.png%}\n\n3. 在视图中可以直接操作显示出来的内容。\n\n   就和我们平时访问网站一样的，例如：我点击\"请登陆\"，就会跳转到京东的登陆页面了。\n\n   同时脚本目录树中就会继续添加一步操作。\n\n   {%asset_img 04-19-23-140408.png%}\n\n4. 停止录制脚本。\n\n   如果一个测试流程录制完成之后，我们就可以点击停止录制。\n\n   就是点击工具栏中的小红点，如下图：\n\n   {%asset_img 04-19-23-140415.png%}\n\n5. 保存录制好的脚本文件。\n\n   点击File->Export to JMeter..., 把脚本文件保存到你需要的位置，方便进行管理，JMeter文件的默认格式是.jmx格式的文件。\n\n6. 在JMeter中打开刚刚保存的脚本文件进行打开，如下图：\n\n   {%asset_img 04-19-23-140418.png%}\n\n   说明：所有录制的内容都在Step 1中，这个组件叫**录制控制器**。\n\n7. 添加监听器\n\n   使用Badboy录制的Jmeter脚本，是不带监听器的。\n\n   这里我们需要手动添加一个监听器，方便查看结果。\n\n   {%asset_img 04-19-23-140423.png%}\n\n8. 在JMeter中启动脚本\n\n   在工具栏中点击绿色启动剪头来运行该脚本。\n\n   脚本运行完成之后，可以在\"察看结果树\"中查看该测试计划中所有请求与响应的结果。\n\n   {%asset_img 04-19-23-140427.png%}\n\n## 2.**使用Badboy参数化配置**\n\nBadboy为方便自动化数据灵活性，提供了脚本参数化的功能。\n\n像上面的例子中是没有输入性操作在里面的，如果我访问的是百度，需要输入一些搜索关键词信息，这个时候就需要参数化配置了。\n\n1. 打开Badboy工具，默认就进入录制状态。\n\n2. 在地址栏中输入被测地址，并访问。\n\n   例如：访问京东网站，搜索需要的商品。\n\n   {%asset_img 04-19-23-140432.png%}\n\n3. 在百度搜索栏中输入搜索关键词\"手机\"，并点击搜索。\n\n   {%asset_img 04-19-23-140436.png%}\n\n   点击搜索：\n\n   {%asset_img 04-19-23-140439.png%}\n\n4. 点击停止录制按钮，并开始修改。\n\n   展开上一步搜索商品增加的脚本目录树：\n\n   {%asset_img 04-19-23-140445.png%}\n\n   需要修改两处：\n\n   1. 如果输入的关键字信息出现乱码的情况。\n\n      Badboy默认使用系统的IE浏览器，出现乱码的话，将ie属性的utf-8改为gbk。例如，京东网站的ie属性为enc属性。\n\n      双击enc属性(在该属性上右键选择Properties选项也可以)，在弹出的窗口中进行修改，\n\n      如下图：\n\n      {%asset_img 04-19-23-140455.png%}\n\n      （GBK大小写都可以）\n\n      注意：你电脑默认的浏览器是什么编码，就换成它对应的编码即可，这样就可以不乱码。\n\n   2. 配置输入的参数信息\n\n      例如：在京东页面中，keyword属性就是关键词信息。\n\n      双击keyword属性（在该属性上右键选择Properties选项也可以），修改Value属性为${自定义的变量名}，点击确定。\n\n      {%asset_img 05-19-23-140501.png%}\n\n      然后开始配置变量的参数信息，步骤如下图所示：\n\n      {%asset_img 05-19-23-140507.png%}\n\n      此时keyword属性的值，已被参数化。\n\n5. 双击Step 1，进行修改\n\n   选择For  each value of vari，表示以每个变量定义的值为准（也就是使用参数化）。\n\n   {%asset_img 05-19-23-140515.png%}\n\n   此时查看脚本树的变化，如下图：\n\n   {%asset_img 05-19-23-140522.png%}\n\n6. 保存脚本，并用JMeter打开该脚本，运行即可。\n\n   也可以在Badboy中，右键点击Test1 -> Play Whole Test,执行该录制的脚本，查看执行效果。\n\n## 3.解决\"当前页面的脚本发生错误\"提示框\n\nBadboy录制脚本的时候，总是弹出如下弹框\"当前页面的脚本发生错误\"。\n\n{%asset_img 05-19-23-140532.png%}\n\n打开Badboy -> preferences ->点击playing ->勾选Javascript Error Dialogs，然后重新Badboy工具即可。\n\n{%asset_img 05-19-23-140545.png%}\n\n勾选\"JavaScript Error Dialogs\",意思是自动处理/抑制JavaScript错误对话框。\n\n提示：如果以后在录制JMeter脚本的时候，出现如上的弹窗，我们直接点击叉子关闭即可。\n\n## 4.总结\n\n使用Badboy工具录制的脚本，相对于使用JMeter自身工具录制的脚本，更加精简，更加干净。\n\n但是Badboy工具录制脚本的时候，经常出现无法录制脚本的提示，是非常不友好的。\n\nJMeter自身自带的录制工具，兼容性就非常的好，就是录制的取样器非常的多，需要自己优化。\n\n总结：以上都是Badboy最基础的用法，还有很多的功能以后在工作中慢慢积累。\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","source":"_posts/Badboy录制.md","raw":"---\ntitle: Badboy录制\ndate: 2023-09-19 13:55:36\ntags:\n   - Badboy\ncategories:\n   - Badboy学习\nkeywords: \"Badboy\"\ndecription: \"\"\ntop_img: \"\"\ncover: https://s2.loli.net/2023/09/19/283fEFLdNsTgIHG.png\n---\n\n## **使用Badboy工具录制Jmeter脚本**\n\n## 1.使用Badboy录制JMeter脚本\n\n打开Badboy工具开始进行脚本录制。\n\n1. 当我们打开Badboy工具时，默认就进入录制状态。\n\n   如下图：\n\n   {%asset_img 03-19-23-140352.png%}\n\n   当然我们也可以点击录制按钮，进行状态的切换。\n\n2. 在地址栏中输入被测地址，并访问。\n\n   我们以访问京东为例：\n\n   在输入栏中输入京东网址，点击后边的小箭头，跳转到被测地址中。\n\n   {%asset_img 03-19-23-140359.png%}\n\n   当点击剪头后，记录一步操作(相当于创建了一个取样器)，并在右侧视图中显示被测网址的内容，如下图：\n\n   {%asset_img 04-19-23-140404.png%}\n\n3. 在视图中可以直接操作显示出来的内容。\n\n   就和我们平时访问网站一样的，例如：我点击\"请登陆\"，就会跳转到京东的登陆页面了。\n\n   同时脚本目录树中就会继续添加一步操作。\n\n   {%asset_img 04-19-23-140408.png%}\n\n4. 停止录制脚本。\n\n   如果一个测试流程录制完成之后，我们就可以点击停止录制。\n\n   就是点击工具栏中的小红点，如下图：\n\n   {%asset_img 04-19-23-140415.png%}\n\n5. 保存录制好的脚本文件。\n\n   点击File->Export to JMeter..., 把脚本文件保存到你需要的位置，方便进行管理，JMeter文件的默认格式是.jmx格式的文件。\n\n6. 在JMeter中打开刚刚保存的脚本文件进行打开，如下图：\n\n   {%asset_img 04-19-23-140418.png%}\n\n   说明：所有录制的内容都在Step 1中，这个组件叫**录制控制器**。\n\n7. 添加监听器\n\n   使用Badboy录制的Jmeter脚本，是不带监听器的。\n\n   这里我们需要手动添加一个监听器，方便查看结果。\n\n   {%asset_img 04-19-23-140423.png%}\n\n8. 在JMeter中启动脚本\n\n   在工具栏中点击绿色启动剪头来运行该脚本。\n\n   脚本运行完成之后，可以在\"察看结果树\"中查看该测试计划中所有请求与响应的结果。\n\n   {%asset_img 04-19-23-140427.png%}\n\n## 2.**使用Badboy参数化配置**\n\nBadboy为方便自动化数据灵活性，提供了脚本参数化的功能。\n\n像上面的例子中是没有输入性操作在里面的，如果我访问的是百度，需要输入一些搜索关键词信息，这个时候就需要参数化配置了。\n\n1. 打开Badboy工具，默认就进入录制状态。\n\n2. 在地址栏中输入被测地址，并访问。\n\n   例如：访问京东网站，搜索需要的商品。\n\n   {%asset_img 04-19-23-140432.png%}\n\n3. 在百度搜索栏中输入搜索关键词\"手机\"，并点击搜索。\n\n   {%asset_img 04-19-23-140436.png%}\n\n   点击搜索：\n\n   {%asset_img 04-19-23-140439.png%}\n\n4. 点击停止录制按钮，并开始修改。\n\n   展开上一步搜索商品增加的脚本目录树：\n\n   {%asset_img 04-19-23-140445.png%}\n\n   需要修改两处：\n\n   1. 如果输入的关键字信息出现乱码的情况。\n\n      Badboy默认使用系统的IE浏览器，出现乱码的话，将ie属性的utf-8改为gbk。例如，京东网站的ie属性为enc属性。\n\n      双击enc属性(在该属性上右键选择Properties选项也可以)，在弹出的窗口中进行修改，\n\n      如下图：\n\n      {%asset_img 04-19-23-140455.png%}\n\n      （GBK大小写都可以）\n\n      注意：你电脑默认的浏览器是什么编码，就换成它对应的编码即可，这样就可以不乱码。\n\n   2. 配置输入的参数信息\n\n      例如：在京东页面中，keyword属性就是关键词信息。\n\n      双击keyword属性（在该属性上右键选择Properties选项也可以），修改Value属性为${自定义的变量名}，点击确定。\n\n      {%asset_img 05-19-23-140501.png%}\n\n      然后开始配置变量的参数信息，步骤如下图所示：\n\n      {%asset_img 05-19-23-140507.png%}\n\n      此时keyword属性的值，已被参数化。\n\n5. 双击Step 1，进行修改\n\n   选择For  each value of vari，表示以每个变量定义的值为准（也就是使用参数化）。\n\n   {%asset_img 05-19-23-140515.png%}\n\n   此时查看脚本树的变化，如下图：\n\n   {%asset_img 05-19-23-140522.png%}\n\n6. 保存脚本，并用JMeter打开该脚本，运行即可。\n\n   也可以在Badboy中，右键点击Test1 -> Play Whole Test,执行该录制的脚本，查看执行效果。\n\n## 3.解决\"当前页面的脚本发生错误\"提示框\n\nBadboy录制脚本的时候，总是弹出如下弹框\"当前页面的脚本发生错误\"。\n\n{%asset_img 05-19-23-140532.png%}\n\n打开Badboy -> preferences ->点击playing ->勾选Javascript Error Dialogs，然后重新Badboy工具即可。\n\n{%asset_img 05-19-23-140545.png%}\n\n勾选\"JavaScript Error Dialogs\",意思是自动处理/抑制JavaScript错误对话框。\n\n提示：如果以后在录制JMeter脚本的时候，出现如上的弹窗，我们直接点击叉子关闭即可。\n\n## 4.总结\n\n使用Badboy工具录制的脚本，相对于使用JMeter自身工具录制的脚本，更加精简，更加干净。\n\n但是Badboy工具录制脚本的时候，经常出现无法录制脚本的提示，是非常不友好的。\n\nJMeter自身自带的录制工具，兼容性就非常的好，就是录制的取样器非常的多，需要自己优化。\n\n总结：以上都是Badboy最基础的用法，还有很多的功能以后在工作中慢慢积累。\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","slug":"Badboy录制","published":1,"updated":"2023-09-19T06:13:55.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4noi0007fw483mal50vw","content":"<h2 id=\"使用Badboy工具录制Jmeter脚本\"><a href=\"#使用Badboy工具录制Jmeter脚本\" class=\"headerlink\" title=\"使用Badboy工具录制Jmeter脚本\"></a><strong>使用Badboy工具录制Jmeter脚本</strong></h2><h2 id=\"1-使用Badboy录制JMeter脚本\"><a href=\"#1-使用Badboy录制JMeter脚本\" class=\"headerlink\" title=\"1.使用Badboy录制JMeter脚本\"></a>1.使用Badboy录制JMeter脚本</h2><p>打开Badboy工具开始进行脚本录制。</p>\n<ol>\n<li><p>当我们打开Badboy工具时，默认就进入录制状态。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/03-19-23-140352.png\" class>\n\n<p>当然我们也可以点击录制按钮，进行状态的切换。</p>\n</li>\n<li><p>在地址栏中输入被测地址，并访问。</p>\n<p>我们以访问京东为例：</p>\n<p>在输入栏中输入京东网址，点击后边的小箭头，跳转到被测地址中。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/03-19-23-140359.png\" class>\n\n<p>当点击剪头后，记录一步操作(相当于创建了一个取样器)，并在右侧视图中显示被测网址的内容，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140404.png\" class>\n</li>\n<li><p>在视图中可以直接操作显示出来的内容。</p>\n<p>就和我们平时访问网站一样的，例如：我点击”请登陆”，就会跳转到京东的登陆页面了。</p>\n<p>同时脚本目录树中就会继续添加一步操作。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140408.png\" class>\n</li>\n<li><p>停止录制脚本。</p>\n<p>如果一个测试流程录制完成之后，我们就可以点击停止录制。</p>\n<p>就是点击工具栏中的小红点，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140415.png\" class>\n</li>\n<li><p>保存录制好的脚本文件。</p>\n<p>点击File-&gt;Export to JMeter…, 把脚本文件保存到你需要的位置，方便进行管理，JMeter文件的默认格式是.jmx格式的文件。</p>\n</li>\n<li><p>在JMeter中打开刚刚保存的脚本文件进行打开，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140418.png\" class>\n\n<p>说明：所有录制的内容都在Step 1中，这个组件叫<strong>录制控制器</strong>。</p>\n</li>\n<li><p>添加监听器</p>\n<p>使用Badboy录制的Jmeter脚本，是不带监听器的。</p>\n<p>这里我们需要手动添加一个监听器，方便查看结果。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140423.png\" class>\n</li>\n<li><p>在JMeter中启动脚本</p>\n<p>在工具栏中点击绿色启动剪头来运行该脚本。</p>\n<p>脚本运行完成之后，可以在”察看结果树”中查看该测试计划中所有请求与响应的结果。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140427.png\" class></li>\n</ol>\n<h2 id=\"2-使用Badboy参数化配置\"><a href=\"#2-使用Badboy参数化配置\" class=\"headerlink\" title=\"2.使用Badboy参数化配置\"></a>2.<strong>使用Badboy参数化配置</strong></h2><p>Badboy为方便自动化数据灵活性，提供了脚本参数化的功能。</p>\n<p>像上面的例子中是没有输入性操作在里面的，如果我访问的是百度，需要输入一些搜索关键词信息，这个时候就需要参数化配置了。</p>\n<ol>\n<li><p>打开Badboy工具，默认就进入录制状态。</p>\n</li>\n<li><p>在地址栏中输入被测地址，并访问。</p>\n<p>例如：访问京东网站，搜索需要的商品。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140432.png\" class>\n</li>\n<li><p>在百度搜索栏中输入搜索关键词”手机”，并点击搜索。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140436.png\" class>\n\n<p>点击搜索：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140439.png\" class>\n</li>\n<li><p>点击停止录制按钮，并开始修改。</p>\n<p>展开上一步搜索商品增加的脚本目录树：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140445.png\" class>\n\n<p>需要修改两处：</p>\n<ol>\n<li><p>如果输入的关键字信息出现乱码的情况。</p>\n<p>Badboy默认使用系统的IE浏览器，出现乱码的话，将ie属性的utf-8改为gbk。例如，京东网站的ie属性为enc属性。</p>\n<p>双击enc属性(在该属性上右键选择Properties选项也可以)，在弹出的窗口中进行修改，</p>\n<p>如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140455.png\" class>\n\n<p>（GBK大小写都可以）</p>\n<p>注意：你电脑默认的浏览器是什么编码，就换成它对应的编码即可，这样就可以不乱码。</p>\n</li>\n<li><p>配置输入的参数信息</p>\n<p>例如：在京东页面中，keyword属性就是关键词信息。</p>\n<p>双击keyword属性（在该属性上右键选择Properties选项也可以），修改Value属性为${自定义的变量名}，点击确定。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140501.png\" class>\n\n<p>然后开始配置变量的参数信息，步骤如下图所示：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140507.png\" class>\n\n<p>此时keyword属性的值，已被参数化。</p>\n</li>\n</ol>\n</li>\n<li><p>双击Step 1，进行修改</p>\n<p>选择For  each value of vari，表示以每个变量定义的值为准（也就是使用参数化）。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140515.png\" class>\n\n<p>此时查看脚本树的变化，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140522.png\" class>\n</li>\n<li><p>保存脚本，并用JMeter打开该脚本，运行即可。</p>\n<p>也可以在Badboy中，右键点击Test1 -&gt; Play Whole Test,执行该录制的脚本，查看执行效果。</p>\n</li>\n</ol>\n<h2 id=\"3-解决”当前页面的脚本发生错误”提示框\"><a href=\"#3-解决”当前页面的脚本发生错误”提示框\" class=\"headerlink\" title=\"3.解决”当前页面的脚本发生错误”提示框\"></a>3.解决”当前页面的脚本发生错误”提示框</h2><p>Badboy录制脚本的时候，总是弹出如下弹框”当前页面的脚本发生错误”。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140532.png\" class>\n\n<p>打开Badboy -&gt; preferences -&gt;点击playing -&gt;勾选Javascript Error Dialogs，然后重新Badboy工具即可。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140545.png\" class>\n\n<p>勾选”JavaScript Error Dialogs”,意思是自动处理&#x2F;抑制JavaScript错误对话框。</p>\n<p>提示：如果以后在录制JMeter脚本的时候，出现如上的弹窗，我们直接点击叉子关闭即可。</p>\n<h2 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4.总结\"></a>4.总结</h2><p>使用Badboy工具录制的脚本，相对于使用JMeter自身工具录制的脚本，更加精简，更加干净。</p>\n<p>但是Badboy工具录制脚本的时候，经常出现无法录制脚本的提示，是非常不友好的。</p>\n<p>JMeter自身自带的录制工具，兼容性就非常的好，就是录制的取样器非常的多，需要自己优化。</p>\n<p>总结：以上都是Badboy最基础的用法，还有很多的功能以后在工作中慢慢积累。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"使用Badboy工具录制Jmeter脚本\"><a href=\"#使用Badboy工具录制Jmeter脚本\" class=\"headerlink\" title=\"使用Badboy工具录制Jmeter脚本\"></a><strong>使用Badboy工具录制Jmeter脚本</strong></h2><h2 id=\"1-使用Badboy录制JMeter脚本\"><a href=\"#1-使用Badboy录制JMeter脚本\" class=\"headerlink\" title=\"1.使用Badboy录制JMeter脚本\"></a>1.使用Badboy录制JMeter脚本</h2><p>打开Badboy工具开始进行脚本录制。</p>\n<ol>\n<li><p>当我们打开Badboy工具时，默认就进入录制状态。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/03-19-23-140352.png\" class>\n\n<p>当然我们也可以点击录制按钮，进行状态的切换。</p>\n</li>\n<li><p>在地址栏中输入被测地址，并访问。</p>\n<p>我们以访问京东为例：</p>\n<p>在输入栏中输入京东网址，点击后边的小箭头，跳转到被测地址中。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/03-19-23-140359.png\" class>\n\n<p>当点击剪头后，记录一步操作(相当于创建了一个取样器)，并在右侧视图中显示被测网址的内容，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140404.png\" class>\n</li>\n<li><p>在视图中可以直接操作显示出来的内容。</p>\n<p>就和我们平时访问网站一样的，例如：我点击”请登陆”，就会跳转到京东的登陆页面了。</p>\n<p>同时脚本目录树中就会继续添加一步操作。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140408.png\" class>\n</li>\n<li><p>停止录制脚本。</p>\n<p>如果一个测试流程录制完成之后，我们就可以点击停止录制。</p>\n<p>就是点击工具栏中的小红点，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140415.png\" class>\n</li>\n<li><p>保存录制好的脚本文件。</p>\n<p>点击File-&gt;Export to JMeter…, 把脚本文件保存到你需要的位置，方便进行管理，JMeter文件的默认格式是.jmx格式的文件。</p>\n</li>\n<li><p>在JMeter中打开刚刚保存的脚本文件进行打开，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140418.png\" class>\n\n<p>说明：所有录制的内容都在Step 1中，这个组件叫<strong>录制控制器</strong>。</p>\n</li>\n<li><p>添加监听器</p>\n<p>使用Badboy录制的Jmeter脚本，是不带监听器的。</p>\n<p>这里我们需要手动添加一个监听器，方便查看结果。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140423.png\" class>\n</li>\n<li><p>在JMeter中启动脚本</p>\n<p>在工具栏中点击绿色启动剪头来运行该脚本。</p>\n<p>脚本运行完成之后，可以在”察看结果树”中查看该测试计划中所有请求与响应的结果。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140427.png\" class></li>\n</ol>\n<h2 id=\"2-使用Badboy参数化配置\"><a href=\"#2-使用Badboy参数化配置\" class=\"headerlink\" title=\"2.使用Badboy参数化配置\"></a>2.<strong>使用Badboy参数化配置</strong></h2><p>Badboy为方便自动化数据灵活性，提供了脚本参数化的功能。</p>\n<p>像上面的例子中是没有输入性操作在里面的，如果我访问的是百度，需要输入一些搜索关键词信息，这个时候就需要参数化配置了。</p>\n<ol>\n<li><p>打开Badboy工具，默认就进入录制状态。</p>\n</li>\n<li><p>在地址栏中输入被测地址，并访问。</p>\n<p>例如：访问京东网站，搜索需要的商品。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140432.png\" class>\n</li>\n<li><p>在百度搜索栏中输入搜索关键词”手机”，并点击搜索。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140436.png\" class>\n\n<p>点击搜索：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140439.png\" class>\n</li>\n<li><p>点击停止录制按钮，并开始修改。</p>\n<p>展开上一步搜索商品增加的脚本目录树：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140445.png\" class>\n\n<p>需要修改两处：</p>\n<ol>\n<li><p>如果输入的关键字信息出现乱码的情况。</p>\n<p>Badboy默认使用系统的IE浏览器，出现乱码的话，将ie属性的utf-8改为gbk。例如，京东网站的ie属性为enc属性。</p>\n<p>双击enc属性(在该属性上右键选择Properties选项也可以)，在弹出的窗口中进行修改，</p>\n<p>如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/04-19-23-140455.png\" class>\n\n<p>（GBK大小写都可以）</p>\n<p>注意：你电脑默认的浏览器是什么编码，就换成它对应的编码即可，这样就可以不乱码。</p>\n</li>\n<li><p>配置输入的参数信息</p>\n<p>例如：在京东页面中，keyword属性就是关键词信息。</p>\n<p>双击keyword属性（在该属性上右键选择Properties选项也可以），修改Value属性为${自定义的变量名}，点击确定。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140501.png\" class>\n\n<p>然后开始配置变量的参数信息，步骤如下图所示：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140507.png\" class>\n\n<p>此时keyword属性的值，已被参数化。</p>\n</li>\n</ol>\n</li>\n<li><p>双击Step 1，进行修改</p>\n<p>选择For  each value of vari，表示以每个变量定义的值为准（也就是使用参数化）。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140515.png\" class>\n\n<p>此时查看脚本树的变化，如下图：</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140522.png\" class>\n</li>\n<li><p>保存脚本，并用JMeter打开该脚本，运行即可。</p>\n<p>也可以在Badboy中，右键点击Test1 -&gt; Play Whole Test,执行该录制的脚本，查看执行效果。</p>\n</li>\n</ol>\n<h2 id=\"3-解决”当前页面的脚本发生错误”提示框\"><a href=\"#3-解决”当前页面的脚本发生错误”提示框\" class=\"headerlink\" title=\"3.解决”当前页面的脚本发生错误”提示框\"></a>3.解决”当前页面的脚本发生错误”提示框</h2><p>Badboy录制脚本的时候，总是弹出如下弹框”当前页面的脚本发生错误”。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140532.png\" class>\n\n<p>打开Badboy -&gt; preferences -&gt;点击playing -&gt;勾选Javascript Error Dialogs，然后重新Badboy工具即可。</p>\n<img src=\"/2023/09/19/Badboy%E5%BD%95%E5%88%B6/05-19-23-140545.png\" class>\n\n<p>勾选”JavaScript Error Dialogs”,意思是自动处理&#x2F;抑制JavaScript错误对话框。</p>\n<p>提示：如果以后在录制JMeter脚本的时候，出现如上的弹窗，我们直接点击叉子关闭即可。</p>\n<h2 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4.总结\"></a>4.总结</h2><p>使用Badboy工具录制的脚本，相对于使用JMeter自身工具录制的脚本，更加精简，更加干净。</p>\n<p>但是Badboy工具录制脚本的时候，经常出现无法录制脚本的提示，是非常不友好的。</p>\n<p>JMeter自身自带的录制工具，兼容性就非常的好，就是录制的取样器非常的多，需要自己优化。</p>\n<p>总结：以上都是Badboy最基础的用法，还有很多的功能以后在工作中慢慢积累。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"ChatGTP搭建","date":"2023-09-11T05:10:17.000Z","keywords":"ChatGTP","decription":"","top_img":"","cover":"https://s2.loli.net/2023/09/11/tr41skmdcCgG5Rh.png","_content":"\n## ChatGTP搭建---国内\n\n## **所需环境：**\n\n1. 确定自身系统环境，下载对应桌面工具\n2. openai账号（这个封锁比较严，需要科学上网工具，推荐Google邮箱注册，但官方搞了个双重验证，需要境外手机号...）\n3. 申请openai API 密钥(我会为大家提供API 密钥，大家可自行搭建，非常简单)\n\n下面以Windows版本为例：\n\n## 1.Chatbox介绍\n\n{% asset_img 23-11-23-132325.png%}\n\nChatbox是一个易于使用的人工智能解决方案，可以帮助提升你的工作和学习效率。\n\n支持多款全球最先进的AI大模型服务，用Ai提升工作效率。\n\nwindows版本下载链接：https://pan.baidu.com/s/1kF5rGZYTy2wvwH5ozdEp5Q?pwd=chat \n提取码：chat\n\n{%asset_img 23-11-23-132353.png%}\n\n下载完成后，安装：\n\n1.点击设置 \n\n2.选中模型\n\n3.选择AI模型提供方为：OpenAi API\n\n4.复制下方，并粘贴我提供的OpenAi API 密钥 （如果无法使用可以联系我哦！-！）（这个很重要！！这个很重要！！这个很重要！！）\n\n5.配置API域名（这个很重要！！这个很重要！！这个很重要！！由于国内无法访问OpenAi服务器，所以我们另辟蹊径，采用一些大佬镜像域名接口代理一下，就可以了。）\n\n将下方的API域名复制粘贴就OK了\n\n6.保存，其他无需改动，你就可以大展身手了。。。\n\n7.有时接口使用人数太大，可能会导致网络出错，一般是请求超时，点击重新生成就好了。\n\n{% asset_img 24-11-23-132424.png%}\n\n## API域名代理：\n\nhttps://api.openai-proxy.com/\n\n## openai API 密钥：\n\n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\n","source":"_posts/ChatGTP搭建.md","raw":"---\ntitle: ChatGTP搭建\ndate: 2023-09-11 13:10:17\ntags:\n   - ChatGTP\ncategories:\n   - ChatGTP搭建教程\nkeywords: \"ChatGTP\"\ndecription: \"\"\ntop_img: \"\"\ncover: https://s2.loli.net/2023/09/11/tr41skmdcCgG5Rh.png\n---\n\n## ChatGTP搭建---国内\n\n## **所需环境：**\n\n1. 确定自身系统环境，下载对应桌面工具\n2. openai账号（这个封锁比较严，需要科学上网工具，推荐Google邮箱注册，但官方搞了个双重验证，需要境外手机号...）\n3. 申请openai API 密钥(我会为大家提供API 密钥，大家可自行搭建，非常简单)\n\n下面以Windows版本为例：\n\n## 1.Chatbox介绍\n\n{% asset_img 23-11-23-132325.png%}\n\nChatbox是一个易于使用的人工智能解决方案，可以帮助提升你的工作和学习效率。\n\n支持多款全球最先进的AI大模型服务，用Ai提升工作效率。\n\nwindows版本下载链接：https://pan.baidu.com/s/1kF5rGZYTy2wvwH5ozdEp5Q?pwd=chat \n提取码：chat\n\n{%asset_img 23-11-23-132353.png%}\n\n下载完成后，安装：\n\n1.点击设置 \n\n2.选中模型\n\n3.选择AI模型提供方为：OpenAi API\n\n4.复制下方，并粘贴我提供的OpenAi API 密钥 （如果无法使用可以联系我哦！-！）（这个很重要！！这个很重要！！这个很重要！！）\n\n5.配置API域名（这个很重要！！这个很重要！！这个很重要！！由于国内无法访问OpenAi服务器，所以我们另辟蹊径，采用一些大佬镜像域名接口代理一下，就可以了。）\n\n将下方的API域名复制粘贴就OK了\n\n6.保存，其他无需改动，你就可以大展身手了。。。\n\n7.有时接口使用人数太大，可能会导致网络出错，一般是请求超时，点击重新生成就好了。\n\n{% asset_img 24-11-23-132424.png%}\n\n## API域名代理：\n\nhttps://api.openai-proxy.com/\n\n## openai API 密钥：\n\n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\n","slug":"ChatGTP搭建","published":1,"updated":"2023-09-11T06:12:31.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4nok0009fw485n35hrpr","content":"<h2 id=\"ChatGTP搭建—国内\"><a href=\"#ChatGTP搭建—国内\" class=\"headerlink\" title=\"ChatGTP搭建—国内\"></a>ChatGTP搭建—国内</h2><h2 id=\"所需环境：\"><a href=\"#所需环境：\" class=\"headerlink\" title=\"所需环境：\"></a><strong>所需环境：</strong></h2><ol>\n<li>确定自身系统环境，下载对应桌面工具</li>\n<li>openai账号（这个封锁比较严，需要科学上网工具，推荐Google邮箱注册，但官方搞了个双重验证，需要境外手机号…）</li>\n<li>申请openai API 密钥(我会为大家提供API 密钥，大家可自行搭建，非常简单)</li>\n</ol>\n<p>下面以Windows版本为例：</p>\n<h2 id=\"1-Chatbox介绍\"><a href=\"#1-Chatbox介绍\" class=\"headerlink\" title=\"1.Chatbox介绍\"></a>1.Chatbox介绍</h2><img src=\"/2023/09/11/ChatGTP%E6%90%AD%E5%BB%BA/23-11-23-132325.png\" class>\n\n<p>Chatbox是一个易于使用的人工智能解决方案，可以帮助提升你的工作和学习效率。</p>\n<p>支持多款全球最先进的AI大模型服务，用Ai提升工作效率。</p>\n<p>windows版本下载链接：<a href=\"https://pan.baidu.com/s/1kF5rGZYTy2wvwH5ozdEp5Q?pwd=chat\">https://pan.baidu.com/s/1kF5rGZYTy2wvwH5ozdEp5Q?pwd=chat</a><br>提取码：chat</p>\n<img src=\"/2023/09/11/ChatGTP%E6%90%AD%E5%BB%BA/23-11-23-132353.png\" class>\n\n<p>下载完成后，安装：</p>\n<p>1.点击设置 </p>\n<p>2.选中模型</p>\n<p>3.选择AI模型提供方为：OpenAi API</p>\n<p>4.复制下方，并粘贴我提供的OpenAi API 密钥 （如果无法使用可以联系我哦！-！）（这个很重要！！这个很重要！！这个很重要！！）</p>\n<p>5.配置API域名（这个很重要！！这个很重要！！这个很重要！！由于国内无法访问OpenAi服务器，所以我们另辟蹊径，采用一些大佬镜像域名接口代理一下，就可以了。）</p>\n<p>将下方的API域名复制粘贴就OK了</p>\n<p>6.保存，其他无需改动，你就可以大展身手了。。。</p>\n<p>7.有时接口使用人数太大，可能会导致网络出错，一般是请求超时，点击重新生成就好了。</p>\n<img src=\"/2023/09/11/ChatGTP%E6%90%AD%E5%BB%BA/24-11-23-132424.png\" class>\n\n<h2 id=\"API域名代理：\"><a href=\"#API域名代理：\" class=\"headerlink\" title=\"API域名代理：\"></a>API域名代理：</h2><p><a href=\"https://api.openai-proxy.com/\">https://api.openai-proxy.com/</a></p>\n<h2 id=\"openai-API-密钥：\"><a href=\"#openai-API-密钥：\" class=\"headerlink\" title=\"openai API 密钥：\"></a>openai API 密钥：</h2><p>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</p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"ChatGTP搭建—国内\"><a href=\"#ChatGTP搭建—国内\" class=\"headerlink\" title=\"ChatGTP搭建—国内\"></a>ChatGTP搭建—国内</h2><h2 id=\"所需环境：\"><a href=\"#所需环境：\" class=\"headerlink\" title=\"所需环境：\"></a><strong>所需环境：</strong></h2><ol>\n<li>确定自身系统环境，下载对应桌面工具</li>\n<li>openai账号（这个封锁比较严，需要科学上网工具，推荐Google邮箱注册，但官方搞了个双重验证，需要境外手机号…）</li>\n<li>申请openai API 密钥(我会为大家提供API 密钥，大家可自行搭建，非常简单)</li>\n</ol>\n<p>下面以Windows版本为例：</p>\n<h2 id=\"1-Chatbox介绍\"><a href=\"#1-Chatbox介绍\" class=\"headerlink\" title=\"1.Chatbox介绍\"></a>1.Chatbox介绍</h2><img src=\"/2023/09/11/ChatGTP%E6%90%AD%E5%BB%BA/23-11-23-132325.png\" class>\n\n<p>Chatbox是一个易于使用的人工智能解决方案，可以帮助提升你的工作和学习效率。</p>\n<p>支持多款全球最先进的AI大模型服务，用Ai提升工作效率。</p>\n<p>windows版本下载链接：<a href=\"https://pan.baidu.com/s/1kF5rGZYTy2wvwH5ozdEp5Q?pwd=chat\">https://pan.baidu.com/s/1kF5rGZYTy2wvwH5ozdEp5Q?pwd=chat</a><br>提取码：chat</p>\n<img src=\"/2023/09/11/ChatGTP%E6%90%AD%E5%BB%BA/23-11-23-132353.png\" class>\n\n<p>下载完成后，安装：</p>\n<p>1.点击设置 </p>\n<p>2.选中模型</p>\n<p>3.选择AI模型提供方为：OpenAi API</p>\n<p>4.复制下方，并粘贴我提供的OpenAi API 密钥 （如果无法使用可以联系我哦！-！）（这个很重要！！这个很重要！！这个很重要！！）</p>\n<p>5.配置API域名（这个很重要！！这个很重要！！这个很重要！！由于国内无法访问OpenAi服务器，所以我们另辟蹊径，采用一些大佬镜像域名接口代理一下，就可以了。）</p>\n<p>将下方的API域名复制粘贴就OK了</p>\n<p>6.保存，其他无需改动，你就可以大展身手了。。。</p>\n<p>7.有时接口使用人数太大，可能会导致网络出错，一般是请求超时，点击重新生成就好了。</p>\n<img src=\"/2023/09/11/ChatGTP%E6%90%AD%E5%BB%BA/24-11-23-132424.png\" class>\n\n<h2 id=\"API域名代理：\"><a href=\"#API域名代理：\" class=\"headerlink\" title=\"API域名代理：\"></a>API域名代理：</h2><p><a href=\"https://api.openai-proxy.com/\">https://api.openai-proxy.com/</a></p>\n<h2 id=\"openai-API-密钥：\"><a href=\"#openai-API-密钥：\" class=\"headerlink\" title=\"openai API 密钥：\"></a>openai API 密钥：</h2><p>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</p>\n"},{"title":"Github基础学习","keywords":"Git基础学习","abbrlink":"","date":"2023-08-27T02:57:09.000Z","decription":null,"top_img":null,"cover":"https://s2.loli.net/2023/08/30/YdFOAtwaJNbSMxH.png","_content":"\n#### 1.\t配置与使用\n\n##### 1.1\t配置github用户和邮箱\n\n--->创建一个空的目录文件夹，右键打开Git Bash Here \n\n--->配置全局用户名：git \tconfig \t--global\tuser.name \"自己的用户名\"\n\n###### 注意：这里的自己的用户名可以随便设\n\n--->配置全局邮箱： git\tconfig\t--global\tuser.email\t\"自己邮箱\"\n\n--->生成密钥：ssh-keygen\t\t-c \trsa,然后一直回车，然后找到C盘下有个id_rsa.pub公钥文件。用记事本打开复制里面内容\n\n--->配置本地与gitee的密钥和激活\n\n###### 1.\t登录gitee，然后点击右上方头像的设置\n\n###### 2.\t配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\n\n#### 2.\t客户端验证\n\n-->验证本机与gitee是否连接成功\n\n输入：ssh\tgit@gitee.com \t-->yes,出现successfully表示本机与云端连接成功\n\n#### 3.\t文件提交和数据上传\n\n1.\t首先找到你的仓库url地址。点击code复制https地址或者ssh的地址。\n\n--->在客户端添加一个远程仓库地址\n\n​\t\t\t2. git \tinit\t\t\n\n-->git\tremote\tadd\torigin \t你的仓库url地址\n\n--->本地缓存区添加文件：git \tadd \t文件名\n\n--->本地提交添加的文件：git\tcommit\t-m \t\"注解\"\n\n--->向云端的master分支进行推送：git\tpush\torigin\tmaster\t-f\n\n--->推送成功后，在云端仓库就可以看到上传的文件\n\n--->查看暂存区中的文件列表：\tgit \tls-files\n\n--->查看本地版本库中的文件列表：\tgit\tls-files\t--with-tree=HEAD\n\n--->查看追踪状态：\tgit\tstatus\n\n--->版本回退：git \treset \tHEAD\n\n--->暂存区删除xxx文件：\tgit \trm \t--cached\txxx\n\n--->查看工作区中的文件列表：\tll\n\n--->删除工作区和暂存区的文件：\tgit\trm\tfilename    (-r)递归删除文件\n\n#### 注意：\n\n如果在分支推送执行后，出现红色报错\n\n--->打开控制面板--->用户账号--->凭据管理器--->Windows凭据--->找到git开头gitee.com的，输入你的正确用户名和密码，保存，然后提交，git\tpush \torigin\tmaster\t-f\n\n###### \n\n#### 问题：\n\n1.\t使用git添加远程github仓库时，提示error: remote origin already exists.\n\n-->(先删除远程Git仓库)git\tremote \trm\torigin\t-->（再添加远程Git仓库）git\tremote\tadd\torigin\t仓库地址Url \n\n如果执行git \tremote\trm \torigin报错，手动修改gitconfig文件内容\t-->vi \t.git/config\t-->把[remote “origin”]那行删除----OK","source":"_posts/Github学习.md","raw":"---\ntitle: Github基础学习\ntags: \n   - Git\n   - 学习\ncategories:\n   - Git基础学习\nkeywords: \"Git基础学习\"\nabbrlink: \"\"\ndate: 2023-08-27 10:57:09\ndecription:\ntop_img:\ncover: https://s2.loli.net/2023/08/30/YdFOAtwaJNbSMxH.png\n---\n\n#### 1.\t配置与使用\n\n##### 1.1\t配置github用户和邮箱\n\n--->创建一个空的目录文件夹，右键打开Git Bash Here \n\n--->配置全局用户名：git \tconfig \t--global\tuser.name \"自己的用户名\"\n\n###### 注意：这里的自己的用户名可以随便设\n\n--->配置全局邮箱： git\tconfig\t--global\tuser.email\t\"自己邮箱\"\n\n--->生成密钥：ssh-keygen\t\t-c \trsa,然后一直回车，然后找到C盘下有个id_rsa.pub公钥文件。用记事本打开复制里面内容\n\n--->配置本地与gitee的密钥和激活\n\n###### 1.\t登录gitee，然后点击右上方头像的设置\n\n###### 2.\t配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\n\n#### 2.\t客户端验证\n\n-->验证本机与gitee是否连接成功\n\n输入：ssh\tgit@gitee.com \t-->yes,出现successfully表示本机与云端连接成功\n\n#### 3.\t文件提交和数据上传\n\n1.\t首先找到你的仓库url地址。点击code复制https地址或者ssh的地址。\n\n--->在客户端添加一个远程仓库地址\n\n​\t\t\t2. git \tinit\t\t\n\n-->git\tremote\tadd\torigin \t你的仓库url地址\n\n--->本地缓存区添加文件：git \tadd \t文件名\n\n--->本地提交添加的文件：git\tcommit\t-m \t\"注解\"\n\n--->向云端的master分支进行推送：git\tpush\torigin\tmaster\t-f\n\n--->推送成功后，在云端仓库就可以看到上传的文件\n\n--->查看暂存区中的文件列表：\tgit \tls-files\n\n--->查看本地版本库中的文件列表：\tgit\tls-files\t--with-tree=HEAD\n\n--->查看追踪状态：\tgit\tstatus\n\n--->版本回退：git \treset \tHEAD\n\n--->暂存区删除xxx文件：\tgit \trm \t--cached\txxx\n\n--->查看工作区中的文件列表：\tll\n\n--->删除工作区和暂存区的文件：\tgit\trm\tfilename    (-r)递归删除文件\n\n#### 注意：\n\n如果在分支推送执行后，出现红色报错\n\n--->打开控制面板--->用户账号--->凭据管理器--->Windows凭据--->找到git开头gitee.com的，输入你的正确用户名和密码，保存，然后提交，git\tpush \torigin\tmaster\t-f\n\n###### \n\n#### 问题：\n\n1.\t使用git添加远程github仓库时，提示error: remote origin already exists.\n\n-->(先删除远程Git仓库)git\tremote \trm\torigin\t-->（再添加远程Git仓库）git\tremote\tadd\torigin\t仓库地址Url \n\n如果执行git \tremote\trm \torigin报错，手动修改gitconfig文件内容\t-->vi \t.git/config\t-->把[remote “origin”]那行删除----OK","slug":"Github学习","published":1,"updated":"2023-08-30T05:55:42.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4nom000bfw48fkywhzo5","content":"<h4 id=\"1-配置与使用\"><a href=\"#1-配置与使用\" class=\"headerlink\" title=\"1.\t配置与使用\"></a>1.\t配置与使用</h4><h5 id=\"1-1配置github用户和邮箱\"><a href=\"#1-1配置github用户和邮箱\" class=\"headerlink\" title=\"1.1\t配置github用户和邮箱\"></a>1.1\t配置github用户和邮箱</h5><p>—&gt;创建一个空的目录文件夹，右键打开Git Bash Here </p>\n<p>—&gt;配置全局用户名：git \tconfig \t–global\tuser.name “自己的用户名”</p>\n<h6 id=\"注意：这里的自己的用户名可以随便设\"><a href=\"#注意：这里的自己的用户名可以随便设\" class=\"headerlink\" title=\"注意：这里的自己的用户名可以随便设\"></a>注意：这里的自己的用户名可以随便设</h6><p>—&gt;配置全局邮箱： git\tconfig\t–global\tuser.email\t“自己邮箱”</p>\n<p>—&gt;生成密钥：ssh-keygen\t\t-c \trsa,然后一直回车，然后找到C盘下有个id_rsa.pub公钥文件。用记事本打开复制里面内容</p>\n<p>—&gt;配置本地与gitee的密钥和激活</p>\n<h6 id=\"1-登录gitee，然后点击右上方头像的设置\"><a href=\"#1-登录gitee，然后点击右上方头像的设置\" class=\"headerlink\" title=\"1.\t登录gitee，然后点击右上方头像的设置\"></a>1.\t登录gitee，然后点击右上方头像的设置</h6><h6 id=\"2-配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\"><a href=\"#2-配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\" class=\"headerlink\" title=\"2.\t配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\"></a>2.\t配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证</h6><h4 id=\"2-客户端验证\"><a href=\"#2-客户端验证\" class=\"headerlink\" title=\"2.\t客户端验证\"></a>2.\t客户端验证</h4><p>–&gt;验证本机与gitee是否连接成功</p>\n<p>输入：ssh\t<a href=\"mailto:&#103;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#101;&#101;&#46;&#99;&#x6f;&#x6d;\">&#103;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#101;&#101;&#46;&#99;&#x6f;&#x6d;</a> \t–&gt;yes,出现successfully表示本机与云端连接成功</p>\n<h4 id=\"3-文件提交和数据上传\"><a href=\"#3-文件提交和数据上传\" class=\"headerlink\" title=\"3.\t文件提交和数据上传\"></a>3.\t文件提交和数据上传</h4><ol>\n<li>   首先找到你的仓库url地址。点击code复制https地址或者ssh的地址。</li>\n</ol>\n<p>—&gt;在客户端添加一个远程仓库地址</p>\n<p>​\t\t\t2. git \tinit\t\t</p>\n<p>–&gt;git\tremote\tadd\torigin \t你的仓库url地址</p>\n<p>—&gt;本地缓存区添加文件：git \tadd \t文件名</p>\n<p>—&gt;本地提交添加的文件：git\tcommit\t-m \t“注解”</p>\n<p>—&gt;向云端的master分支进行推送：git\tpush\torigin\tmaster\t-f</p>\n<p>—&gt;推送成功后，在云端仓库就可以看到上传的文件</p>\n<p>—&gt;查看暂存区中的文件列表：\tgit \tls-files</p>\n<p>—&gt;查看本地版本库中的文件列表：\tgit\tls-files\t–with-tree&#x3D;HEAD</p>\n<p>—&gt;查看追踪状态：\tgit\tstatus</p>\n<p>—&gt;版本回退：git \treset \tHEAD</p>\n<p>—&gt;暂存区删除xxx文件：\tgit \trm \t–cached\txxx</p>\n<p>—&gt;查看工作区中的文件列表：\tll</p>\n<p>—&gt;删除工作区和暂存区的文件：\tgit\trm\tfilename    (-r)递归删除文件</p>\n<h4 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h4><p>如果在分支推送执行后，出现红色报错</p>\n<p>—&gt;打开控制面板—&gt;用户账号—&gt;凭据管理器—&gt;Windows凭据—&gt;找到git开头gitee.com的，输入你的正确用户名和密码，保存，然后提交，git\tpush \torigin\tmaster\t-f</p>\n<h6 id><a href=\"#\" class=\"headerlink\" title></a></h6><h4 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h4><ol>\n<li>   使用git添加远程github仓库时，提示error: remote origin already exists.</li>\n</ol>\n<p>–&gt;(先删除远程Git仓库)git\tremote \trm\torigin\t–&gt;（再添加远程Git仓库）git\tremote\tadd\torigin\t仓库地址Url </p>\n<p>如果执行git \tremote\trm \torigin报错，手动修改gitconfig文件内容\t–&gt;vi \t.git&#x2F;config\t–&gt;把[remote “origin”]那行删除—-OK</p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h4 id=\"1-配置与使用\"><a href=\"#1-配置与使用\" class=\"headerlink\" title=\"1.\t配置与使用\"></a>1.\t配置与使用</h4><h5 id=\"1-1配置github用户和邮箱\"><a href=\"#1-1配置github用户和邮箱\" class=\"headerlink\" title=\"1.1\t配置github用户和邮箱\"></a>1.1\t配置github用户和邮箱</h5><p>—&gt;创建一个空的目录文件夹，右键打开Git Bash Here </p>\n<p>—&gt;配置全局用户名：git \tconfig \t–global\tuser.name “自己的用户名”</p>\n<h6 id=\"注意：这里的自己的用户名可以随便设\"><a href=\"#注意：这里的自己的用户名可以随便设\" class=\"headerlink\" title=\"注意：这里的自己的用户名可以随便设\"></a>注意：这里的自己的用户名可以随便设</h6><p>—&gt;配置全局邮箱： git\tconfig\t–global\tuser.email\t“自己邮箱”</p>\n<p>—&gt;生成密钥：ssh-keygen\t\t-c \trsa,然后一直回车，然后找到C盘下有个id_rsa.pub公钥文件。用记事本打开复制里面内容</p>\n<p>—&gt;配置本地与gitee的密钥和激活</p>\n<h6 id=\"1-登录gitee，然后点击右上方头像的设置\"><a href=\"#1-登录gitee，然后点击右上方头像的设置\" class=\"headerlink\" title=\"1.\t登录gitee，然后点击右上方头像的设置\"></a>1.\t登录gitee，然后点击右上方头像的设置</h6><h6 id=\"2-配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\"><a href=\"#2-配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\" class=\"headerlink\" title=\"2.\t配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证\"></a>2.\t配置云端与本机密钥，找到安全设置SSH公钥-输入标题-粘贴公钥-输入密码验证</h6><h4 id=\"2-客户端验证\"><a href=\"#2-客户端验证\" class=\"headerlink\" title=\"2.\t客户端验证\"></a>2.\t客户端验证</h4><p>–&gt;验证本机与gitee是否连接成功</p>\n<p>输入：ssh\t<a href=\"mailto:&#103;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#101;&#101;&#46;&#99;&#x6f;&#x6d;\">&#103;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#101;&#101;&#46;&#99;&#x6f;&#x6d;</a> \t–&gt;yes,出现successfully表示本机与云端连接成功</p>\n<h4 id=\"3-文件提交和数据上传\"><a href=\"#3-文件提交和数据上传\" class=\"headerlink\" title=\"3.\t文件提交和数据上传\"></a>3.\t文件提交和数据上传</h4><ol>\n<li>   首先找到你的仓库url地址。点击code复制https地址或者ssh的地址。</li>\n</ol>\n<p>—&gt;在客户端添加一个远程仓库地址</p>\n<p>​\t\t\t2. git \tinit\t\t</p>\n<p>–&gt;git\tremote\tadd\torigin \t你的仓库url地址</p>\n<p>—&gt;本地缓存区添加文件：git \tadd \t文件名</p>\n<p>—&gt;本地提交添加的文件：git\tcommit\t-m \t“注解”</p>\n<p>—&gt;向云端的master分支进行推送：git\tpush\torigin\tmaster\t-f</p>\n<p>—&gt;推送成功后，在云端仓库就可以看到上传的文件</p>\n<p>—&gt;查看暂存区中的文件列表：\tgit \tls-files</p>\n<p>—&gt;查看本地版本库中的文件列表：\tgit\tls-files\t–with-tree&#x3D;HEAD</p>\n<p>—&gt;查看追踪状态：\tgit\tstatus</p>\n<p>—&gt;版本回退：git \treset \tHEAD</p>\n<p>—&gt;暂存区删除xxx文件：\tgit \trm \t–cached\txxx</p>\n<p>—&gt;查看工作区中的文件列表：\tll</p>\n<p>—&gt;删除工作区和暂存区的文件：\tgit\trm\tfilename    (-r)递归删除文件</p>\n<h4 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h4><p>如果在分支推送执行后，出现红色报错</p>\n<p>—&gt;打开控制面板—&gt;用户账号—&gt;凭据管理器—&gt;Windows凭据—&gt;找到git开头gitee.com的，输入你的正确用户名和密码，保存，然后提交，git\tpush \torigin\tmaster\t-f</p>\n<h6 id><a href=\"#\" class=\"headerlink\" title></a></h6><h4 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h4><ol>\n<li>   使用git添加远程github仓库时，提示error: remote origin already exists.</li>\n</ol>\n<p>–&gt;(先删除远程Git仓库)git\tremote \trm\torigin\t–&gt;（再添加远程Git仓库）git\tremote\tadd\torigin\t仓库地址Url </p>\n<p>如果执行git \tremote\trm \torigin报错，手动修改gitconfig文件内容\t–&gt;vi \t.git&#x2F;config\t–&gt;把[remote “origin”]那行删除—-OK</p>\n"},{"title":"JMeter分布式测试","date":"2023-09-21T06:37:10.000Z","cover":"https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png","_content":"\n## **JMeter分布式测试**\n\n## 1.**JMeter分布式测试概念**\n\n1. **什么是分布式测试**\n\n   分布式测试是指通过局域网和internet，把分布于不同地点、独立完成特定功能的测试计算机连接起来，以达到测试资源共享、分散操作、集中管理、协同工作、负载均衡、测试过程监控等目的的计算机网络测试。\n\n   即：由多台电脑共同完成一个测试计划的执行，我们称这种测试的方式为分布式测试。换句话说，也就是一个人干不了，就多叫几个人一起干。\n\n2. **为什么要使用分布式测试**\n\n   在工作中使用JMeter做大并发压力测试的场景下，需要模拟成百上千的用户并发，这样使用单台机器模拟所有的并发用户就有些力不从心。\n\n   因为单机受限内存、CPU、网络IO等，会出现被服务器压力还没有上去，但是执行压测的服务器已经由于模拟的压力太大而宕机了。\n\n   为了让JMeter工具能够提供更强大的负载能力，JMeter提供了多台机器同时产生负载的机制，也就是我们所说的分布式的执行方式。\n\n   即：JMeter的集群模式可以让我们将多台机器联合起来一起产生负载，从而弥补单台机器负载生成能力不足的问题。\n\n   JMeter自身的局限性总结：\n\n   - 由于一台电脑的CPU、内存有限、无法满足更高的测试要求。一台压力机中的JMeter，默认最大支持1000左右的并发用户数（线程数），再大的话，容易造成卡顿、无响应等情况。\n   - 由于JMeter是Java应用，对CPU和内存的消耗较大，在需要模拟大量并发用户数时，单机很容易出现Java内存溢出的错误，导致测试脚本本身就有瓶颈。\n\n3. **JMeter分布式测试原理**\n\n   1. 一台电脑作为控制机（Controller、master），其它电脑做为执行机（Agent、slave）。\n   2. JMeter脚本执行时，控制机会把脚本发送到每台执行机上，执行机拿到脚本后就开始执行。\n   3. 在执行机中执行脚本时，不需要启动JMeter工具界面，可以理解它是通过命令行模式执行的。\n   4. 执行完成后，执行机会把结果回传给控制机，控制机会收集所有执行机的信息并汇总。\n\n   JMeter分布式测试架构图如下：\n\n{%asset_img 40-21-23-144055.png%}\n\n说明：\n\n假设我们的测试计划会产生100个threads，我们使用8台机器进行分布式测试的时候，一共会产生100*8=800的负载。\n\n## 2.JMeter分布式测试前提条件\n\n所有机器，包括master和slave机器：\n\n1. 运行相同版本的JMeter。\n\n2. 使用相同版本的Java环境，即JDK。\n\n3. 所有机器都要在一个网格中。即：同一局域网中，也就是同一网段中。\n\n4. 有基于SSL的RMI的有效密钥库，或者禁用SSL。（本文举例中都是采取的禁用SSL）\n\n   即：在jmeter.properties配置文件中，配置server.rmi.ssl.disable=true。\n\n5. 关闭防火墙，尤其是Linux系统。\n\n   提示：\n\n   - Agent机器上可以不放JMeter的脚本，但如果有用到测试数据，就必须把测试数据放到Agent机器上去。\n   - Controller和Agent机器上最好装有相同版本的JDK和JMeter，并配置好环境变量。\n\n## 3.JMeter实现分布式测试\n\n**环境说明：**\n\n- 准备四台电脑：\n\n  两台Windows系统的电脑：192.168.1.101、192.168.1.102\n\n  两台Linux系统电脑：192.168.1.103、192.168.1.104\n\n- Java环境：JDK1.8\n\n- JMeter版本：5.4.1\n\n提示：\n\n- 设定192.168.1.101为控制机（Controller、master）。\n- 设置192.168.1.102、192.168.1.103、192.168.1.104为执行机（Agent、slave）。\n\n1. **在执行机中的配置**\n\n   修改JMeter的bin目录中jmeter.properties文件。\n\n   ```properties\n   remote_hosts=127.0.0.1\n   server_port=1099\n   #禁用ssl\n   server.rmi.ssl.disable=true\n   ```\n\n   如下图所示：\n\n   {%asset_img 41-21-23-144110.png%}\n\n   提示：Linux系统中，在VIM编辑使用末行命令/，可以搜索目录文本的位置。（后面不再重复说明了）\n\n   三台执行机都进行如上的配置：\n\n   - 192.168.1.102：remote_hosts：127.0.0.1、server_port:1099\n   - 192.168.1.103:  remote_hosts:    127.0.0.1、server_port:1099\n   - 192.168.1.104：remote_hosts:    127.0.0.1、server_port:1099\n\n2. **在控制机中的配置**\n\n   修改JMeter的bin目录中jmeter.properties文件。\n\n   ```properties\n   #配置slaves机器的ip和端口\n   remote_hosts=192.168.1.102:1099,192.168.1.103:1099,192.168.1.104:1099\n   #禁用ssl\n   server.rmi.ssl.disable=true\n   ```\n\n   如下图所示：\n\n   {%asset_img 41-21-23-144117.png%}\n\n   提示：不同压力和端口可以不一样，不需要全部都一致。\n\n   如果控制机也需要作为测试机，配置如下：\n\n   ```properties\n   #配置slaves机器的ip和端口\n   remote_hosts=192.168.1.102:1099,192.168.1.103:1099,192.168.104:1099,192.168.1.101:1099\n   #向外暴露的端口\n   server_port=1099\n   #禁用ssl\n   server.rmi.ssl.disable=true\n   ```\n\n3. **启动执行机中的JMeter服务**\n\n   我们在所有需要执行JMeter脚本的执行机上，启动jmeter-server服务。\n\n   进入到JMeter安装路径的bin目录中，执行命令：./jmerter-serve或双击jmeter-server.bat。\n\n   如下图所示：\n\n   {%asset_img 41-21-23-144128.png%}\n\n   提示：\n\n   - 在Windows系统中，是直接启动bin\\jmeter-server.bat文件。\n   - 如果控制机也需要执行测试，同样也需要启动jmeter-server服务。\n\n   执行机中执行测试计划会出现Starting  the  test 和 Finished  the  test字样。\n\n   如下所示：\n\n   {%asset_img 41-21-23-144140.png%}\n\n4. 在控制机中执行JMeter测试脚本\n\n   因为我的控制机是一台Windows系统的电脑，我们可以使用GUI的方式进行演示。\n\n   1. 我们先来使用一台远程执行机执行我们的本地脚本。\n\n      在JMeter中操作：运行->远程启动->选择一个远程执行机，则控制机中的脚本，会自动传送到远程执行机上进行运行。\n\n      如下图所示：\n\n      {%asset_img 41-21-23-144146.png%}\n\n      提示：这里会显示所有remote_hosts添加的压力机\n\n   运行脚本完成，控制机中收到的结果如下所示：\n\n   {%asset_img 41-21-23-144150.png%}\n\n   1. 我们使用三台远程执行机执行我们的本地脚本。\n\n      在JMeter中操作：运行->远程启动所有，如下图所示：\n\n      {%asset_img 41-21-23-144155.png%}\n\n      脚本运行完成，控制机会收到的结果如下所示：\n\n      {%asset_img 42-21-23-144200.png%}\n\n      我们可以看到，每台执行机执行50次请求，三台执行机就能生成出150个模拟用户的访问压力。\n\n      说明：\n\n      **分布测试总样本数=线程数x循环次数x执行机总数。**\n\n      样本计数逻辑为：执行机slave执行的测试脚本是由调度机master分发的，故每台执行机执行的测试脚本都是相同的。\n\n      故而**性能测试总样本数=测试脚本样本数x执行机总数**，而**测试脚本样本数为线程数x循环次数**\n\n      以上就是使用JMeter分布式测试的全部过程。\n\n## 4.**Linux系统作为控制机**\n\n步骤和windows系统作为控制机操作基本相同。\n\n我们需要先把编辑好的JMeter测试脚本，上传到Linux系统的控制机中。\n\n说明：\n\n- 因为我们配置了JMeter的环境变量，所以可以在任何目录中执行JMeter命令。\n- JMeter测试脚本可以放在任何目录中来执行，不一定非要放在bin目录中。\n- JMeter测试脚本只需要上传到控制机中，其他执行机上可以不放JMeter脚本，因为控制机启动后会拷贝本地的.jmx脚本文件，到远程执行机上。\n- 但如果有用到测试数据，就必须把测试数据文件放到slave机器上去。\n\n我把JMeter测试脚本上传到tmp目录中，主要是找个空闲的目录进行演示。\n\n- /tmp/jmeterscript：存放JMeter脚本。\n- /tmp/jmeterlog：存放JMeter日志。\n- /tmp/result：存放测试运行结果。\n- /tmp/resultforHTML： 存放HTML图形化报表。\n\n在任何路径下执行如下命令即可：\n\n```shell\njmeter -n -t/tmp/jmeterscript/CLI_test.jmx -r -l /tmp/result/result.jtl -j /tmp/jmeterlog/test.log -e -o /tmp/resultforHTML/tableResult\n```\n\n提示：\n\n我开始使用三台Linux虚拟机进行操作，使用其中一台做控制机，其他两台做执行机。然后我用Windows系统做控制机，起三台Linux虚拟机做执行机，发现都不成功。\n\n这是因为都是在我本地的一台机器上启动的这些测试机。因为网卡的识别问题，造成启动jmeter-server服务识别的控制机的网卡不对，控制机始终收不到执行机返回的结果。\n\n而我在另一台电脑中启动所有的执行机，把控制机的虚拟网卡禁用掉，就能成功进行分布式测试。\n\n不过不用担心，在实际的工作中，公司会有很多的云服务器，不太会遇到这样的情况。\n\n这里就简单的描述一下，后面我会总结，我学习JMeter分布式测试中，遇到的所有的坑。\n\n## 5.分布式测试总结\n\n对分布式测试而言，测试过程是一种对流程控制要求很高的活动，因此系统需要适时地获得全局状态以正确地指导流程。其次在测试过程中，系统要能够方便地监视和操控测试过程。因此分布式测试系统适合采用集中式的分布式策略，即，由一台中心计算机控制若干台受控计算机的执行，整个测试过程和资源管理由中心来完成，它掌握整个分布式测试环境的状态，从而发出控制命令。\n\n提示：\n\n在进行分布式测试的时候，尽量使用Linux系统，因为测试结果的影响更少。\n\n最后在配一个JMeter分布式测试架构图：\n\n{%asset_img 07-21-23-150713.png%}\n\n\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n\n","source":"_posts/JMeter分布式测试.md","raw":"---\ntitle: JMeter分布式测试\ndate: 2023-09-21 14:37:10\ntags:\n   - 分布式测试\ncategories:\n   - JMeter分布式测试学习 \ncover: https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png\n---\n\n## **JMeter分布式测试**\n\n## 1.**JMeter分布式测试概念**\n\n1. **什么是分布式测试**\n\n   分布式测试是指通过局域网和internet，把分布于不同地点、独立完成特定功能的测试计算机连接起来，以达到测试资源共享、分散操作、集中管理、协同工作、负载均衡、测试过程监控等目的的计算机网络测试。\n\n   即：由多台电脑共同完成一个测试计划的执行，我们称这种测试的方式为分布式测试。换句话说，也就是一个人干不了，就多叫几个人一起干。\n\n2. **为什么要使用分布式测试**\n\n   在工作中使用JMeter做大并发压力测试的场景下，需要模拟成百上千的用户并发，这样使用单台机器模拟所有的并发用户就有些力不从心。\n\n   因为单机受限内存、CPU、网络IO等，会出现被服务器压力还没有上去，但是执行压测的服务器已经由于模拟的压力太大而宕机了。\n\n   为了让JMeter工具能够提供更强大的负载能力，JMeter提供了多台机器同时产生负载的机制，也就是我们所说的分布式的执行方式。\n\n   即：JMeter的集群模式可以让我们将多台机器联合起来一起产生负载，从而弥补单台机器负载生成能力不足的问题。\n\n   JMeter自身的局限性总结：\n\n   - 由于一台电脑的CPU、内存有限、无法满足更高的测试要求。一台压力机中的JMeter，默认最大支持1000左右的并发用户数（线程数），再大的话，容易造成卡顿、无响应等情况。\n   - 由于JMeter是Java应用，对CPU和内存的消耗较大，在需要模拟大量并发用户数时，单机很容易出现Java内存溢出的错误，导致测试脚本本身就有瓶颈。\n\n3. **JMeter分布式测试原理**\n\n   1. 一台电脑作为控制机（Controller、master），其它电脑做为执行机（Agent、slave）。\n   2. JMeter脚本执行时，控制机会把脚本发送到每台执行机上，执行机拿到脚本后就开始执行。\n   3. 在执行机中执行脚本时，不需要启动JMeter工具界面，可以理解它是通过命令行模式执行的。\n   4. 执行完成后，执行机会把结果回传给控制机，控制机会收集所有执行机的信息并汇总。\n\n   JMeter分布式测试架构图如下：\n\n{%asset_img 40-21-23-144055.png%}\n\n说明：\n\n假设我们的测试计划会产生100个threads，我们使用8台机器进行分布式测试的时候，一共会产生100*8=800的负载。\n\n## 2.JMeter分布式测试前提条件\n\n所有机器，包括master和slave机器：\n\n1. 运行相同版本的JMeter。\n\n2. 使用相同版本的Java环境，即JDK。\n\n3. 所有机器都要在一个网格中。即：同一局域网中，也就是同一网段中。\n\n4. 有基于SSL的RMI的有效密钥库，或者禁用SSL。（本文举例中都是采取的禁用SSL）\n\n   即：在jmeter.properties配置文件中，配置server.rmi.ssl.disable=true。\n\n5. 关闭防火墙，尤其是Linux系统。\n\n   提示：\n\n   - Agent机器上可以不放JMeter的脚本，但如果有用到测试数据，就必须把测试数据放到Agent机器上去。\n   - Controller和Agent机器上最好装有相同版本的JDK和JMeter，并配置好环境变量。\n\n## 3.JMeter实现分布式测试\n\n**环境说明：**\n\n- 准备四台电脑：\n\n  两台Windows系统的电脑：192.168.1.101、192.168.1.102\n\n  两台Linux系统电脑：192.168.1.103、192.168.1.104\n\n- Java环境：JDK1.8\n\n- JMeter版本：5.4.1\n\n提示：\n\n- 设定192.168.1.101为控制机（Controller、master）。\n- 设置192.168.1.102、192.168.1.103、192.168.1.104为执行机（Agent、slave）。\n\n1. **在执行机中的配置**\n\n   修改JMeter的bin目录中jmeter.properties文件。\n\n   ```properties\n   remote_hosts=127.0.0.1\n   server_port=1099\n   #禁用ssl\n   server.rmi.ssl.disable=true\n   ```\n\n   如下图所示：\n\n   {%asset_img 41-21-23-144110.png%}\n\n   提示：Linux系统中，在VIM编辑使用末行命令/，可以搜索目录文本的位置。（后面不再重复说明了）\n\n   三台执行机都进行如上的配置：\n\n   - 192.168.1.102：remote_hosts：127.0.0.1、server_port:1099\n   - 192.168.1.103:  remote_hosts:    127.0.0.1、server_port:1099\n   - 192.168.1.104：remote_hosts:    127.0.0.1、server_port:1099\n\n2. **在控制机中的配置**\n\n   修改JMeter的bin目录中jmeter.properties文件。\n\n   ```properties\n   #配置slaves机器的ip和端口\n   remote_hosts=192.168.1.102:1099,192.168.1.103:1099,192.168.1.104:1099\n   #禁用ssl\n   server.rmi.ssl.disable=true\n   ```\n\n   如下图所示：\n\n   {%asset_img 41-21-23-144117.png%}\n\n   提示：不同压力和端口可以不一样，不需要全部都一致。\n\n   如果控制机也需要作为测试机，配置如下：\n\n   ```properties\n   #配置slaves机器的ip和端口\n   remote_hosts=192.168.1.102:1099,192.168.1.103:1099,192.168.104:1099,192.168.1.101:1099\n   #向外暴露的端口\n   server_port=1099\n   #禁用ssl\n   server.rmi.ssl.disable=true\n   ```\n\n3. **启动执行机中的JMeter服务**\n\n   我们在所有需要执行JMeter脚本的执行机上，启动jmeter-server服务。\n\n   进入到JMeter安装路径的bin目录中，执行命令：./jmerter-serve或双击jmeter-server.bat。\n\n   如下图所示：\n\n   {%asset_img 41-21-23-144128.png%}\n\n   提示：\n\n   - 在Windows系统中，是直接启动bin\\jmeter-server.bat文件。\n   - 如果控制机也需要执行测试，同样也需要启动jmeter-server服务。\n\n   执行机中执行测试计划会出现Starting  the  test 和 Finished  the  test字样。\n\n   如下所示：\n\n   {%asset_img 41-21-23-144140.png%}\n\n4. 在控制机中执行JMeter测试脚本\n\n   因为我的控制机是一台Windows系统的电脑，我们可以使用GUI的方式进行演示。\n\n   1. 我们先来使用一台远程执行机执行我们的本地脚本。\n\n      在JMeter中操作：运行->远程启动->选择一个远程执行机，则控制机中的脚本，会自动传送到远程执行机上进行运行。\n\n      如下图所示：\n\n      {%asset_img 41-21-23-144146.png%}\n\n      提示：这里会显示所有remote_hosts添加的压力机\n\n   运行脚本完成，控制机中收到的结果如下所示：\n\n   {%asset_img 41-21-23-144150.png%}\n\n   1. 我们使用三台远程执行机执行我们的本地脚本。\n\n      在JMeter中操作：运行->远程启动所有，如下图所示：\n\n      {%asset_img 41-21-23-144155.png%}\n\n      脚本运行完成，控制机会收到的结果如下所示：\n\n      {%asset_img 42-21-23-144200.png%}\n\n      我们可以看到，每台执行机执行50次请求，三台执行机就能生成出150个模拟用户的访问压力。\n\n      说明：\n\n      **分布测试总样本数=线程数x循环次数x执行机总数。**\n\n      样本计数逻辑为：执行机slave执行的测试脚本是由调度机master分发的，故每台执行机执行的测试脚本都是相同的。\n\n      故而**性能测试总样本数=测试脚本样本数x执行机总数**，而**测试脚本样本数为线程数x循环次数**\n\n      以上就是使用JMeter分布式测试的全部过程。\n\n## 4.**Linux系统作为控制机**\n\n步骤和windows系统作为控制机操作基本相同。\n\n我们需要先把编辑好的JMeter测试脚本，上传到Linux系统的控制机中。\n\n说明：\n\n- 因为我们配置了JMeter的环境变量，所以可以在任何目录中执行JMeter命令。\n- JMeter测试脚本可以放在任何目录中来执行，不一定非要放在bin目录中。\n- JMeter测试脚本只需要上传到控制机中，其他执行机上可以不放JMeter脚本，因为控制机启动后会拷贝本地的.jmx脚本文件，到远程执行机上。\n- 但如果有用到测试数据，就必须把测试数据文件放到slave机器上去。\n\n我把JMeter测试脚本上传到tmp目录中，主要是找个空闲的目录进行演示。\n\n- /tmp/jmeterscript：存放JMeter脚本。\n- /tmp/jmeterlog：存放JMeter日志。\n- /tmp/result：存放测试运行结果。\n- /tmp/resultforHTML： 存放HTML图形化报表。\n\n在任何路径下执行如下命令即可：\n\n```shell\njmeter -n -t/tmp/jmeterscript/CLI_test.jmx -r -l /tmp/result/result.jtl -j /tmp/jmeterlog/test.log -e -o /tmp/resultforHTML/tableResult\n```\n\n提示：\n\n我开始使用三台Linux虚拟机进行操作，使用其中一台做控制机，其他两台做执行机。然后我用Windows系统做控制机，起三台Linux虚拟机做执行机，发现都不成功。\n\n这是因为都是在我本地的一台机器上启动的这些测试机。因为网卡的识别问题，造成启动jmeter-server服务识别的控制机的网卡不对，控制机始终收不到执行机返回的结果。\n\n而我在另一台电脑中启动所有的执行机，把控制机的虚拟网卡禁用掉，就能成功进行分布式测试。\n\n不过不用担心，在实际的工作中，公司会有很多的云服务器，不太会遇到这样的情况。\n\n这里就简单的描述一下，后面我会总结，我学习JMeter分布式测试中，遇到的所有的坑。\n\n## 5.分布式测试总结\n\n对分布式测试而言，测试过程是一种对流程控制要求很高的活动，因此系统需要适时地获得全局状态以正确地指导流程。其次在测试过程中，系统要能够方便地监视和操控测试过程。因此分布式测试系统适合采用集中式的分布式策略，即，由一台中心计算机控制若干台受控计算机的执行，整个测试过程和资源管理由中心来完成，它掌握整个分布式测试环境的状态，从而发出控制命令。\n\n提示：\n\n在进行分布式测试的时候，尽量使用Linux系统，因为测试结果的影响更少。\n\n最后在配一个JMeter分布式测试架构图：\n\n{%asset_img 07-21-23-150713.png%}\n\n\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n\n","slug":"JMeter分布式测试","published":1,"updated":"2023-09-21T07:11:33.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4nop000gfw488pt173fa","content":"<h2 id=\"JMeter分布式测试\"><a href=\"#JMeter分布式测试\" class=\"headerlink\" title=\"JMeter分布式测试\"></a><strong>JMeter分布式测试</strong></h2><h2 id=\"1-JMeter分布式测试概念\"><a href=\"#1-JMeter分布式测试概念\" class=\"headerlink\" title=\"1.JMeter分布式测试概念\"></a>1.<strong>JMeter分布式测试概念</strong></h2><ol>\n<li><p><strong>什么是分布式测试</strong></p>\n<p>分布式测试是指通过局域网和internet，把分布于不同地点、独立完成特定功能的测试计算机连接起来，以达到测试资源共享、分散操作、集中管理、协同工作、负载均衡、测试过程监控等目的的计算机网络测试。</p>\n<p>即：由多台电脑共同完成一个测试计划的执行，我们称这种测试的方式为分布式测试。换句话说，也就是一个人干不了，就多叫几个人一起干。</p>\n</li>\n<li><p><strong>为什么要使用分布式测试</strong></p>\n<p>在工作中使用JMeter做大并发压力测试的场景下，需要模拟成百上千的用户并发，这样使用单台机器模拟所有的并发用户就有些力不从心。</p>\n<p>因为单机受限内存、CPU、网络IO等，会出现被服务器压力还没有上去，但是执行压测的服务器已经由于模拟的压力太大而宕机了。</p>\n<p>为了让JMeter工具能够提供更强大的负载能力，JMeter提供了多台机器同时产生负载的机制，也就是我们所说的分布式的执行方式。</p>\n<p>即：JMeter的集群模式可以让我们将多台机器联合起来一起产生负载，从而弥补单台机器负载生成能力不足的问题。</p>\n<p>JMeter自身的局限性总结：</p>\n<ul>\n<li>由于一台电脑的CPU、内存有限、无法满足更高的测试要求。一台压力机中的JMeter，默认最大支持1000左右的并发用户数（线程数），再大的话，容易造成卡顿、无响应等情况。</li>\n<li>由于JMeter是Java应用，对CPU和内存的消耗较大，在需要模拟大量并发用户数时，单机很容易出现Java内存溢出的错误，导致测试脚本本身就有瓶颈。</li>\n</ul>\n</li>\n<li><p><strong>JMeter分布式测试原理</strong></p>\n<ol>\n<li>一台电脑作为控制机（Controller、master），其它电脑做为执行机（Agent、slave）。</li>\n<li>JMeter脚本执行时，控制机会把脚本发送到每台执行机上，执行机拿到脚本后就开始执行。</li>\n<li>在执行机中执行脚本时，不需要启动JMeter工具界面，可以理解它是通过命令行模式执行的。</li>\n<li>执行完成后，执行机会把结果回传给控制机，控制机会收集所有执行机的信息并汇总。</li>\n</ol>\n<p>JMeter分布式测试架构图如下：</p>\n</li>\n</ol>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/40-21-23-144055.png\" class>\n\n<p>说明：</p>\n<p>假设我们的测试计划会产生100个threads，我们使用8台机器进行分布式测试的时候，一共会产生100*8&#x3D;800的负载。</p>\n<h2 id=\"2-JMeter分布式测试前提条件\"><a href=\"#2-JMeter分布式测试前提条件\" class=\"headerlink\" title=\"2.JMeter分布式测试前提条件\"></a>2.JMeter分布式测试前提条件</h2><p>所有机器，包括master和slave机器：</p>\n<ol>\n<li><p>运行相同版本的JMeter。</p>\n</li>\n<li><p>使用相同版本的Java环境，即JDK。</p>\n</li>\n<li><p>所有机器都要在一个网格中。即：同一局域网中，也就是同一网段中。</p>\n</li>\n<li><p>有基于SSL的RMI的有效密钥库，或者禁用SSL。（本文举例中都是采取的禁用SSL）</p>\n<p>即：在jmeter.properties配置文件中，配置server.rmi.ssl.disable&#x3D;true。</p>\n</li>\n<li><p>关闭防火墙，尤其是Linux系统。</p>\n<p>提示：</p>\n<ul>\n<li>Agent机器上可以不放JMeter的脚本，但如果有用到测试数据，就必须把测试数据放到Agent机器上去。</li>\n<li>Controller和Agent机器上最好装有相同版本的JDK和JMeter，并配置好环境变量。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"3-JMeter实现分布式测试\"><a href=\"#3-JMeter实现分布式测试\" class=\"headerlink\" title=\"3.JMeter实现分布式测试\"></a>3.JMeter实现分布式测试</h2><p><strong>环境说明：</strong></p>\n<ul>\n<li><p>准备四台电脑：</p>\n<p>两台Windows系统的电脑：192.168.1.101、192.168.1.102</p>\n<p>两台Linux系统电脑：192.168.1.103、192.168.1.104</p>\n</li>\n<li><p>Java环境：JDK1.8</p>\n</li>\n<li><p>JMeter版本：5.4.1</p>\n</li>\n</ul>\n<p>提示：</p>\n<ul>\n<li>设定192.168.1.101为控制机（Controller、master）。</li>\n<li>设置192.168.1.102、192.168.1.103、192.168.1.104为执行机（Agent、slave）。</li>\n</ul>\n<ol>\n<li><p><strong>在执行机中的配置</strong></p>\n<p>修改JMeter的bin目录中jmeter.properties文件。</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">remote_hosts</span>=<span class=\"string\">127.0.0.1</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span>=<span class=\"string\">1099</span></span><br><span class=\"line\"><span class=\"comment\">#禁用ssl</span></span><br><span class=\"line\"><span class=\"attr\">server.rmi.ssl.disable</span>=<span class=\"string\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144110.png\" class>\n\n<p>提示：Linux系统中，在VIM编辑使用末行命令&#x2F;，可以搜索目录文本的位置。（后面不再重复说明了）</p>\n<p>三台执行机都进行如上的配置：</p>\n<ul>\n<li>192.168.1.102：remote_hosts：127.0.0.1、server_port:1099</li>\n<li>192.168.1.103:  remote_hosts:    127.0.0.1、server_port:1099</li>\n<li>192.168.1.104：remote_hosts:    127.0.0.1、server_port:1099</li>\n</ul>\n</li>\n<li><p><strong>在控制机中的配置</strong></p>\n<p>修改JMeter的bin目录中jmeter.properties文件。</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置slaves机器的ip和端口</span></span><br><span class=\"line\"><span class=\"attr\">remote_hosts</span>=<span class=\"string\">192.168.1.102:1099,192.168.1.103:1099,192.168.1.104:1099</span></span><br><span class=\"line\"><span class=\"comment\">#禁用ssl</span></span><br><span class=\"line\"><span class=\"attr\">server.rmi.ssl.disable</span>=<span class=\"string\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144117.png\" class>\n\n<p>提示：不同压力和端口可以不一样，不需要全部都一致。</p>\n<p>如果控制机也需要作为测试机，配置如下：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置slaves机器的ip和端口</span></span><br><span class=\"line\"><span class=\"attr\">remote_hosts</span>=<span class=\"string\">192.168.1.102:1099,192.168.1.103:1099,192.168.104:1099,192.168.1.101:1099</span></span><br><span class=\"line\"><span class=\"comment\">#向外暴露的端口</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span>=<span class=\"string\">1099</span></span><br><span class=\"line\"><span class=\"comment\">#禁用ssl</span></span><br><span class=\"line\"><span class=\"attr\">server.rmi.ssl.disable</span>=<span class=\"string\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>启动执行机中的JMeter服务</strong></p>\n<p>我们在所有需要执行JMeter脚本的执行机上，启动jmeter-server服务。</p>\n<p>进入到JMeter安装路径的bin目录中，执行命令：.&#x2F;jmerter-serve或双击jmeter-server.bat。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144128.png\" class>\n\n<p>提示：</p>\n<ul>\n<li>在Windows系统中，是直接启动bin\\jmeter-server.bat文件。</li>\n<li>如果控制机也需要执行测试，同样也需要启动jmeter-server服务。</li>\n</ul>\n<p>执行机中执行测试计划会出现Starting  the  test 和 Finished  the  test字样。</p>\n<p>如下所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144140.png\" class>\n</li>\n<li><p>在控制机中执行JMeter测试脚本</p>\n<p>因为我的控制机是一台Windows系统的电脑，我们可以使用GUI的方式进行演示。</p>\n<ol>\n<li><p>我们先来使用一台远程执行机执行我们的本地脚本。</p>\n<p>在JMeter中操作：运行-&gt;远程启动-&gt;选择一个远程执行机，则控制机中的脚本，会自动传送到远程执行机上进行运行。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144146.png\" class>\n\n<p>提示：这里会显示所有remote_hosts添加的压力机</p>\n</li>\n</ol>\n<p>运行脚本完成，控制机中收到的结果如下所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144150.png\" class>\n\n<ol>\n<li><p>我们使用三台远程执行机执行我们的本地脚本。</p>\n<p>在JMeter中操作：运行-&gt;远程启动所有，如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144155.png\" class>\n\n<p>脚本运行完成，控制机会收到的结果如下所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/42-21-23-144200.png\" class>\n\n<p>我们可以看到，每台执行机执行50次请求，三台执行机就能生成出150个模拟用户的访问压力。</p>\n<p>说明：</p>\n<p><strong>分布测试总样本数&#x3D;线程数x循环次数x执行机总数。</strong></p>\n<p>样本计数逻辑为：执行机slave执行的测试脚本是由调度机master分发的，故每台执行机执行的测试脚本都是相同的。</p>\n<p>故而<strong>性能测试总样本数&#x3D;测试脚本样本数x执行机总数</strong>，而<strong>测试脚本样本数为线程数x循环次数</strong></p>\n<p>以上就是使用JMeter分布式测试的全部过程。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-Linux系统作为控制机\"><a href=\"#4-Linux系统作为控制机\" class=\"headerlink\" title=\"4.Linux系统作为控制机\"></a>4.<strong>Linux系统作为控制机</strong></h2><p>步骤和windows系统作为控制机操作基本相同。</p>\n<p>我们需要先把编辑好的JMeter测试脚本，上传到Linux系统的控制机中。</p>\n<p>说明：</p>\n<ul>\n<li>因为我们配置了JMeter的环境变量，所以可以在任何目录中执行JMeter命令。</li>\n<li>JMeter测试脚本可以放在任何目录中来执行，不一定非要放在bin目录中。</li>\n<li>JMeter测试脚本只需要上传到控制机中，其他执行机上可以不放JMeter脚本，因为控制机启动后会拷贝本地的.jmx脚本文件，到远程执行机上。</li>\n<li>但如果有用到测试数据，就必须把测试数据文件放到slave机器上去。</li>\n</ul>\n<p>我把JMeter测试脚本上传到tmp目录中，主要是找个空闲的目录进行演示。</p>\n<ul>\n<li>&#x2F;tmp&#x2F;jmeterscript：存放JMeter脚本。</li>\n<li>&#x2F;tmp&#x2F;jmeterlog：存放JMeter日志。</li>\n<li>&#x2F;tmp&#x2F;result：存放测试运行结果。</li>\n<li>&#x2F;tmp&#x2F;resultforHTML： 存放HTML图形化报表。</li>\n</ul>\n<p>在任何路径下执行如下命令即可：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jmeter -n -t/tmp/jmeterscript/CLI_test.jmx -r -l /tmp/result/result.jtl -j /tmp/jmeterlog/test.log -e -o /tmp/resultforHTML/tableResult</span><br></pre></td></tr></table></figure>\n\n<p>提示：</p>\n<p>我开始使用三台Linux虚拟机进行操作，使用其中一台做控制机，其他两台做执行机。然后我用Windows系统做控制机，起三台Linux虚拟机做执行机，发现都不成功。</p>\n<p>这是因为都是在我本地的一台机器上启动的这些测试机。因为网卡的识别问题，造成启动jmeter-server服务识别的控制机的网卡不对，控制机始终收不到执行机返回的结果。</p>\n<p>而我在另一台电脑中启动所有的执行机，把控制机的虚拟网卡禁用掉，就能成功进行分布式测试。</p>\n<p>不过不用担心，在实际的工作中，公司会有很多的云服务器，不太会遇到这样的情况。</p>\n<p>这里就简单的描述一下，后面我会总结，我学习JMeter分布式测试中，遇到的所有的坑。</p>\n<h2 id=\"5-分布式测试总结\"><a href=\"#5-分布式测试总结\" class=\"headerlink\" title=\"5.分布式测试总结\"></a>5.分布式测试总结</h2><p>对分布式测试而言，测试过程是一种对流程控制要求很高的活动，因此系统需要适时地获得全局状态以正确地指导流程。其次在测试过程中，系统要能够方便地监视和操控测试过程。因此分布式测试系统适合采用集中式的分布式策略，即，由一台中心计算机控制若干台受控计算机的执行，整个测试过程和资源管理由中心来完成，它掌握整个分布式测试环境的状态，从而发出控制命令。</p>\n<p>提示：</p>\n<p>在进行分布式测试的时候，尽量使用Linux系统，因为测试结果的影响更少。</p>\n<p>最后在配一个JMeter分布式测试架构图：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/07-21-23-150713.png\" class>\n\n\n\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"JMeter分布式测试\"><a href=\"#JMeter分布式测试\" class=\"headerlink\" title=\"JMeter分布式测试\"></a><strong>JMeter分布式测试</strong></h2><h2 id=\"1-JMeter分布式测试概念\"><a href=\"#1-JMeter分布式测试概念\" class=\"headerlink\" title=\"1.JMeter分布式测试概念\"></a>1.<strong>JMeter分布式测试概念</strong></h2><ol>\n<li><p><strong>什么是分布式测试</strong></p>\n<p>分布式测试是指通过局域网和internet，把分布于不同地点、独立完成特定功能的测试计算机连接起来，以达到测试资源共享、分散操作、集中管理、协同工作、负载均衡、测试过程监控等目的的计算机网络测试。</p>\n<p>即：由多台电脑共同完成一个测试计划的执行，我们称这种测试的方式为分布式测试。换句话说，也就是一个人干不了，就多叫几个人一起干。</p>\n</li>\n<li><p><strong>为什么要使用分布式测试</strong></p>\n<p>在工作中使用JMeter做大并发压力测试的场景下，需要模拟成百上千的用户并发，这样使用单台机器模拟所有的并发用户就有些力不从心。</p>\n<p>因为单机受限内存、CPU、网络IO等，会出现被服务器压力还没有上去，但是执行压测的服务器已经由于模拟的压力太大而宕机了。</p>\n<p>为了让JMeter工具能够提供更强大的负载能力，JMeter提供了多台机器同时产生负载的机制，也就是我们所说的分布式的执行方式。</p>\n<p>即：JMeter的集群模式可以让我们将多台机器联合起来一起产生负载，从而弥补单台机器负载生成能力不足的问题。</p>\n<p>JMeter自身的局限性总结：</p>\n<ul>\n<li>由于一台电脑的CPU、内存有限、无法满足更高的测试要求。一台压力机中的JMeter，默认最大支持1000左右的并发用户数（线程数），再大的话，容易造成卡顿、无响应等情况。</li>\n<li>由于JMeter是Java应用，对CPU和内存的消耗较大，在需要模拟大量并发用户数时，单机很容易出现Java内存溢出的错误，导致测试脚本本身就有瓶颈。</li>\n</ul>\n</li>\n<li><p><strong>JMeter分布式测试原理</strong></p>\n<ol>\n<li>一台电脑作为控制机（Controller、master），其它电脑做为执行机（Agent、slave）。</li>\n<li>JMeter脚本执行时，控制机会把脚本发送到每台执行机上，执行机拿到脚本后就开始执行。</li>\n<li>在执行机中执行脚本时，不需要启动JMeter工具界面，可以理解它是通过命令行模式执行的。</li>\n<li>执行完成后，执行机会把结果回传给控制机，控制机会收集所有执行机的信息并汇总。</li>\n</ol>\n<p>JMeter分布式测试架构图如下：</p>\n</li>\n</ol>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/40-21-23-144055.png\" class>\n\n<p>说明：</p>\n<p>假设我们的测试计划会产生100个threads，我们使用8台机器进行分布式测试的时候，一共会产生100*8&#x3D;800的负载。</p>\n<h2 id=\"2-JMeter分布式测试前提条件\"><a href=\"#2-JMeter分布式测试前提条件\" class=\"headerlink\" title=\"2.JMeter分布式测试前提条件\"></a>2.JMeter分布式测试前提条件</h2><p>所有机器，包括master和slave机器：</p>\n<ol>\n<li><p>运行相同版本的JMeter。</p>\n</li>\n<li><p>使用相同版本的Java环境，即JDK。</p>\n</li>\n<li><p>所有机器都要在一个网格中。即：同一局域网中，也就是同一网段中。</p>\n</li>\n<li><p>有基于SSL的RMI的有效密钥库，或者禁用SSL。（本文举例中都是采取的禁用SSL）</p>\n<p>即：在jmeter.properties配置文件中，配置server.rmi.ssl.disable&#x3D;true。</p>\n</li>\n<li><p>关闭防火墙，尤其是Linux系统。</p>\n<p>提示：</p>\n<ul>\n<li>Agent机器上可以不放JMeter的脚本，但如果有用到测试数据，就必须把测试数据放到Agent机器上去。</li>\n<li>Controller和Agent机器上最好装有相同版本的JDK和JMeter，并配置好环境变量。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"3-JMeter实现分布式测试\"><a href=\"#3-JMeter实现分布式测试\" class=\"headerlink\" title=\"3.JMeter实现分布式测试\"></a>3.JMeter实现分布式测试</h2><p><strong>环境说明：</strong></p>\n<ul>\n<li><p>准备四台电脑：</p>\n<p>两台Windows系统的电脑：192.168.1.101、192.168.1.102</p>\n<p>两台Linux系统电脑：192.168.1.103、192.168.1.104</p>\n</li>\n<li><p>Java环境：JDK1.8</p>\n</li>\n<li><p>JMeter版本：5.4.1</p>\n</li>\n</ul>\n<p>提示：</p>\n<ul>\n<li>设定192.168.1.101为控制机（Controller、master）。</li>\n<li>设置192.168.1.102、192.168.1.103、192.168.1.104为执行机（Agent、slave）。</li>\n</ul>\n<ol>\n<li><p><strong>在执行机中的配置</strong></p>\n<p>修改JMeter的bin目录中jmeter.properties文件。</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">remote_hosts</span>=<span class=\"string\">127.0.0.1</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span>=<span class=\"string\">1099</span></span><br><span class=\"line\"><span class=\"comment\">#禁用ssl</span></span><br><span class=\"line\"><span class=\"attr\">server.rmi.ssl.disable</span>=<span class=\"string\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144110.png\" class>\n\n<p>提示：Linux系统中，在VIM编辑使用末行命令&#x2F;，可以搜索目录文本的位置。（后面不再重复说明了）</p>\n<p>三台执行机都进行如上的配置：</p>\n<ul>\n<li>192.168.1.102：remote_hosts：127.0.0.1、server_port:1099</li>\n<li>192.168.1.103:  remote_hosts:    127.0.0.1、server_port:1099</li>\n<li>192.168.1.104：remote_hosts:    127.0.0.1、server_port:1099</li>\n</ul>\n</li>\n<li><p><strong>在控制机中的配置</strong></p>\n<p>修改JMeter的bin目录中jmeter.properties文件。</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置slaves机器的ip和端口</span></span><br><span class=\"line\"><span class=\"attr\">remote_hosts</span>=<span class=\"string\">192.168.1.102:1099,192.168.1.103:1099,192.168.1.104:1099</span></span><br><span class=\"line\"><span class=\"comment\">#禁用ssl</span></span><br><span class=\"line\"><span class=\"attr\">server.rmi.ssl.disable</span>=<span class=\"string\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144117.png\" class>\n\n<p>提示：不同压力和端口可以不一样，不需要全部都一致。</p>\n<p>如果控制机也需要作为测试机，配置如下：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#配置slaves机器的ip和端口</span></span><br><span class=\"line\"><span class=\"attr\">remote_hosts</span>=<span class=\"string\">192.168.1.102:1099,192.168.1.103:1099,192.168.104:1099,192.168.1.101:1099</span></span><br><span class=\"line\"><span class=\"comment\">#向外暴露的端口</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span>=<span class=\"string\">1099</span></span><br><span class=\"line\"><span class=\"comment\">#禁用ssl</span></span><br><span class=\"line\"><span class=\"attr\">server.rmi.ssl.disable</span>=<span class=\"string\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>启动执行机中的JMeter服务</strong></p>\n<p>我们在所有需要执行JMeter脚本的执行机上，启动jmeter-server服务。</p>\n<p>进入到JMeter安装路径的bin目录中，执行命令：.&#x2F;jmerter-serve或双击jmeter-server.bat。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144128.png\" class>\n\n<p>提示：</p>\n<ul>\n<li>在Windows系统中，是直接启动bin\\jmeter-server.bat文件。</li>\n<li>如果控制机也需要执行测试，同样也需要启动jmeter-server服务。</li>\n</ul>\n<p>执行机中执行测试计划会出现Starting  the  test 和 Finished  the  test字样。</p>\n<p>如下所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144140.png\" class>\n</li>\n<li><p>在控制机中执行JMeter测试脚本</p>\n<p>因为我的控制机是一台Windows系统的电脑，我们可以使用GUI的方式进行演示。</p>\n<ol>\n<li><p>我们先来使用一台远程执行机执行我们的本地脚本。</p>\n<p>在JMeter中操作：运行-&gt;远程启动-&gt;选择一个远程执行机，则控制机中的脚本，会自动传送到远程执行机上进行运行。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144146.png\" class>\n\n<p>提示：这里会显示所有remote_hosts添加的压力机</p>\n</li>\n</ol>\n<p>运行脚本完成，控制机中收到的结果如下所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144150.png\" class>\n\n<ol>\n<li><p>我们使用三台远程执行机执行我们的本地脚本。</p>\n<p>在JMeter中操作：运行-&gt;远程启动所有，如下图所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/41-21-23-144155.png\" class>\n\n<p>脚本运行完成，控制机会收到的结果如下所示：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/42-21-23-144200.png\" class>\n\n<p>我们可以看到，每台执行机执行50次请求，三台执行机就能生成出150个模拟用户的访问压力。</p>\n<p>说明：</p>\n<p><strong>分布测试总样本数&#x3D;线程数x循环次数x执行机总数。</strong></p>\n<p>样本计数逻辑为：执行机slave执行的测试脚本是由调度机master分发的，故每台执行机执行的测试脚本都是相同的。</p>\n<p>故而<strong>性能测试总样本数&#x3D;测试脚本样本数x执行机总数</strong>，而<strong>测试脚本样本数为线程数x循环次数</strong></p>\n<p>以上就是使用JMeter分布式测试的全部过程。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-Linux系统作为控制机\"><a href=\"#4-Linux系统作为控制机\" class=\"headerlink\" title=\"4.Linux系统作为控制机\"></a>4.<strong>Linux系统作为控制机</strong></h2><p>步骤和windows系统作为控制机操作基本相同。</p>\n<p>我们需要先把编辑好的JMeter测试脚本，上传到Linux系统的控制机中。</p>\n<p>说明：</p>\n<ul>\n<li>因为我们配置了JMeter的环境变量，所以可以在任何目录中执行JMeter命令。</li>\n<li>JMeter测试脚本可以放在任何目录中来执行，不一定非要放在bin目录中。</li>\n<li>JMeter测试脚本只需要上传到控制机中，其他执行机上可以不放JMeter脚本，因为控制机启动后会拷贝本地的.jmx脚本文件，到远程执行机上。</li>\n<li>但如果有用到测试数据，就必须把测试数据文件放到slave机器上去。</li>\n</ul>\n<p>我把JMeter测试脚本上传到tmp目录中，主要是找个空闲的目录进行演示。</p>\n<ul>\n<li>&#x2F;tmp&#x2F;jmeterscript：存放JMeter脚本。</li>\n<li>&#x2F;tmp&#x2F;jmeterlog：存放JMeter日志。</li>\n<li>&#x2F;tmp&#x2F;result：存放测试运行结果。</li>\n<li>&#x2F;tmp&#x2F;resultforHTML： 存放HTML图形化报表。</li>\n</ul>\n<p>在任何路径下执行如下命令即可：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jmeter -n -t/tmp/jmeterscript/CLI_test.jmx -r -l /tmp/result/result.jtl -j /tmp/jmeterlog/test.log -e -o /tmp/resultforHTML/tableResult</span><br></pre></td></tr></table></figure>\n\n<p>提示：</p>\n<p>我开始使用三台Linux虚拟机进行操作，使用其中一台做控制机，其他两台做执行机。然后我用Windows系统做控制机，起三台Linux虚拟机做执行机，发现都不成功。</p>\n<p>这是因为都是在我本地的一台机器上启动的这些测试机。因为网卡的识别问题，造成启动jmeter-server服务识别的控制机的网卡不对，控制机始终收不到执行机返回的结果。</p>\n<p>而我在另一台电脑中启动所有的执行机，把控制机的虚拟网卡禁用掉，就能成功进行分布式测试。</p>\n<p>不过不用担心，在实际的工作中，公司会有很多的云服务器，不太会遇到这样的情况。</p>\n<p>这里就简单的描述一下，后面我会总结，我学习JMeter分布式测试中，遇到的所有的坑。</p>\n<h2 id=\"5-分布式测试总结\"><a href=\"#5-分布式测试总结\" class=\"headerlink\" title=\"5.分布式测试总结\"></a>5.分布式测试总结</h2><p>对分布式测试而言，测试过程是一种对流程控制要求很高的活动，因此系统需要适时地获得全局状态以正确地指导流程。其次在测试过程中，系统要能够方便地监视和操控测试过程。因此分布式测试系统适合采用集中式的分布式策略，即，由一台中心计算机控制若干台受控计算机的执行，整个测试过程和资源管理由中心来完成，它掌握整个分布式测试环境的状态，从而发出控制命令。</p>\n<p>提示：</p>\n<p>在进行分布式测试的时候，尽量使用Linux系统，因为测试结果的影响更少。</p>\n<p>最后在配一个JMeter分布式测试架构图：</p>\n<img src=\"/2023/09/21/JMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95/07-21-23-150713.png\" class>\n\n\n\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"1.JMeter介绍","date":"2023-08-30T05:12:46.000Z","cover":"https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png","_content":"\n## 压力测试工具-JMeter\n\n\n\n#### 1. 什么是JMeter\n\n- Apache JMeter是Apache组织开发的基于Java的压力测试工具，用于对软件做压力测试。它最初被设计用于Web应用测试，但后来扩展到其他测试领域。（Apache JMeter是100%纯JAVA桌面应用程序）\n- Apache JMeter可以用于对静态和动态资源（如：文件、Servlet、Perl脚本、java对象、数据库和查询、FTP服务器等待）进行性能测试。\n- JMeter可以用于对服务器、网络或对象模拟巨大的负载、通过不同压力类别，测试它们的强度和分析整体性能、并可以使用它做性能的图形分析。\n- JMeter能够对应用程序做功能/回归测试，通过创建带有断言的脚本来验证你的程序是否返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。\n- JMeter是一个开源的工具，在使用的过程中，如果需要使用更多功能，就需要安装相应的插件。\n\n总结:JMeter做什么\n\n- 接口测试\n\n- 性能测试：程序的算法\n\n- 压力测试：外在负载\n\n- 数据库测试\n\n- java程序测试\n\n- FTP服务器测试\n\n  （前面四个用的比较多）\n\n#### 2.为什么使用JMeter\n\nJMeter优势如下：\n\n{% asset_img  18-30-23-131804.png %}\n\n\n\n- **开源：**JMeter完全免费，允许开发者使用源代码进行二次开发。\n- **友好的GUI：**JMeter使用起来非常容易，不需要花时间熟悉。\n- **平台独立：**JMeter是100%纯Java桌面应用程序，所以可以多平台运行。\n- **完全多线程框架：**JMeter允许通过多个线程并发取样和通知单独的线程组对不同的功能同时取样。\n- **可视化的测试结果：**测试结果可以用不同的报表显示，如：图表、表格、树和日志文件\n- **安装方便：**你不用安装，只需复制并打开*.bat文件运行JMeter。（轻量级）\n- **高度扩展：**你可以编写你自己的测试，JMeter还支持可视化插件，允许您的扩展您的测试。\n- **多测试策略：**JMeter支持多个测试策略，如：负载测试、分布式测试和功能测试。\n- **仿真：**JMeter可以模拟多用户并发线程，创建一个沉重的负担对web应用程序，创建一个沉重的负担对web应用程序测试下。\n- 支持多协议：JMeter不仅测试支持web应用程序，还可以评估数据库服务器的性能。JMeter基本支持所有的协议（如：HTTP、JDBC、LDAP、SOAP、JMS和FTP）。\n- **录制和回放：**录制用户在浏览器和web应用程序的记录、使用JMeter进行模拟。\n- **脚本测试：**JMeter可以集成Bean Shell和Selenium自动化测试。\n\n#### 3.JMeter的缺点：\n\n- 使用JMeter无法验证JS程序，也无法验证页面UI，所有必须要和Selenium配合来完成Web2.0应用的测试。（配合的意思就是在验证页面或者JS程序的时候，使用Selenium。并不是结合的意思，是单独使用。）\n- JMeter不支持IP欺骗\n- JMeter的测试脚本和结果基本都是本地管理，不支持版本控制管理。\n\n#### 4.JMeter对比loadrunner\n\nJMeter的架构跟loadrunner原理一样，都是通过中间代理，监控&收集并发客户端发现的指令，把他们生成脚本，再发送到应服务器，再监控服务器反馈的结果的一个过程。\n\n- JMeter安装简单，LoadRunner安装麻烦。\n- JMeter组件小，LoadRunner占用空间比较大。\n- JMeter不支持IP欺骗，LoadRunner支持。\n- 脚本录制功能两者都支持。\n- JMeter支持报表，但分析能力不足。LoadRunner支持报表，数据完成，界面漂亮。\n- JMeter是开源的（免费），LoadRunner是商业软件，需要收费。\n- JMeter易用性更强，JMeter的脚本修改，主要是对JMeter中各个部件的熟悉程度，已经相关的一些协议的掌握情况，而不依赖于编程。\n- LoadRunner除了复杂的场景设置外，还需要掌握函数和修改脚本（如果单单只会录制脚本，并不叫性能测试哦~）。\n\n总结如下表：\n\n------\n\n​\t\t\t\t\t\t\t\t\t\t\t\tJMeter\t\t\t\t\t\t\t\t\t\t\t\tLoadRunner\n\n------\n\n​\t\t\t安装\t\t\t\t简单，下载解压即可\t\t\t\t复杂，安装包大于1GB，依赖\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t比较强，安装时间长（大约1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t小时）\n\n------\n\n 录制/回放模式             \t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\t\t\t\n\n------\n\n​\t测试协议\t\t\t\t偏少，用户可自行扩展\t\t\t\t\t\t\t较多，不可扩展\n\n------\n\n分布式大规模\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持、\t\t\t\n\n​     压力测试\n\n------\n\n  IP欺骗功能  \t\t\t\t\t\t不支持\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n​\t图形报表\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n测试逻辑控制\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n监控服务器资源\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n功能测试\t\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","source":"_posts/JMeter学习.md","raw":"---\ntitle: 1.JMeter介绍\ndate: 2023-08-30 13:12:46\ntags:\n   - JMeter\ncategories:\n   - JMeter学习 \ncover: https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png\n---\n\n## 压力测试工具-JMeter\n\n\n\n#### 1. 什么是JMeter\n\n- Apache JMeter是Apache组织开发的基于Java的压力测试工具，用于对软件做压力测试。它最初被设计用于Web应用测试，但后来扩展到其他测试领域。（Apache JMeter是100%纯JAVA桌面应用程序）\n- Apache JMeter可以用于对静态和动态资源（如：文件、Servlet、Perl脚本、java对象、数据库和查询、FTP服务器等待）进行性能测试。\n- JMeter可以用于对服务器、网络或对象模拟巨大的负载、通过不同压力类别，测试它们的强度和分析整体性能、并可以使用它做性能的图形分析。\n- JMeter能够对应用程序做功能/回归测试，通过创建带有断言的脚本来验证你的程序是否返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。\n- JMeter是一个开源的工具，在使用的过程中，如果需要使用更多功能，就需要安装相应的插件。\n\n总结:JMeter做什么\n\n- 接口测试\n\n- 性能测试：程序的算法\n\n- 压力测试：外在负载\n\n- 数据库测试\n\n- java程序测试\n\n- FTP服务器测试\n\n  （前面四个用的比较多）\n\n#### 2.为什么使用JMeter\n\nJMeter优势如下：\n\n{% asset_img  18-30-23-131804.png %}\n\n\n\n- **开源：**JMeter完全免费，允许开发者使用源代码进行二次开发。\n- **友好的GUI：**JMeter使用起来非常容易，不需要花时间熟悉。\n- **平台独立：**JMeter是100%纯Java桌面应用程序，所以可以多平台运行。\n- **完全多线程框架：**JMeter允许通过多个线程并发取样和通知单独的线程组对不同的功能同时取样。\n- **可视化的测试结果：**测试结果可以用不同的报表显示，如：图表、表格、树和日志文件\n- **安装方便：**你不用安装，只需复制并打开*.bat文件运行JMeter。（轻量级）\n- **高度扩展：**你可以编写你自己的测试，JMeter还支持可视化插件，允许您的扩展您的测试。\n- **多测试策略：**JMeter支持多个测试策略，如：负载测试、分布式测试和功能测试。\n- **仿真：**JMeter可以模拟多用户并发线程，创建一个沉重的负担对web应用程序，创建一个沉重的负担对web应用程序测试下。\n- 支持多协议：JMeter不仅测试支持web应用程序，还可以评估数据库服务器的性能。JMeter基本支持所有的协议（如：HTTP、JDBC、LDAP、SOAP、JMS和FTP）。\n- **录制和回放：**录制用户在浏览器和web应用程序的记录、使用JMeter进行模拟。\n- **脚本测试：**JMeter可以集成Bean Shell和Selenium自动化测试。\n\n#### 3.JMeter的缺点：\n\n- 使用JMeter无法验证JS程序，也无法验证页面UI，所有必须要和Selenium配合来完成Web2.0应用的测试。（配合的意思就是在验证页面或者JS程序的时候，使用Selenium。并不是结合的意思，是单独使用。）\n- JMeter不支持IP欺骗\n- JMeter的测试脚本和结果基本都是本地管理，不支持版本控制管理。\n\n#### 4.JMeter对比loadrunner\n\nJMeter的架构跟loadrunner原理一样，都是通过中间代理，监控&收集并发客户端发现的指令，把他们生成脚本，再发送到应服务器，再监控服务器反馈的结果的一个过程。\n\n- JMeter安装简单，LoadRunner安装麻烦。\n- JMeter组件小，LoadRunner占用空间比较大。\n- JMeter不支持IP欺骗，LoadRunner支持。\n- 脚本录制功能两者都支持。\n- JMeter支持报表，但分析能力不足。LoadRunner支持报表，数据完成，界面漂亮。\n- JMeter是开源的（免费），LoadRunner是商业软件，需要收费。\n- JMeter易用性更强，JMeter的脚本修改，主要是对JMeter中各个部件的熟悉程度，已经相关的一些协议的掌握情况，而不依赖于编程。\n- LoadRunner除了复杂的场景设置外，还需要掌握函数和修改脚本（如果单单只会录制脚本，并不叫性能测试哦~）。\n\n总结如下表：\n\n------\n\n​\t\t\t\t\t\t\t\t\t\t\t\tJMeter\t\t\t\t\t\t\t\t\t\t\t\tLoadRunner\n\n------\n\n​\t\t\t安装\t\t\t\t简单，下载解压即可\t\t\t\t复杂，安装包大于1GB，依赖\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t比较强，安装时间长（大约1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t小时）\n\n------\n\n 录制/回放模式             \t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\t\t\t\n\n------\n\n​\t测试协议\t\t\t\t偏少，用户可自行扩展\t\t\t\t\t\t\t较多，不可扩展\n\n------\n\n分布式大规模\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持、\t\t\t\n\n​     压力测试\n\n------\n\n  IP欺骗功能  \t\t\t\t\t\t不支持\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n​\t图形报表\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n测试逻辑控制\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n监控服务器资源\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n功能测试\t\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\n\n------\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","slug":"JMeter学习","published":1,"updated":"2023-09-19T03:55:48.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4nos000ifw4844ka8xp5","content":"<h2 id=\"压力测试工具-JMeter\"><a href=\"#压力测试工具-JMeter\" class=\"headerlink\" title=\"压力测试工具-JMeter\"></a>压力测试工具-JMeter</h2><h4 id=\"1-什么是JMeter\"><a href=\"#1-什么是JMeter\" class=\"headerlink\" title=\"1. 什么是JMeter\"></a>1. 什么是JMeter</h4><ul>\n<li>Apache JMeter是Apache组织开发的基于Java的压力测试工具，用于对软件做压力测试。它最初被设计用于Web应用测试，但后来扩展到其他测试领域。（Apache JMeter是100%纯JAVA桌面应用程序）</li>\n<li>Apache JMeter可以用于对静态和动态资源（如：文件、Servlet、Perl脚本、java对象、数据库和查询、FTP服务器等待）进行性能测试。</li>\n<li>JMeter可以用于对服务器、网络或对象模拟巨大的负载、通过不同压力类别，测试它们的强度和分析整体性能、并可以使用它做性能的图形分析。</li>\n<li>JMeter能够对应用程序做功能&#x2F;回归测试，通过创建带有断言的脚本来验证你的程序是否返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。</li>\n<li>JMeter是一个开源的工具，在使用的过程中，如果需要使用更多功能，就需要安装相应的插件。</li>\n</ul>\n<p>总结:JMeter做什么</p>\n<ul>\n<li><p>接口测试</p>\n</li>\n<li><p>性能测试：程序的算法</p>\n</li>\n<li><p>压力测试：外在负载</p>\n</li>\n<li><p>数据库测试</p>\n</li>\n<li><p>java程序测试</p>\n</li>\n<li><p>FTP服务器测试</p>\n<p>（前面四个用的比较多）</p>\n</li>\n</ul>\n<h4 id=\"2-为什么使用JMeter\"><a href=\"#2-为什么使用JMeter\" class=\"headerlink\" title=\"2.为什么使用JMeter\"></a>2.为什么使用JMeter</h4><p>JMeter优势如下：</p>\n<img src=\"/2023/08/30/JMeter%E5%AD%A6%E4%B9%A0/18-30-23-131804.png\" class>\n\n\n\n<ul>\n<li><strong>开源：</strong>JMeter完全免费，允许开发者使用源代码进行二次开发。</li>\n<li><strong>友好的GUI：</strong>JMeter使用起来非常容易，不需要花时间熟悉。</li>\n<li><strong>平台独立：</strong>JMeter是100%纯Java桌面应用程序，所以可以多平台运行。</li>\n<li><strong>完全多线程框架：</strong>JMeter允许通过多个线程并发取样和通知单独的线程组对不同的功能同时取样。</li>\n<li><strong>可视化的测试结果：</strong>测试结果可以用不同的报表显示，如：图表、表格、树和日志文件</li>\n<li><strong>安装方便：</strong>你不用安装，只需复制并打开*.bat文件运行JMeter。（轻量级）</li>\n<li><strong>高度扩展：</strong>你可以编写你自己的测试，JMeter还支持可视化插件，允许您的扩展您的测试。</li>\n<li><strong>多测试策略：</strong>JMeter支持多个测试策略，如：负载测试、分布式测试和功能测试。</li>\n<li><strong>仿真：</strong>JMeter可以模拟多用户并发线程，创建一个沉重的负担对web应用程序，创建一个沉重的负担对web应用程序测试下。</li>\n<li>支持多协议：JMeter不仅测试支持web应用程序，还可以评估数据库服务器的性能。JMeter基本支持所有的协议（如：HTTP、JDBC、LDAP、SOAP、JMS和FTP）。</li>\n<li><strong>录制和回放：</strong>录制用户在浏览器和web应用程序的记录、使用JMeter进行模拟。</li>\n<li><strong>脚本测试：</strong>JMeter可以集成Bean Shell和Selenium自动化测试。</li>\n</ul>\n<h4 id=\"3-JMeter的缺点：\"><a href=\"#3-JMeter的缺点：\" class=\"headerlink\" title=\"3.JMeter的缺点：\"></a>3.JMeter的缺点：</h4><ul>\n<li>使用JMeter无法验证JS程序，也无法验证页面UI，所有必须要和Selenium配合来完成Web2.0应用的测试。（配合的意思就是在验证页面或者JS程序的时候，使用Selenium。并不是结合的意思，是单独使用。）</li>\n<li>JMeter不支持IP欺骗</li>\n<li>JMeter的测试脚本和结果基本都是本地管理，不支持版本控制管理。</li>\n</ul>\n<h4 id=\"4-JMeter对比loadrunner\"><a href=\"#4-JMeter对比loadrunner\" class=\"headerlink\" title=\"4.JMeter对比loadrunner\"></a>4.JMeter对比loadrunner</h4><p>JMeter的架构跟loadrunner原理一样，都是通过中间代理，监控&amp;收集并发客户端发现的指令，把他们生成脚本，再发送到应服务器，再监控服务器反馈的结果的一个过程。</p>\n<ul>\n<li>JMeter安装简单，LoadRunner安装麻烦。</li>\n<li>JMeter组件小，LoadRunner占用空间比较大。</li>\n<li>JMeter不支持IP欺骗，LoadRunner支持。</li>\n<li>脚本录制功能两者都支持。</li>\n<li>JMeter支持报表，但分析能力不足。LoadRunner支持报表，数据完成，界面漂亮。</li>\n<li>JMeter是开源的（免费），LoadRunner是商业软件，需要收费。</li>\n<li>JMeter易用性更强，JMeter的脚本修改，主要是对JMeter中各个部件的熟悉程度，已经相关的一些协议的掌握情况，而不依赖于编程。</li>\n<li>LoadRunner除了复杂的场景设置外，还需要掌握函数和修改脚本（如果单单只会录制脚本，并不叫性能测试哦~）。</li>\n</ul>\n<p>总结如下表：</p>\n<hr>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\tJMeter\t\t\t\t\t\t\t\t\t\t\t\tLoadRunner</p>\n<hr>\n<p>​\t\t\t安装\t\t\t\t简单，下载解压即可\t\t\t\t复杂，安装包大于1GB，依赖\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t比较强，安装时间长（大约1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t小时）</p>\n<hr>\n<p> 录制&#x2F;回放模式             \t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\t\t\t</p>\n<hr>\n<p>​\t测试协议\t\t\t\t偏少，用户可自行扩展\t\t\t\t\t\t\t较多，不可扩展</p>\n<hr>\n<p>分布式大规模\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持、\t\t\t</p>\n<p>​     压力测试</p>\n<hr>\n<p>  IP欺骗功能  \t\t\t\t\t\t不支持\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>​\t图形报表\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>测试逻辑控制\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>监控服务器资源\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>功能测试\t\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"压力测试工具-JMeter\"><a href=\"#压力测试工具-JMeter\" class=\"headerlink\" title=\"压力测试工具-JMeter\"></a>压力测试工具-JMeter</h2><h4 id=\"1-什么是JMeter\"><a href=\"#1-什么是JMeter\" class=\"headerlink\" title=\"1. 什么是JMeter\"></a>1. 什么是JMeter</h4><ul>\n<li>Apache JMeter是Apache组织开发的基于Java的压力测试工具，用于对软件做压力测试。它最初被设计用于Web应用测试，但后来扩展到其他测试领域。（Apache JMeter是100%纯JAVA桌面应用程序）</li>\n<li>Apache JMeter可以用于对静态和动态资源（如：文件、Servlet、Perl脚本、java对象、数据库和查询、FTP服务器等待）进行性能测试。</li>\n<li>JMeter可以用于对服务器、网络或对象模拟巨大的负载、通过不同压力类别，测试它们的强度和分析整体性能、并可以使用它做性能的图形分析。</li>\n<li>JMeter能够对应用程序做功能&#x2F;回归测试，通过创建带有断言的脚本来验证你的程序是否返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。</li>\n<li>JMeter是一个开源的工具，在使用的过程中，如果需要使用更多功能，就需要安装相应的插件。</li>\n</ul>\n<p>总结:JMeter做什么</p>\n<ul>\n<li><p>接口测试</p>\n</li>\n<li><p>性能测试：程序的算法</p>\n</li>\n<li><p>压力测试：外在负载</p>\n</li>\n<li><p>数据库测试</p>\n</li>\n<li><p>java程序测试</p>\n</li>\n<li><p>FTP服务器测试</p>\n<p>（前面四个用的比较多）</p>\n</li>\n</ul>\n<h4 id=\"2-为什么使用JMeter\"><a href=\"#2-为什么使用JMeter\" class=\"headerlink\" title=\"2.为什么使用JMeter\"></a>2.为什么使用JMeter</h4><p>JMeter优势如下：</p>\n<img src=\"/2023/08/30/JMeter%E5%AD%A6%E4%B9%A0/18-30-23-131804.png\" class>\n\n\n\n<ul>\n<li><strong>开源：</strong>JMeter完全免费，允许开发者使用源代码进行二次开发。</li>\n<li><strong>友好的GUI：</strong>JMeter使用起来非常容易，不需要花时间熟悉。</li>\n<li><strong>平台独立：</strong>JMeter是100%纯Java桌面应用程序，所以可以多平台运行。</li>\n<li><strong>完全多线程框架：</strong>JMeter允许通过多个线程并发取样和通知单独的线程组对不同的功能同时取样。</li>\n<li><strong>可视化的测试结果：</strong>测试结果可以用不同的报表显示，如：图表、表格、树和日志文件</li>\n<li><strong>安装方便：</strong>你不用安装，只需复制并打开*.bat文件运行JMeter。（轻量级）</li>\n<li><strong>高度扩展：</strong>你可以编写你自己的测试，JMeter还支持可视化插件，允许您的扩展您的测试。</li>\n<li><strong>多测试策略：</strong>JMeter支持多个测试策略，如：负载测试、分布式测试和功能测试。</li>\n<li><strong>仿真：</strong>JMeter可以模拟多用户并发线程，创建一个沉重的负担对web应用程序，创建一个沉重的负担对web应用程序测试下。</li>\n<li>支持多协议：JMeter不仅测试支持web应用程序，还可以评估数据库服务器的性能。JMeter基本支持所有的协议（如：HTTP、JDBC、LDAP、SOAP、JMS和FTP）。</li>\n<li><strong>录制和回放：</strong>录制用户在浏览器和web应用程序的记录、使用JMeter进行模拟。</li>\n<li><strong>脚本测试：</strong>JMeter可以集成Bean Shell和Selenium自动化测试。</li>\n</ul>\n<h4 id=\"3-JMeter的缺点：\"><a href=\"#3-JMeter的缺点：\" class=\"headerlink\" title=\"3.JMeter的缺点：\"></a>3.JMeter的缺点：</h4><ul>\n<li>使用JMeter无法验证JS程序，也无法验证页面UI，所有必须要和Selenium配合来完成Web2.0应用的测试。（配合的意思就是在验证页面或者JS程序的时候，使用Selenium。并不是结合的意思，是单独使用。）</li>\n<li>JMeter不支持IP欺骗</li>\n<li>JMeter的测试脚本和结果基本都是本地管理，不支持版本控制管理。</li>\n</ul>\n<h4 id=\"4-JMeter对比loadrunner\"><a href=\"#4-JMeter对比loadrunner\" class=\"headerlink\" title=\"4.JMeter对比loadrunner\"></a>4.JMeter对比loadrunner</h4><p>JMeter的架构跟loadrunner原理一样，都是通过中间代理，监控&amp;收集并发客户端发现的指令，把他们生成脚本，再发送到应服务器，再监控服务器反馈的结果的一个过程。</p>\n<ul>\n<li>JMeter安装简单，LoadRunner安装麻烦。</li>\n<li>JMeter组件小，LoadRunner占用空间比较大。</li>\n<li>JMeter不支持IP欺骗，LoadRunner支持。</li>\n<li>脚本录制功能两者都支持。</li>\n<li>JMeter支持报表，但分析能力不足。LoadRunner支持报表，数据完成，界面漂亮。</li>\n<li>JMeter是开源的（免费），LoadRunner是商业软件，需要收费。</li>\n<li>JMeter易用性更强，JMeter的脚本修改，主要是对JMeter中各个部件的熟悉程度，已经相关的一些协议的掌握情况，而不依赖于编程。</li>\n<li>LoadRunner除了复杂的场景设置外，还需要掌握函数和修改脚本（如果单单只会录制脚本，并不叫性能测试哦~）。</li>\n</ul>\n<p>总结如下表：</p>\n<hr>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\tJMeter\t\t\t\t\t\t\t\t\t\t\t\tLoadRunner</p>\n<hr>\n<p>​\t\t\t安装\t\t\t\t简单，下载解压即可\t\t\t\t复杂，安装包大于1GB，依赖\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t比较强，安装时间长（大约1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t小时）</p>\n<hr>\n<p> 录制&#x2F;回放模式             \t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持\t\t\t</p>\n<hr>\n<p>​\t测试协议\t\t\t\t偏少，用户可自行扩展\t\t\t\t\t\t\t较多，不可扩展</p>\n<hr>\n<p>分布式大规模\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持、\t\t\t</p>\n<p>​     压力测试</p>\n<hr>\n<p>  IP欺骗功能  \t\t\t\t\t\t不支持\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>​\t图形报表\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>测试逻辑控制\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>监控服务器资源\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>功能测试\t\t\t\t\t\t\t\t支持\t\t\t\t\t\t\t\t\t\t\t\t\t\t支持</p>\n<hr>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"4.JMeter常用目录介绍","date":"2023-09-05T09:31:30.000Z","cover":"https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png","_content":"\n## JMeter常用目录介绍\n\n在正式使用JMeter之前，建议大家还是先了解JMeter的常见的目录结构。了解一下这些东西以后，才能快速的找到需要的某些配置文件来进行修改。\n\n我们之前下载的是JMeter5.0版本，解压后得到下面的目录结构，如下图：\n\n{%asset_img 33-05-23-173335.png%}\n\n### 1.**bin目录**\n\nbin目录存放的是JMeter的主jar包，启动脚本、配置文件、日志等文件。\n\n{%asset_img 33-05-23-173341.png%}\n\n#### 1.examples目录：\n\n目录中有CSV样例，如下图：\n\n{%asset_img 33-05-23-173348.png%}\n\nJMeter以后在做参数化的时候，就可以用到CSV。（在学习Postman的时候也用过CSV）\n\n#### 2.JMeter.bat:\n\nWindows系统中JMeter的启动文件。\n\n#### 3.JMeter.sh:\n\nLinux系统中JMeter的启动文件。\n\n#### 4.JMeter.log:\n\nJMeter运行的日志文件。在JMeter运行过程中所产生的日志信息都会存储在JMeter.log文件中。\n\n#### 5.JMeter.properties:\n\n系统配置文件。该文件我们会经常的进行一些修改，如我们之前说的修改JMeter默认显示语言等操作。这个文件很重要，一定要记住。\n\n注意：当配置文件修改后，需要重启JMeter才能生效。\n\n#### 6.JMeter-server.bat：\n\n在windows环境下做分布式测试时要用到的服务器配置文件。\n\n#### 7.JMeters-server:\n\n在Linux环境下做分布式测试时要用的服务器配置文件。\n\n**提示：**JMeter.properties系统配置文件中的SSL设置重点关注如下几个配置信息。\n\n```bash\n#指定HTTPS协议层\nhttps.default.protocol=TLS\n\n#指定SSL版本\nhttps.default.protocol=SSLv3\n\n#设置启动的协议\nhttps.socket.protocols=SSLv2Hello SSLv3 TLSv1\n\n#缓存控制，控制SSL是否可以在多个迭代中复用\nhttps.use.cached.ssl.context=true\n```\n\n### 2.**docs目录**\n\ndocs目录为JMeter的接口文档目录。\n\n{%asset_img 33-05-23-173356.png%}\n\n可打开docs目录中api\\index.html页面来查看。\n\n因为JMeter是一个开源的工具，如果你需要对JMeter做二次开发，就需要查看这里边的一些接口。\n\n### 3.**extras目录**\n\nextras目录是JMeter的扩展插件目录，该目录属于附加目录。例如进行持续集成时，会将用到的Ant、Maven的插件放在这个目录下面。\n\n{%asset_img 34-05-23-173400.png%}\n\n该目录提供了JMeter对Ant的支持，可以使用Ant来实现自动化测试。例如批量脚本执行，产生html格式的报表。测试运行时，可以把测试数据记录下来，JMeter会自动生成一个.Jtl文件，将该文件放到extras目录下，运行\"ant-Dtest=文件名 report\"，就可以生成测试统计报表。\n\n总结：该目录平时主要用到的就是JMeter和Ant的集成所需要用到的jar包、build.xml模板、报告模板等文件。\n\n### 4.**lib目录**\n\n该目录是JMeter启动时的默认的classpath目录(JMeter会自动在JMeter_HOME/lib和ext目录下寻找需要的类，lib下存放JMeter所依赖的外部jar)，这就意味着在使用JMeter进行测试的过程中，所有需要引用到的jar包都必须放在该目录下。\n\n{%asset_img 34-05-23-173405.png%}\n\n- lib目录下存放JMeter所依赖的外部插件，这些插件文件均为jar包。\n\n  例如：httpclient.jar、httpcore.jar、httpmime.jar等等。\n\n- 其中lib\\ext目录下存放有JMeter依赖的核心jar包，例如:ApacheJMeter_core.jar、ApacheJMeter_java.jar等等。\n\n- lib\\junit下存放junit测试脚本。\n\n  提示：\n\n  尤其要注意的就是在扩展JMeter的时候，代码中所有import需要用到的jar包都是存放在lib目录，而不是lib\\ext目录下。\n\n### 5.**License目录**\n\nJMeter的证书目录。\n\n### 6.**Printable_docs目录**\n\n该目录存放的是JMeter的官方的帮助文档，唯一的遗憾就是文档是英文的，没有中文版。\n\n说明：printable_docs目录的usermanual子目录下的内容，是JMeter的用户手册文档，其中component_reference.html文件是最常用到的核心元件帮助文档。\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","source":"_posts/JMeter常用目录介绍-1.md","raw":"---\ntitle: 4.JMeter常用目录介绍\ndate: 2023-09-05 17:31:30\ntags:\n   - JMeter\ncategories:\n   - JMeter学习 \ncover: https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png\n---\n\n## JMeter常用目录介绍\n\n在正式使用JMeter之前，建议大家还是先了解JMeter的常见的目录结构。了解一下这些东西以后，才能快速的找到需要的某些配置文件来进行修改。\n\n我们之前下载的是JMeter5.0版本，解压后得到下面的目录结构，如下图：\n\n{%asset_img 33-05-23-173335.png%}\n\n### 1.**bin目录**\n\nbin目录存放的是JMeter的主jar包，启动脚本、配置文件、日志等文件。\n\n{%asset_img 33-05-23-173341.png%}\n\n#### 1.examples目录：\n\n目录中有CSV样例，如下图：\n\n{%asset_img 33-05-23-173348.png%}\n\nJMeter以后在做参数化的时候，就可以用到CSV。（在学习Postman的时候也用过CSV）\n\n#### 2.JMeter.bat:\n\nWindows系统中JMeter的启动文件。\n\n#### 3.JMeter.sh:\n\nLinux系统中JMeter的启动文件。\n\n#### 4.JMeter.log:\n\nJMeter运行的日志文件。在JMeter运行过程中所产生的日志信息都会存储在JMeter.log文件中。\n\n#### 5.JMeter.properties:\n\n系统配置文件。该文件我们会经常的进行一些修改，如我们之前说的修改JMeter默认显示语言等操作。这个文件很重要，一定要记住。\n\n注意：当配置文件修改后，需要重启JMeter才能生效。\n\n#### 6.JMeter-server.bat：\n\n在windows环境下做分布式测试时要用到的服务器配置文件。\n\n#### 7.JMeters-server:\n\n在Linux环境下做分布式测试时要用的服务器配置文件。\n\n**提示：**JMeter.properties系统配置文件中的SSL设置重点关注如下几个配置信息。\n\n```bash\n#指定HTTPS协议层\nhttps.default.protocol=TLS\n\n#指定SSL版本\nhttps.default.protocol=SSLv3\n\n#设置启动的协议\nhttps.socket.protocols=SSLv2Hello SSLv3 TLSv1\n\n#缓存控制，控制SSL是否可以在多个迭代中复用\nhttps.use.cached.ssl.context=true\n```\n\n### 2.**docs目录**\n\ndocs目录为JMeter的接口文档目录。\n\n{%asset_img 33-05-23-173356.png%}\n\n可打开docs目录中api\\index.html页面来查看。\n\n因为JMeter是一个开源的工具，如果你需要对JMeter做二次开发，就需要查看这里边的一些接口。\n\n### 3.**extras目录**\n\nextras目录是JMeter的扩展插件目录，该目录属于附加目录。例如进行持续集成时，会将用到的Ant、Maven的插件放在这个目录下面。\n\n{%asset_img 34-05-23-173400.png%}\n\n该目录提供了JMeter对Ant的支持，可以使用Ant来实现自动化测试。例如批量脚本执行，产生html格式的报表。测试运行时，可以把测试数据记录下来，JMeter会自动生成一个.Jtl文件，将该文件放到extras目录下，运行\"ant-Dtest=文件名 report\"，就可以生成测试统计报表。\n\n总结：该目录平时主要用到的就是JMeter和Ant的集成所需要用到的jar包、build.xml模板、报告模板等文件。\n\n### 4.**lib目录**\n\n该目录是JMeter启动时的默认的classpath目录(JMeter会自动在JMeter_HOME/lib和ext目录下寻找需要的类，lib下存放JMeter所依赖的外部jar)，这就意味着在使用JMeter进行测试的过程中，所有需要引用到的jar包都必须放在该目录下。\n\n{%asset_img 34-05-23-173405.png%}\n\n- lib目录下存放JMeter所依赖的外部插件，这些插件文件均为jar包。\n\n  例如：httpclient.jar、httpcore.jar、httpmime.jar等等。\n\n- 其中lib\\ext目录下存放有JMeter依赖的核心jar包，例如:ApacheJMeter_core.jar、ApacheJMeter_java.jar等等。\n\n- lib\\junit下存放junit测试脚本。\n\n  提示：\n\n  尤其要注意的就是在扩展JMeter的时候，代码中所有import需要用到的jar包都是存放在lib目录，而不是lib\\ext目录下。\n\n### 5.**License目录**\n\nJMeter的证书目录。\n\n### 6.**Printable_docs目录**\n\n该目录存放的是JMeter的官方的帮助文档，唯一的遗憾就是文档是英文的，没有中文版。\n\n说明：printable_docs目录的usermanual子目录下的内容，是JMeter的用户手册文档，其中component_reference.html文件是最常用到的核心元件帮助文档。\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","slug":"JMeter常用目录介绍-1","published":1,"updated":"2023-09-19T03:56:18.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4noz000nfw48hxxd34b3","content":"<h2 id=\"JMeter常用目录介绍\"><a href=\"#JMeter常用目录介绍\" class=\"headerlink\" title=\"JMeter常用目录介绍\"></a>JMeter常用目录介绍</h2><p>在正式使用JMeter之前，建议大家还是先了解JMeter的常见的目录结构。了解一下这些东西以后，才能快速的找到需要的某些配置文件来进行修改。</p>\n<p>我们之前下载的是JMeter5.0版本，解压后得到下面的目录结构，如下图：</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173335.png\" class>\n\n<h3 id=\"1-bin目录\"><a href=\"#1-bin目录\" class=\"headerlink\" title=\"1.bin目录\"></a>1.<strong>bin目录</strong></h3><p>bin目录存放的是JMeter的主jar包，启动脚本、配置文件、日志等文件。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173341.png\" class>\n\n<h4 id=\"1-examples目录：\"><a href=\"#1-examples目录：\" class=\"headerlink\" title=\"1.examples目录：\"></a>1.examples目录：</h4><p>目录中有CSV样例，如下图：</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173348.png\" class>\n\n<p>JMeter以后在做参数化的时候，就可以用到CSV。（在学习Postman的时候也用过CSV）</p>\n<h4 id=\"2-JMeter-bat\"><a href=\"#2-JMeter-bat\" class=\"headerlink\" title=\"2.JMeter.bat:\"></a>2.JMeter.bat:</h4><p>Windows系统中JMeter的启动文件。</p>\n<h4 id=\"3-JMeter-sh\"><a href=\"#3-JMeter-sh\" class=\"headerlink\" title=\"3.JMeter.sh:\"></a>3.JMeter.sh:</h4><p>Linux系统中JMeter的启动文件。</p>\n<h4 id=\"4-JMeter-log\"><a href=\"#4-JMeter-log\" class=\"headerlink\" title=\"4.JMeter.log:\"></a>4.JMeter.log:</h4><p>JMeter运行的日志文件。在JMeter运行过程中所产生的日志信息都会存储在JMeter.log文件中。</p>\n<h4 id=\"5-JMeter-properties\"><a href=\"#5-JMeter-properties\" class=\"headerlink\" title=\"5.JMeter.properties:\"></a>5.JMeter.properties:</h4><p>系统配置文件。该文件我们会经常的进行一些修改，如我们之前说的修改JMeter默认显示语言等操作。这个文件很重要，一定要记住。</p>\n<p>注意：当配置文件修改后，需要重启JMeter才能生效。</p>\n<h4 id=\"6-JMeter-server-bat：\"><a href=\"#6-JMeter-server-bat：\" class=\"headerlink\" title=\"6.JMeter-server.bat：\"></a>6.JMeter-server.bat：</h4><p>在windows环境下做分布式测试时要用到的服务器配置文件。</p>\n<h4 id=\"7-JMeters-server\"><a href=\"#7-JMeters-server\" class=\"headerlink\" title=\"7.JMeters-server:\"></a>7.JMeters-server:</h4><p>在Linux环境下做分布式测试时要用的服务器配置文件。</p>\n<p><strong>提示：</strong>JMeter.properties系统配置文件中的SSL设置重点关注如下几个配置信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#指定HTTPS协议层</span></span><br><span class=\"line\">https.default.protocol=TLS</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#指定SSL版本</span></span><br><span class=\"line\">https.default.protocol=SSLv3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置启动的协议</span></span><br><span class=\"line\">https.socket.protocols=SSLv2Hello SSLv3 TLSv1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#缓存控制，控制SSL是否可以在多个迭代中复用</span></span><br><span class=\"line\">https.use.cached.ssl.context=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-docs目录\"><a href=\"#2-docs目录\" class=\"headerlink\" title=\"2.docs目录\"></a>2.<strong>docs目录</strong></h3><p>docs目录为JMeter的接口文档目录。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173356.png\" class>\n\n<p>可打开docs目录中api\\index.html页面来查看。</p>\n<p>因为JMeter是一个开源的工具，如果你需要对JMeter做二次开发，就需要查看这里边的一些接口。</p>\n<h3 id=\"3-extras目录\"><a href=\"#3-extras目录\" class=\"headerlink\" title=\"3.extras目录\"></a>3.<strong>extras目录</strong></h3><p>extras目录是JMeter的扩展插件目录，该目录属于附加目录。例如进行持续集成时，会将用到的Ant、Maven的插件放在这个目录下面。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/34-05-23-173400.png\" class>\n\n<p>该目录提供了JMeter对Ant的支持，可以使用Ant来实现自动化测试。例如批量脚本执行，产生html格式的报表。测试运行时，可以把测试数据记录下来，JMeter会自动生成一个.Jtl文件，将该文件放到extras目录下，运行”ant-Dtest&#x3D;文件名 report”，就可以生成测试统计报表。</p>\n<p>总结：该目录平时主要用到的就是JMeter和Ant的集成所需要用到的jar包、build.xml模板、报告模板等文件。</p>\n<h3 id=\"4-lib目录\"><a href=\"#4-lib目录\" class=\"headerlink\" title=\"4.lib目录\"></a>4.<strong>lib目录</strong></h3><p>该目录是JMeter启动时的默认的classpath目录(JMeter会自动在JMeter_HOME&#x2F;lib和ext目录下寻找需要的类，lib下存放JMeter所依赖的外部jar)，这就意味着在使用JMeter进行测试的过程中，所有需要引用到的jar包都必须放在该目录下。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/34-05-23-173405.png\" class>\n\n<ul>\n<li><p>lib目录下存放JMeter所依赖的外部插件，这些插件文件均为jar包。</p>\n<p>例如：httpclient.jar、httpcore.jar、httpmime.jar等等。</p>\n</li>\n<li><p>其中lib\\ext目录下存放有JMeter依赖的核心jar包，例如:ApacheJMeter_core.jar、ApacheJMeter_java.jar等等。</p>\n</li>\n<li><p>lib\\junit下存放junit测试脚本。</p>\n<p>提示：</p>\n<p>尤其要注意的就是在扩展JMeter的时候，代码中所有import需要用到的jar包都是存放在lib目录，而不是lib\\ext目录下。</p>\n</li>\n</ul>\n<h3 id=\"5-License目录\"><a href=\"#5-License目录\" class=\"headerlink\" title=\"5.License目录\"></a>5.<strong>License目录</strong></h3><p>JMeter的证书目录。</p>\n<h3 id=\"6-Printable-docs目录\"><a href=\"#6-Printable-docs目录\" class=\"headerlink\" title=\"6.Printable_docs目录\"></a>6.<strong>Printable_docs目录</strong></h3><p>该目录存放的是JMeter的官方的帮助文档，唯一的遗憾就是文档是英文的，没有中文版。</p>\n<p>说明：printable_docs目录的usermanual子目录下的内容，是JMeter的用户手册文档，其中component_reference.html文件是最常用到的核心元件帮助文档。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"JMeter常用目录介绍\"><a href=\"#JMeter常用目录介绍\" class=\"headerlink\" title=\"JMeter常用目录介绍\"></a>JMeter常用目录介绍</h2><p>在正式使用JMeter之前，建议大家还是先了解JMeter的常见的目录结构。了解一下这些东西以后，才能快速的找到需要的某些配置文件来进行修改。</p>\n<p>我们之前下载的是JMeter5.0版本，解压后得到下面的目录结构，如下图：</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173335.png\" class>\n\n<h3 id=\"1-bin目录\"><a href=\"#1-bin目录\" class=\"headerlink\" title=\"1.bin目录\"></a>1.<strong>bin目录</strong></h3><p>bin目录存放的是JMeter的主jar包，启动脚本、配置文件、日志等文件。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173341.png\" class>\n\n<h4 id=\"1-examples目录：\"><a href=\"#1-examples目录：\" class=\"headerlink\" title=\"1.examples目录：\"></a>1.examples目录：</h4><p>目录中有CSV样例，如下图：</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173348.png\" class>\n\n<p>JMeter以后在做参数化的时候，就可以用到CSV。（在学习Postman的时候也用过CSV）</p>\n<h4 id=\"2-JMeter-bat\"><a href=\"#2-JMeter-bat\" class=\"headerlink\" title=\"2.JMeter.bat:\"></a>2.JMeter.bat:</h4><p>Windows系统中JMeter的启动文件。</p>\n<h4 id=\"3-JMeter-sh\"><a href=\"#3-JMeter-sh\" class=\"headerlink\" title=\"3.JMeter.sh:\"></a>3.JMeter.sh:</h4><p>Linux系统中JMeter的启动文件。</p>\n<h4 id=\"4-JMeter-log\"><a href=\"#4-JMeter-log\" class=\"headerlink\" title=\"4.JMeter.log:\"></a>4.JMeter.log:</h4><p>JMeter运行的日志文件。在JMeter运行过程中所产生的日志信息都会存储在JMeter.log文件中。</p>\n<h4 id=\"5-JMeter-properties\"><a href=\"#5-JMeter-properties\" class=\"headerlink\" title=\"5.JMeter.properties:\"></a>5.JMeter.properties:</h4><p>系统配置文件。该文件我们会经常的进行一些修改，如我们之前说的修改JMeter默认显示语言等操作。这个文件很重要，一定要记住。</p>\n<p>注意：当配置文件修改后，需要重启JMeter才能生效。</p>\n<h4 id=\"6-JMeter-server-bat：\"><a href=\"#6-JMeter-server-bat：\" class=\"headerlink\" title=\"6.JMeter-server.bat：\"></a>6.JMeter-server.bat：</h4><p>在windows环境下做分布式测试时要用到的服务器配置文件。</p>\n<h4 id=\"7-JMeters-server\"><a href=\"#7-JMeters-server\" class=\"headerlink\" title=\"7.JMeters-server:\"></a>7.JMeters-server:</h4><p>在Linux环境下做分布式测试时要用的服务器配置文件。</p>\n<p><strong>提示：</strong>JMeter.properties系统配置文件中的SSL设置重点关注如下几个配置信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#指定HTTPS协议层</span></span><br><span class=\"line\">https.default.protocol=TLS</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#指定SSL版本</span></span><br><span class=\"line\">https.default.protocol=SSLv3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置启动的协议</span></span><br><span class=\"line\">https.socket.protocols=SSLv2Hello SSLv3 TLSv1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#缓存控制，控制SSL是否可以在多个迭代中复用</span></span><br><span class=\"line\">https.use.cached.ssl.context=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-docs目录\"><a href=\"#2-docs目录\" class=\"headerlink\" title=\"2.docs目录\"></a>2.<strong>docs目录</strong></h3><p>docs目录为JMeter的接口文档目录。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/33-05-23-173356.png\" class>\n\n<p>可打开docs目录中api\\index.html页面来查看。</p>\n<p>因为JMeter是一个开源的工具，如果你需要对JMeter做二次开发，就需要查看这里边的一些接口。</p>\n<h3 id=\"3-extras目录\"><a href=\"#3-extras目录\" class=\"headerlink\" title=\"3.extras目录\"></a>3.<strong>extras目录</strong></h3><p>extras目录是JMeter的扩展插件目录，该目录属于附加目录。例如进行持续集成时，会将用到的Ant、Maven的插件放在这个目录下面。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/34-05-23-173400.png\" class>\n\n<p>该目录提供了JMeter对Ant的支持，可以使用Ant来实现自动化测试。例如批量脚本执行，产生html格式的报表。测试运行时，可以把测试数据记录下来，JMeter会自动生成一个.Jtl文件，将该文件放到extras目录下，运行”ant-Dtest&#x3D;文件名 report”，就可以生成测试统计报表。</p>\n<p>总结：该目录平时主要用到的就是JMeter和Ant的集成所需要用到的jar包、build.xml模板、报告模板等文件。</p>\n<h3 id=\"4-lib目录\"><a href=\"#4-lib目录\" class=\"headerlink\" title=\"4.lib目录\"></a>4.<strong>lib目录</strong></h3><p>该目录是JMeter启动时的默认的classpath目录(JMeter会自动在JMeter_HOME&#x2F;lib和ext目录下寻找需要的类，lib下存放JMeter所依赖的外部jar)，这就意味着在使用JMeter进行测试的过程中，所有需要引用到的jar包都必须放在该目录下。</p>\n<img src=\"/2023/09/05/JMeter%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D-1/34-05-23-173405.png\" class>\n\n<ul>\n<li><p>lib目录下存放JMeter所依赖的外部插件，这些插件文件均为jar包。</p>\n<p>例如：httpclient.jar、httpcore.jar、httpmime.jar等等。</p>\n</li>\n<li><p>其中lib\\ext目录下存放有JMeter依赖的核心jar包，例如:ApacheJMeter_core.jar、ApacheJMeter_java.jar等等。</p>\n</li>\n<li><p>lib\\junit下存放junit测试脚本。</p>\n<p>提示：</p>\n<p>尤其要注意的就是在扩展JMeter的时候，代码中所有import需要用到的jar包都是存放在lib目录，而不是lib\\ext目录下。</p>\n</li>\n</ul>\n<h3 id=\"5-License目录\"><a href=\"#5-License目录\" class=\"headerlink\" title=\"5.License目录\"></a>5.<strong>License目录</strong></h3><p>JMeter的证书目录。</p>\n<h3 id=\"6-Printable-docs目录\"><a href=\"#6-Printable-docs目录\" class=\"headerlink\" title=\"6.Printable_docs目录\"></a>6.<strong>Printable_docs目录</strong></h3><p>该目录存放的是JMeter的官方的帮助文档，唯一的遗憾就是文档是英文的，没有中文版。</p>\n<p>说明：printable_docs目录的usermanual子目录下的内容，是JMeter的用户手册文档，其中component_reference.html文件是最常用到的核心元件帮助文档。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"3.JMeter插件管理","date":"2023-09-05T09:39:51.000Z","cover":"https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png","_content":"\n## **JMeter插件管理**\n\nJMeter是一个Java开发的开源软件，开源的软件有一个好处，就是会有很多第三方开发出来的插件，使得JMeter在处理某一些功能的时候更加的方便。并且这些插件拿过来就可以使用，完全免费的。\n\n我们安装好的JMeter，自身会携带一些必须的组件，一般来说是符号我们平时工作需要的，但是有一些功能或者组件，可能使用第三方插件效果更好。\n\n总结：JMeter作为来源性能测试工具，第三方团队开发了更多的配置功能，即JMeter插件。\n\n### 1.**安装JMeter插件管理器**\n\n##### （1）JMeter插件管理器介绍：\n\n- JMeter插件管理器的使用方法很简单:不要手动安装各种插件，它提供了友好的用户界面来完成:安装、升级、卸载等操作。\n- JMeter插件管理器所管理的插件包括jmeter-plugins.org上面常见的插件，和各种第三方插件，甚至核心JMeter插件。\n\n##### （2）安装JMeter插件管理器，步骤如下：\n\n在我们刚刚安装好的JMeter中，是没有插件管理器的，这需要我们手动进行安装。\n\n查看插件管理器，点击Option（选项），在显示出的菜单的最下面就能够看到。\n\n如下图，此时的JMeter是没有安装插件管理器的。\n\n{%asset_img 40-05-23-174049.png%}\n\n我们需要到网站：http://jmeter-plugins.org/downloads/all/中下载JMeter插件管理器。\n\n如下图：\n\n{%asset_img 40-05-23-174059.png%}\n\n上图中很明确的告诉我们:\n\n- Installing Plugins:安装插件。\n\n- The easiest way to get the plugins is to install Plugins Manager. Then you'll be able to install any other plugins just by clicking a checkbox.\n\n  获得插件的最简单方法是安装插件管理器。\n\n  然后，您只需要单击复选框即可安装任何其他插件。\n\n- Download plugins-manager.jar and put it into lib/ext directory, then restart JMeter\n\n  下载plugins-manager.jar并将其放入lib/ext 目录中。\n\n{%asset_img 41-05-23-174105.png%}\n\n然后重新启动JMeter。\n\n在点击Options（选项），就能看到JMeter插件管理器Plugins Manager选项了。\n\n{%asset_img 41-05-23-174109.png%}\n\n总结：\n\n安装JMeter插件管理器大概流程是：\n\n- JMeter插件管理器，是一个jar文件。\n- 将该文件拷贝到JMeter安装目录中的\"\\lib\\ext\"目录下。\n- 然后重启JMeter\n\n这样就可以使用JMeter插件管理器了。\n\n同时在JMeter界面中的快捷工具栏中，也会出现插件管理器图标，如下图：\n\n{%asset_img 41-05-23-174115.png%}\n\n### 2.**JMeter插件管理器界面说明**\n\n我们点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。\n\n如下图：\n\n{%asset_img 41-05-23-174120.png%}\n\n说明：\n\n- Installed Plugins(已安装的插件)：即插件目录中已经包含的插件，可以通过选中勾选框，来使用这些插件。\n- Available Plugins（可下载的插件）:即可以安装的一些插件，通过选中勾选框，来下载你所需要的插件。\n- Upgrades（可更新的插件）：即显示有最新版本的一些插件，通过选中勾选框，点击界面右下角的Apply Changes and Restart JMeter按钮来下载，之后更新重启JMeter。\n\n提示：一般不建议进行更新操作，因为最新的插件都有一些兼容问题，而且很可能导致JMeter无法使用（经常报加载类异常错误）！！！\n\n### 3.JMeter插件安装和卸载\n\n#### （1）通过JMeter插件管理器安装插件\n\n点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。\n\n然后点击Available Plugins，来下载我们所需的插件，例如以PerfMon插件为例:\n\n{%asset_img 41-05-23-174125.png%}\n\n勾选PerfMon插件，点击界面右下角的Apply Changes and Restart JMeter按钮安装。\n\n下载安装好后，就可以在Installed Plugins列表中看到PerfMon插件了。\n\n如下图：\n\n{%asset_img 41-05-23-174130.png%}\n\n提示：下载下来的PerfMon插件文件，会出现在JMeter的apache-jmeter-5.0、lib\\ext目录中。\n\n{%asset_img 41-05-23-174143.png%}\n\n#### （2）通过JMeter插件管理器卸载插件\n\n关于卸载插件，可以在Installed Plugins列表中，取消勾选perfMon插件，然后点击Apply Changes and Restart JMeter按钮。这样就是把PerfMon插件卸载掉，同时也删除了apache-jmeter-5.0\\lib\\ext目录中插件文件。（如果有需要可以再按照上面的步骤安装所需要的插件）\n\n重点提示：\n\nReview Changes窗格很重要，它列出了在点击\"Apply\"按钮后应该完成的所有更改。\n\n有时插件之间存在依赖关系，因此可能会有额外的插件卸载，所以在应用之前先回顾一下变化。\n\n如下图：\n\n{%asset_img 41-05-23-174149.png%}\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","source":"_posts/JMeter插件管理-1.md","raw":"---\ntitle: 3.JMeter插件管理\ndate: 2023-09-05 17:39:51\ntags:\n   - JMeter\ncategories:\n   - JMeter学习 \ncover: https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png\n---\n\n## **JMeter插件管理**\n\nJMeter是一个Java开发的开源软件，开源的软件有一个好处，就是会有很多第三方开发出来的插件，使得JMeter在处理某一些功能的时候更加的方便。并且这些插件拿过来就可以使用，完全免费的。\n\n我们安装好的JMeter，自身会携带一些必须的组件，一般来说是符号我们平时工作需要的，但是有一些功能或者组件，可能使用第三方插件效果更好。\n\n总结：JMeter作为来源性能测试工具，第三方团队开发了更多的配置功能，即JMeter插件。\n\n### 1.**安装JMeter插件管理器**\n\n##### （1）JMeter插件管理器介绍：\n\n- JMeter插件管理器的使用方法很简单:不要手动安装各种插件，它提供了友好的用户界面来完成:安装、升级、卸载等操作。\n- JMeter插件管理器所管理的插件包括jmeter-plugins.org上面常见的插件，和各种第三方插件，甚至核心JMeter插件。\n\n##### （2）安装JMeter插件管理器，步骤如下：\n\n在我们刚刚安装好的JMeter中，是没有插件管理器的，这需要我们手动进行安装。\n\n查看插件管理器，点击Option（选项），在显示出的菜单的最下面就能够看到。\n\n如下图，此时的JMeter是没有安装插件管理器的。\n\n{%asset_img 40-05-23-174049.png%}\n\n我们需要到网站：http://jmeter-plugins.org/downloads/all/中下载JMeter插件管理器。\n\n如下图：\n\n{%asset_img 40-05-23-174059.png%}\n\n上图中很明确的告诉我们:\n\n- Installing Plugins:安装插件。\n\n- The easiest way to get the plugins is to install Plugins Manager. Then you'll be able to install any other plugins just by clicking a checkbox.\n\n  获得插件的最简单方法是安装插件管理器。\n\n  然后，您只需要单击复选框即可安装任何其他插件。\n\n- Download plugins-manager.jar and put it into lib/ext directory, then restart JMeter\n\n  下载plugins-manager.jar并将其放入lib/ext 目录中。\n\n{%asset_img 41-05-23-174105.png%}\n\n然后重新启动JMeter。\n\n在点击Options（选项），就能看到JMeter插件管理器Plugins Manager选项了。\n\n{%asset_img 41-05-23-174109.png%}\n\n总结：\n\n安装JMeter插件管理器大概流程是：\n\n- JMeter插件管理器，是一个jar文件。\n- 将该文件拷贝到JMeter安装目录中的\"\\lib\\ext\"目录下。\n- 然后重启JMeter\n\n这样就可以使用JMeter插件管理器了。\n\n同时在JMeter界面中的快捷工具栏中，也会出现插件管理器图标，如下图：\n\n{%asset_img 41-05-23-174115.png%}\n\n### 2.**JMeter插件管理器界面说明**\n\n我们点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。\n\n如下图：\n\n{%asset_img 41-05-23-174120.png%}\n\n说明：\n\n- Installed Plugins(已安装的插件)：即插件目录中已经包含的插件，可以通过选中勾选框，来使用这些插件。\n- Available Plugins（可下载的插件）:即可以安装的一些插件，通过选中勾选框，来下载你所需要的插件。\n- Upgrades（可更新的插件）：即显示有最新版本的一些插件，通过选中勾选框，点击界面右下角的Apply Changes and Restart JMeter按钮来下载，之后更新重启JMeter。\n\n提示：一般不建议进行更新操作，因为最新的插件都有一些兼容问题，而且很可能导致JMeter无法使用（经常报加载类异常错误）！！！\n\n### 3.JMeter插件安装和卸载\n\n#### （1）通过JMeter插件管理器安装插件\n\n点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。\n\n然后点击Available Plugins，来下载我们所需的插件，例如以PerfMon插件为例:\n\n{%asset_img 41-05-23-174125.png%}\n\n勾选PerfMon插件，点击界面右下角的Apply Changes and Restart JMeter按钮安装。\n\n下载安装好后，就可以在Installed Plugins列表中看到PerfMon插件了。\n\n如下图：\n\n{%asset_img 41-05-23-174130.png%}\n\n提示：下载下来的PerfMon插件文件，会出现在JMeter的apache-jmeter-5.0、lib\\ext目录中。\n\n{%asset_img 41-05-23-174143.png%}\n\n#### （2）通过JMeter插件管理器卸载插件\n\n关于卸载插件，可以在Installed Plugins列表中，取消勾选perfMon插件，然后点击Apply Changes and Restart JMeter按钮。这样就是把PerfMon插件卸载掉，同时也删除了apache-jmeter-5.0\\lib\\ext目录中插件文件。（如果有需要可以再按照上面的步骤安装所需要的插件）\n\n重点提示：\n\nReview Changes窗格很重要，它列出了在点击\"Apply\"按钮后应该完成的所有更改。\n\n有时插件之间存在依赖关系，因此可能会有额外的插件卸载，所以在应用之前先回顾一下变化。\n\n如下图：\n\n{%asset_img 41-05-23-174149.png%}\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","slug":"JMeter插件管理-1","published":1,"updated":"2023-09-19T03:56:32.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4np2000pfw486s7y7fv3","content":"<h2 id=\"JMeter插件管理\"><a href=\"#JMeter插件管理\" class=\"headerlink\" title=\"JMeter插件管理\"></a><strong>JMeter插件管理</strong></h2><p>JMeter是一个Java开发的开源软件，开源的软件有一个好处，就是会有很多第三方开发出来的插件，使得JMeter在处理某一些功能的时候更加的方便。并且这些插件拿过来就可以使用，完全免费的。</p>\n<p>我们安装好的JMeter，自身会携带一些必须的组件，一般来说是符号我们平时工作需要的，但是有一些功能或者组件，可能使用第三方插件效果更好。</p>\n<p>总结：JMeter作为来源性能测试工具，第三方团队开发了更多的配置功能，即JMeter插件。</p>\n<h3 id=\"1-安装JMeter插件管理器\"><a href=\"#1-安装JMeter插件管理器\" class=\"headerlink\" title=\"1.安装JMeter插件管理器\"></a>1.<strong>安装JMeter插件管理器</strong></h3><h5 id=\"（1）JMeter插件管理器介绍：\"><a href=\"#（1）JMeter插件管理器介绍：\" class=\"headerlink\" title=\"（1）JMeter插件管理器介绍：\"></a>（1）JMeter插件管理器介绍：</h5><ul>\n<li>JMeter插件管理器的使用方法很简单:不要手动安装各种插件，它提供了友好的用户界面来完成:安装、升级、卸载等操作。</li>\n<li>JMeter插件管理器所管理的插件包括jmeter-plugins.org上面常见的插件，和各种第三方插件，甚至核心JMeter插件。</li>\n</ul>\n<h5 id=\"（2）安装JMeter插件管理器，步骤如下：\"><a href=\"#（2）安装JMeter插件管理器，步骤如下：\" class=\"headerlink\" title=\"（2）安装JMeter插件管理器，步骤如下：\"></a>（2）安装JMeter插件管理器，步骤如下：</h5><p>在我们刚刚安装好的JMeter中，是没有插件管理器的，这需要我们手动进行安装。</p>\n<p>查看插件管理器，点击Option（选项），在显示出的菜单的最下面就能够看到。</p>\n<p>如下图，此时的JMeter是没有安装插件管理器的。</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/40-05-23-174049.png\" class>\n\n<p>我们需要到网站：<a href=\"http://jmeter-plugins.org/downloads/all/%E4%B8%AD%E4%B8%8B%E8%BD%BDJMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8%E3%80%82\">http://jmeter-plugins.org/downloads/all/中下载JMeter插件管理器。</a></p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/40-05-23-174059.png\" class>\n\n<p>上图中很明确的告诉我们:</p>\n<ul>\n<li><p>Installing Plugins:安装插件。</p>\n</li>\n<li><p>The easiest way to get the plugins is to install Plugins Manager. Then you’ll be able to install any other plugins just by clicking a checkbox.</p>\n<p>获得插件的最简单方法是安装插件管理器。</p>\n<p>然后，您只需要单击复选框即可安装任何其他插件。</p>\n</li>\n<li><p>Download plugins-manager.jar and put it into lib&#x2F;ext directory, then restart JMeter</p>\n<p>下载plugins-manager.jar并将其放入lib&#x2F;ext 目录中。</p>\n</li>\n</ul>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174105.png\" class>\n\n<p>然后重新启动JMeter。</p>\n<p>在点击Options（选项），就能看到JMeter插件管理器Plugins Manager选项了。</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174109.png\" class>\n\n<p>总结：</p>\n<p>安装JMeter插件管理器大概流程是：</p>\n<ul>\n<li>JMeter插件管理器，是一个jar文件。</li>\n<li>将该文件拷贝到JMeter安装目录中的”\\lib\\ext”目录下。</li>\n<li>然后重启JMeter</li>\n</ul>\n<p>这样就可以使用JMeter插件管理器了。</p>\n<p>同时在JMeter界面中的快捷工具栏中，也会出现插件管理器图标，如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174115.png\" class>\n\n<h3 id=\"2-JMeter插件管理器界面说明\"><a href=\"#2-JMeter插件管理器界面说明\" class=\"headerlink\" title=\"2.JMeter插件管理器界面说明\"></a>2.<strong>JMeter插件管理器界面说明</strong></h3><p>我们点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174120.png\" class>\n\n<p>说明：</p>\n<ul>\n<li>Installed Plugins(已安装的插件)：即插件目录中已经包含的插件，可以通过选中勾选框，来使用这些插件。</li>\n<li>Available Plugins（可下载的插件）:即可以安装的一些插件，通过选中勾选框，来下载你所需要的插件。</li>\n<li>Upgrades（可更新的插件）：即显示有最新版本的一些插件，通过选中勾选框，点击界面右下角的Apply Changes and Restart JMeter按钮来下载，之后更新重启JMeter。</li>\n</ul>\n<p>提示：一般不建议进行更新操作，因为最新的插件都有一些兼容问题，而且很可能导致JMeter无法使用（经常报加载类异常错误）！！！</p>\n<h3 id=\"3-JMeter插件安装和卸载\"><a href=\"#3-JMeter插件安装和卸载\" class=\"headerlink\" title=\"3.JMeter插件安装和卸载\"></a>3.JMeter插件安装和卸载</h3><h4 id=\"（1）通过JMeter插件管理器安装插件\"><a href=\"#（1）通过JMeter插件管理器安装插件\" class=\"headerlink\" title=\"（1）通过JMeter插件管理器安装插件\"></a>（1）通过JMeter插件管理器安装插件</h4><p>点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。</p>\n<p>然后点击Available Plugins，来下载我们所需的插件，例如以PerfMon插件为例:</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174125.png\" class>\n\n<p>勾选PerfMon插件，点击界面右下角的Apply Changes and Restart JMeter按钮安装。</p>\n<p>下载安装好后，就可以在Installed Plugins列表中看到PerfMon插件了。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174130.png\" class>\n\n<p>提示：下载下来的PerfMon插件文件，会出现在JMeter的apache-jmeter-5.0、lib\\ext目录中。</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174143.png\" class>\n\n<h4 id=\"（2）通过JMeter插件管理器卸载插件\"><a href=\"#（2）通过JMeter插件管理器卸载插件\" class=\"headerlink\" title=\"（2）通过JMeter插件管理器卸载插件\"></a>（2）通过JMeter插件管理器卸载插件</h4><p>关于卸载插件，可以在Installed Plugins列表中，取消勾选perfMon插件，然后点击Apply Changes and Restart JMeter按钮。这样就是把PerfMon插件卸载掉，同时也删除了apache-jmeter-5.0\\lib\\ext目录中插件文件。（如果有需要可以再按照上面的步骤安装所需要的插件）</p>\n<p>重点提示：</p>\n<p>Review Changes窗格很重要，它列出了在点击”Apply”按钮后应该完成的所有更改。</p>\n<p>有时插件之间存在依赖关系，因此可能会有额外的插件卸载，所以在应用之前先回顾一下变化。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174149.png\" class>\n\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"JMeter插件管理\"><a href=\"#JMeter插件管理\" class=\"headerlink\" title=\"JMeter插件管理\"></a><strong>JMeter插件管理</strong></h2><p>JMeter是一个Java开发的开源软件，开源的软件有一个好处，就是会有很多第三方开发出来的插件，使得JMeter在处理某一些功能的时候更加的方便。并且这些插件拿过来就可以使用，完全免费的。</p>\n<p>我们安装好的JMeter，自身会携带一些必须的组件，一般来说是符号我们平时工作需要的，但是有一些功能或者组件，可能使用第三方插件效果更好。</p>\n<p>总结：JMeter作为来源性能测试工具，第三方团队开发了更多的配置功能，即JMeter插件。</p>\n<h3 id=\"1-安装JMeter插件管理器\"><a href=\"#1-安装JMeter插件管理器\" class=\"headerlink\" title=\"1.安装JMeter插件管理器\"></a>1.<strong>安装JMeter插件管理器</strong></h3><h5 id=\"（1）JMeter插件管理器介绍：\"><a href=\"#（1）JMeter插件管理器介绍：\" class=\"headerlink\" title=\"（1）JMeter插件管理器介绍：\"></a>（1）JMeter插件管理器介绍：</h5><ul>\n<li>JMeter插件管理器的使用方法很简单:不要手动安装各种插件，它提供了友好的用户界面来完成:安装、升级、卸载等操作。</li>\n<li>JMeter插件管理器所管理的插件包括jmeter-plugins.org上面常见的插件，和各种第三方插件，甚至核心JMeter插件。</li>\n</ul>\n<h5 id=\"（2）安装JMeter插件管理器，步骤如下：\"><a href=\"#（2）安装JMeter插件管理器，步骤如下：\" class=\"headerlink\" title=\"（2）安装JMeter插件管理器，步骤如下：\"></a>（2）安装JMeter插件管理器，步骤如下：</h5><p>在我们刚刚安装好的JMeter中，是没有插件管理器的，这需要我们手动进行安装。</p>\n<p>查看插件管理器，点击Option（选项），在显示出的菜单的最下面就能够看到。</p>\n<p>如下图，此时的JMeter是没有安装插件管理器的。</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/40-05-23-174049.png\" class>\n\n<p>我们需要到网站：<a href=\"http://jmeter-plugins.org/downloads/all/%E4%B8%AD%E4%B8%8B%E8%BD%BDJMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8%E3%80%82\">http://jmeter-plugins.org/downloads/all/中下载JMeter插件管理器。</a></p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/40-05-23-174059.png\" class>\n\n<p>上图中很明确的告诉我们:</p>\n<ul>\n<li><p>Installing Plugins:安装插件。</p>\n</li>\n<li><p>The easiest way to get the plugins is to install Plugins Manager. Then you’ll be able to install any other plugins just by clicking a checkbox.</p>\n<p>获得插件的最简单方法是安装插件管理器。</p>\n<p>然后，您只需要单击复选框即可安装任何其他插件。</p>\n</li>\n<li><p>Download plugins-manager.jar and put it into lib&#x2F;ext directory, then restart JMeter</p>\n<p>下载plugins-manager.jar并将其放入lib&#x2F;ext 目录中。</p>\n</li>\n</ul>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174105.png\" class>\n\n<p>然后重新启动JMeter。</p>\n<p>在点击Options（选项），就能看到JMeter插件管理器Plugins Manager选项了。</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174109.png\" class>\n\n<p>总结：</p>\n<p>安装JMeter插件管理器大概流程是：</p>\n<ul>\n<li>JMeter插件管理器，是一个jar文件。</li>\n<li>将该文件拷贝到JMeter安装目录中的”\\lib\\ext”目录下。</li>\n<li>然后重启JMeter</li>\n</ul>\n<p>这样就可以使用JMeter插件管理器了。</p>\n<p>同时在JMeter界面中的快捷工具栏中，也会出现插件管理器图标，如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174115.png\" class>\n\n<h3 id=\"2-JMeter插件管理器界面说明\"><a href=\"#2-JMeter插件管理器界面说明\" class=\"headerlink\" title=\"2.JMeter插件管理器界面说明\"></a>2.<strong>JMeter插件管理器界面说明</strong></h3><p>我们点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174120.png\" class>\n\n<p>说明：</p>\n<ul>\n<li>Installed Plugins(已安装的插件)：即插件目录中已经包含的插件，可以通过选中勾选框，来使用这些插件。</li>\n<li>Available Plugins（可下载的插件）:即可以安装的一些插件，通过选中勾选框，来下载你所需要的插件。</li>\n<li>Upgrades（可更新的插件）：即显示有最新版本的一些插件，通过选中勾选框，点击界面右下角的Apply Changes and Restart JMeter按钮来下载，之后更新重启JMeter。</li>\n</ul>\n<p>提示：一般不建议进行更新操作，因为最新的插件都有一些兼容问题，而且很可能导致JMeter无法使用（经常报加载类异常错误）！！！</p>\n<h3 id=\"3-JMeter插件安装和卸载\"><a href=\"#3-JMeter插件安装和卸载\" class=\"headerlink\" title=\"3.JMeter插件安装和卸载\"></a>3.JMeter插件安装和卸载</h3><h4 id=\"（1）通过JMeter插件管理器安装插件\"><a href=\"#（1）通过JMeter插件管理器安装插件\" class=\"headerlink\" title=\"（1）通过JMeter插件管理器安装插件\"></a>（1）通过JMeter插件管理器安装插件</h4><p>点击Option（选项），然后点击Plugins Manager选项，进入JMeter插件管理器。</p>\n<p>然后点击Available Plugins，来下载我们所需的插件，例如以PerfMon插件为例:</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174125.png\" class>\n\n<p>勾选PerfMon插件，点击界面右下角的Apply Changes and Restart JMeter按钮安装。</p>\n<p>下载安装好后，就可以在Installed Plugins列表中看到PerfMon插件了。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174130.png\" class>\n\n<p>提示：下载下来的PerfMon插件文件，会出现在JMeter的apache-jmeter-5.0、lib\\ext目录中。</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174143.png\" class>\n\n<h4 id=\"（2）通过JMeter插件管理器卸载插件\"><a href=\"#（2）通过JMeter插件管理器卸载插件\" class=\"headerlink\" title=\"（2）通过JMeter插件管理器卸载插件\"></a>（2）通过JMeter插件管理器卸载插件</h4><p>关于卸载插件，可以在Installed Plugins列表中，取消勾选perfMon插件，然后点击Apply Changes and Restart JMeter按钮。这样就是把PerfMon插件卸载掉，同时也删除了apache-jmeter-5.0\\lib\\ext目录中插件文件。（如果有需要可以再按照上面的步骤安装所需要的插件）</p>\n<p>重点提示：</p>\n<p>Review Changes窗格很重要，它列出了在点击”Apply”按钮后应该完成的所有更改。</p>\n<p>有时插件之间存在依赖关系，因此可能会有额外的插件卸载，所以在应用之前先回顾一下变化。</p>\n<p>如下图：</p>\n<img src=\"/2023/09/05/JMeter%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1/41-05-23-174149.png\" class>\n\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"2.JMeter的安装和启动","date":"2023-09-05T09:17:41.000Z","cover":"https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png","_content":"\n## JMeter的安装和启动\n\n#### 1. 安装Java环境\n\n由于JMeter是纯Java的桌面应用程序，因此它的运行环境需要Java环境，即需要安装JDK或JRE。（也就是安装JDK环境）\n\n步骤简要说明:\n\n- 下载并安装JDK\n- 配置环境变量\n\n#### 2. JMeter下载\n\nJMeter官方地址:https://jmeter.apache.org/\n\n{%asset_img 19-05-23-171931.png%}\n\n点击Download Releases进入JMeter下载页面:\n\n{%asset_img 19-05-23-171942.png%}\n\n接下来点击Apache JMeter archives...，我们下载一个5.0版本的JMeter。\n\n{% asset_img 19-05-23-171950.png%}\n\n如下图，点击下载:\n\n{%asset_img 20-05-23-172000.png%}\n\n提示：工具下载成功后，直接解压就可以使用了，不用进行安装。\n\n**注意**:\n\n我们不要点击在Apache JMeter archives...的页面中点击sourse下载JMeter\n\n如下图:\n\n{%asset_img 20-05-23-172014.png%}\n\n进入下载页面:\n\n{%asset_img 20-05-23-172025.png%}\n\n不要下载这个安src.zip的JMeter安装包。因为这个包中的bin目录下并没有ApacheJMeter.jar文件，所有JMeter是无法启动的，双击bin目录中的jmeter.bat文件，会出现下图情况:\n\n{%asset_img 20-05-23-172032.png%}\n\n所以记住，要下载binarles页面中的JMeter安装包。\n\n#### 3.JMeter启动\n\nJMeter解压后的文件夹，进入bin目录中，双击jmeter.bat文件，即可打开JMeter。\n\nJMeter开启会出现如下两个窗口:\n\n{%asset_img 20-05-23-172037.png%}\n\n{%asset_img 20-05-23-172042.png%}\n\n注意：打开的时候会有两个窗口，JMeter的命令窗口和JMeter的图形操作界面，不可以关闭命令窗口。\n\n这样我们就成功启动了JMeter。\n\n#### 4.JMeter切换中文语言\n\nJMeter工具默认是支持简体中文的，需要我们手动切换一下。\n\n如下图：安装完JMeter第一次进入的时候，默认是英文语言显示的。\n\n{%asset_img 20-05-23-172047.png%}\n\n我们可以切换成中文语言：\n\noptions——>Choose Language——>Chinese(Simplified)\n\n就这样很简单，中文显示如下图:\n\n{%asset_img 20-05-23-172055.png%}\n\n这样设置只是暂时把JMeter切换成为中文语言，但是当我们下次再打开JMeter时又恢复了英文，还需要再进行设置，这样一来就很麻烦。\n\n直接改JMeter**的默认语言**\n\n修改JMeter的bin目录下，有一个jmeter.properties文件，这个是JMeter的核心配置文件。\n\n打开文件后，找到language，将language=en改成language=zh或者zh_CN即可，如下。\n\n{%asset_img 21-05-23-172103.png%}\n\n这样每次打开JMeter时，就默认就是中文语言了。\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n\n","source":"_posts/JMeter的安装和启动-1.md","raw":"---\ntitle: 2.JMeter的安装和启动\ndate: 2023-09-05 17:17:41\ntags:\n   - JMeter\ncategories:\n   - JMeter学习 \ncover: https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png\n---\n\n## JMeter的安装和启动\n\n#### 1. 安装Java环境\n\n由于JMeter是纯Java的桌面应用程序，因此它的运行环境需要Java环境，即需要安装JDK或JRE。（也就是安装JDK环境）\n\n步骤简要说明:\n\n- 下载并安装JDK\n- 配置环境变量\n\n#### 2. JMeter下载\n\nJMeter官方地址:https://jmeter.apache.org/\n\n{%asset_img 19-05-23-171931.png%}\n\n点击Download Releases进入JMeter下载页面:\n\n{%asset_img 19-05-23-171942.png%}\n\n接下来点击Apache JMeter archives...，我们下载一个5.0版本的JMeter。\n\n{% asset_img 19-05-23-171950.png%}\n\n如下图，点击下载:\n\n{%asset_img 20-05-23-172000.png%}\n\n提示：工具下载成功后，直接解压就可以使用了，不用进行安装。\n\n**注意**:\n\n我们不要点击在Apache JMeter archives...的页面中点击sourse下载JMeter\n\n如下图:\n\n{%asset_img 20-05-23-172014.png%}\n\n进入下载页面:\n\n{%asset_img 20-05-23-172025.png%}\n\n不要下载这个安src.zip的JMeter安装包。因为这个包中的bin目录下并没有ApacheJMeter.jar文件，所有JMeter是无法启动的，双击bin目录中的jmeter.bat文件，会出现下图情况:\n\n{%asset_img 20-05-23-172032.png%}\n\n所以记住，要下载binarles页面中的JMeter安装包。\n\n#### 3.JMeter启动\n\nJMeter解压后的文件夹，进入bin目录中，双击jmeter.bat文件，即可打开JMeter。\n\nJMeter开启会出现如下两个窗口:\n\n{%asset_img 20-05-23-172037.png%}\n\n{%asset_img 20-05-23-172042.png%}\n\n注意：打开的时候会有两个窗口，JMeter的命令窗口和JMeter的图形操作界面，不可以关闭命令窗口。\n\n这样我们就成功启动了JMeter。\n\n#### 4.JMeter切换中文语言\n\nJMeter工具默认是支持简体中文的，需要我们手动切换一下。\n\n如下图：安装完JMeter第一次进入的时候，默认是英文语言显示的。\n\n{%asset_img 20-05-23-172047.png%}\n\n我们可以切换成中文语言：\n\noptions——>Choose Language——>Chinese(Simplified)\n\n就这样很简单，中文显示如下图:\n\n{%asset_img 20-05-23-172055.png%}\n\n这样设置只是暂时把JMeter切换成为中文语言，但是当我们下次再打开JMeter时又恢复了英文，还需要再进行设置，这样一来就很麻烦。\n\n直接改JMeter**的默认语言**\n\n修改JMeter的bin目录下，有一个jmeter.properties文件，这个是JMeter的核心配置文件。\n\n打开文件后，找到language，将language=en改成language=zh或者zh_CN即可，如下。\n\n{%asset_img 21-05-23-172103.png%}\n\n这样每次打开JMeter时，就默认就是中文语言了。\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n\n","slug":"JMeter的安装和启动-1","published":1,"updated":"2023-09-19T03:56:04.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4np7000tfw48dwecbjdm","content":"<h2 id=\"JMeter的安装和启动\"><a href=\"#JMeter的安装和启动\" class=\"headerlink\" title=\"JMeter的安装和启动\"></a>JMeter的安装和启动</h2><h4 id=\"1-安装Java环境\"><a href=\"#1-安装Java环境\" class=\"headerlink\" title=\"1. 安装Java环境\"></a>1. 安装Java环境</h4><p>由于JMeter是纯Java的桌面应用程序，因此它的运行环境需要Java环境，即需要安装JDK或JRE。（也就是安装JDK环境）</p>\n<p>步骤简要说明:</p>\n<ul>\n<li>下载并安装JDK</li>\n<li>配置环境变量</li>\n</ul>\n<h4 id=\"2-JMeter下载\"><a href=\"#2-JMeter下载\" class=\"headerlink\" title=\"2. JMeter下载\"></a>2. JMeter下载</h4><p>JMeter官方地址:<a href=\"https://jmeter.apache.org/\">https://jmeter.apache.org/</a></p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/19-05-23-171931.png\" class>\n\n<p>点击Download Releases进入JMeter下载页面:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/19-05-23-171942.png\" class>\n\n<p>接下来点击Apache JMeter archives…，我们下载一个5.0版本的JMeter。</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/19-05-23-171950.png\" class>\n\n<p>如下图，点击下载:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172000.png\" class>\n\n<p>提示：工具下载成功后，直接解压就可以使用了，不用进行安装。</p>\n<p><strong>注意</strong>:</p>\n<p>我们不要点击在Apache JMeter archives…的页面中点击sourse下载JMeter</p>\n<p>如下图:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172014.png\" class>\n\n<p>进入下载页面:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172025.png\" class>\n\n<p>不要下载这个安src.zip的JMeter安装包。因为这个包中的bin目录下并没有ApacheJMeter.jar文件，所有JMeter是无法启动的，双击bin目录中的jmeter.bat文件，会出现下图情况:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172032.png\" class>\n\n<p>所以记住，要下载binarles页面中的JMeter安装包。</p>\n<h4 id=\"3-JMeter启动\"><a href=\"#3-JMeter启动\" class=\"headerlink\" title=\"3.JMeter启动\"></a>3.JMeter启动</h4><p>JMeter解压后的文件夹，进入bin目录中，双击jmeter.bat文件，即可打开JMeter。</p>\n<p>JMeter开启会出现如下两个窗口:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172037.png\" class>\n\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172042.png\" class>\n\n<p>注意：打开的时候会有两个窗口，JMeter的命令窗口和JMeter的图形操作界面，不可以关闭命令窗口。</p>\n<p>这样我们就成功启动了JMeter。</p>\n<h4 id=\"4-JMeter切换中文语言\"><a href=\"#4-JMeter切换中文语言\" class=\"headerlink\" title=\"4.JMeter切换中文语言\"></a>4.JMeter切换中文语言</h4><p>JMeter工具默认是支持简体中文的，需要我们手动切换一下。</p>\n<p>如下图：安装完JMeter第一次进入的时候，默认是英文语言显示的。</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172047.png\" class>\n\n<p>我们可以切换成中文语言：</p>\n<p>options——&gt;Choose Language——&gt;Chinese(Simplified)</p>\n<p>就这样很简单，中文显示如下图:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172055.png\" class>\n\n<p>这样设置只是暂时把JMeter切换成为中文语言，但是当我们下次再打开JMeter时又恢复了英文，还需要再进行设置，这样一来就很麻烦。</p>\n<p>直接改JMeter<strong>的默认语言</strong></p>\n<p>修改JMeter的bin目录下，有一个jmeter.properties文件，这个是JMeter的核心配置文件。</p>\n<p>打开文件后，找到language，将language&#x3D;en改成language&#x3D;zh或者zh_CN即可，如下。</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/21-05-23-172103.png\" class>\n\n<p>这样每次打开JMeter时，就默认就是中文语言了。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"JMeter的安装和启动\"><a href=\"#JMeter的安装和启动\" class=\"headerlink\" title=\"JMeter的安装和启动\"></a>JMeter的安装和启动</h2><h4 id=\"1-安装Java环境\"><a href=\"#1-安装Java环境\" class=\"headerlink\" title=\"1. 安装Java环境\"></a>1. 安装Java环境</h4><p>由于JMeter是纯Java的桌面应用程序，因此它的运行环境需要Java环境，即需要安装JDK或JRE。（也就是安装JDK环境）</p>\n<p>步骤简要说明:</p>\n<ul>\n<li>下载并安装JDK</li>\n<li>配置环境变量</li>\n</ul>\n<h4 id=\"2-JMeter下载\"><a href=\"#2-JMeter下载\" class=\"headerlink\" title=\"2. JMeter下载\"></a>2. JMeter下载</h4><p>JMeter官方地址:<a href=\"https://jmeter.apache.org/\">https://jmeter.apache.org/</a></p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/19-05-23-171931.png\" class>\n\n<p>点击Download Releases进入JMeter下载页面:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/19-05-23-171942.png\" class>\n\n<p>接下来点击Apache JMeter archives…，我们下载一个5.0版本的JMeter。</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/19-05-23-171950.png\" class>\n\n<p>如下图，点击下载:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172000.png\" class>\n\n<p>提示：工具下载成功后，直接解压就可以使用了，不用进行安装。</p>\n<p><strong>注意</strong>:</p>\n<p>我们不要点击在Apache JMeter archives…的页面中点击sourse下载JMeter</p>\n<p>如下图:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172014.png\" class>\n\n<p>进入下载页面:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172025.png\" class>\n\n<p>不要下载这个安src.zip的JMeter安装包。因为这个包中的bin目录下并没有ApacheJMeter.jar文件，所有JMeter是无法启动的，双击bin目录中的jmeter.bat文件，会出现下图情况:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172032.png\" class>\n\n<p>所以记住，要下载binarles页面中的JMeter安装包。</p>\n<h4 id=\"3-JMeter启动\"><a href=\"#3-JMeter启动\" class=\"headerlink\" title=\"3.JMeter启动\"></a>3.JMeter启动</h4><p>JMeter解压后的文件夹，进入bin目录中，双击jmeter.bat文件，即可打开JMeter。</p>\n<p>JMeter开启会出现如下两个窗口:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172037.png\" class>\n\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172042.png\" class>\n\n<p>注意：打开的时候会有两个窗口，JMeter的命令窗口和JMeter的图形操作界面，不可以关闭命令窗口。</p>\n<p>这样我们就成功启动了JMeter。</p>\n<h4 id=\"4-JMeter切换中文语言\"><a href=\"#4-JMeter切换中文语言\" class=\"headerlink\" title=\"4.JMeter切换中文语言\"></a>4.JMeter切换中文语言</h4><p>JMeter工具默认是支持简体中文的，需要我们手动切换一下。</p>\n<p>如下图：安装完JMeter第一次进入的时候，默认是英文语言显示的。</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172047.png\" class>\n\n<p>我们可以切换成中文语言：</p>\n<p>options——&gt;Choose Language——&gt;Chinese(Simplified)</p>\n<p>就这样很简单，中文显示如下图:</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/20-05-23-172055.png\" class>\n\n<p>这样设置只是暂时把JMeter切换成为中文语言，但是当我们下次再打开JMeter时又恢复了英文，还需要再进行设置，这样一来就很麻烦。</p>\n<p>直接改JMeter<strong>的默认语言</strong></p>\n<p>修改JMeter的bin目录下，有一个jmeter.properties文件，这个是JMeter的核心配置文件。</p>\n<p>打开文件后，找到language，将language&#x3D;en改成language&#x3D;zh或者zh_CN即可，如下。</p>\n<img src=\"/2023/09/05/JMeter%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8-1/21-05-23-172103.png\" class>\n\n<p>这样每次打开JMeter时，就默认就是中文语言了。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"Nginx负载均衡","date":"2023-09-12T07:49:58.000Z","keywords":"Nginx基础学习","abbrlink":"","decription":null,"top_img":null,"cover":"https://s2.loli.net/2023/09/12/9OemvhVWbf785rQ.png","_content":"\n## **Nginx（负载均衡配置）**\n\n### 1.**在Nginx中配置负载均衡可以通过以下步骤进行**\n\n1. #### **安装Nginx**\n\n   首先，确保已经在服务器上安装了Nginx。可以使用适合你的Linux发行版本的包管理器来安装Nginx。\n\n2. #### **创建上游服务器列表**\n\n   在Nginx配置文件中，定义一个上游服务器列表，即后端应用服务器的地址和端口。可以在nginx.conf或者sites-available目录中配置文件中进行配置。例如：\n\n   ```nginx\n   upstream backend {\n       server backend1.exaple.com:8000;\n       server backend2.exaple.com:8000;\n       server backend3.exaple.com:8000;\n       ........\n       \n   }\n   ```\n\n   在此示例中，我们定义了一个名为\"backend\"的上游服务器列表，并指定了一个后端应用服务器的地址和端口。\n\n3. #### **配置负载均衡策略**\n\n   在Nginx配置文件中，配置负载均衡策略。可以使用不同的负载均衡算法，如轮询（默认），IP哈希，最少连接等。例如：\n\n   ```nginx\n   http {\n       upstream backend {\n           server backend1.example.com:8000;\n           server backend2.example.com:8000;\n           server backend3.example.com:8000;\n           server backend4.example.com:8000;\n           .......\n       }\n       \n       server {\n           listen 80,\n               \n           localhost / {\n              proxy_pass http://backend;\n              proxy_set_header Host $host;\n              proxy_set_header X-Real-IP $remote_addr;\n           }\n       }\n   }\n   ```\n\n   在此示例中，我们在localhost块中使用了proxy_pass指令来将请求发送到上游服务器列表\"backend\"。还使用了proxy_set_header指令来设置一些HTTP头信息。\n\n4. #### **重启Nginx**\n\n   完成上述配置后，保存配置文件并重启Nginx服务，使其生效。可以使用以下命令重启Nginx：\n\n   ```shell\n   sudo service nginx restart\n   ```\n\n   或者，如果使用的是Systemd系统，可以使用以下命令：\n\n   ```shell\n   sudo systemctl restart nginx\n   ```\n\n   现在，Nginx将根据你的负载均衡配置请求分发到上游服务器列表中的后端应用服务器。你可以根据实际需求进行负载均衡配置，包括添加更多的后端服务器、调整负载均衡算法等。\n\n### **实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。**\n\n### **环境准备**\n\n1. 使用VMware虚拟机安装三台linux的服务器系统,分别2台centos 6,1台Red Hat. \n2. Nginx压缩包,tomcat压缩包,JDK安装包,gcc\\gcc-c++安装\n3. Mobaxterm远程终端软件\n\n### **开始搭建服务器:**\n\n#### tomcat安装(压缩包名-apache-tomcat-7.0.57.tar.gz):\n\n```shell\ntar -xvf apache-tomcat-7.0.57.tar.gz #解压\n```\n\n或`\n\n```shell\ntar -xvzf apache-tomcat-7.0.57.tar.gz #解压\n```\n\n#### JDK安装(安装包名-jdk-7-linux-i586.rpm)\n\n```shell\n rpm -ivh jdk-7-linux-i586.rpm --nodeps --force\n```\n\n#### Nginx安装(压缩包名-nginx-1.13.9.tar.gz)\n\n```shell\ntar -xvf nginx-1.13.9.tar.gz \n```\n\n或\n\n```shell\ntar -xvzf nginx-1.13.9.tar.gz\n```\n\n#### gcc\\gcc-c++安装\n\n```\nrpm -ivh /gcc *.rpm\n```\n\n```\nrpm -ivh /gcc-c++ *.rpm\n```\n\n**注意**\n\n关闭防火墙:\n\n```shell\nsudo iptables -F\n```\n\n或\n\n```shell\nservice stop firewalld\n```\n\n或\n\n```shell\nsystemctl iptables stop\n```\n\n2台tomcat服务器分别进入各自的启动目录下.执行启动文件\n\nlinux:\n\n双击startup.sh\n\n前者启动无效后,先进入启动目录使用命令:\n\n```shell\n./startup.sh\n```\n\nwindows:\n\n双击startup.bat\n\n前者启动无效后,进入启动目录使用命令:\n\n```shell\nstartup\n```\n\n启动后,访问主机地址+端口号,看看是否能访问出tomcat主页.\n\n然后如上述更改Nginx的配置文件即可.\n\nNginx服务器启动,进入Nginx的bin目录,执行命令:\n\n```shell\n./nginx\n```\n\nNginx的重新启动命令:\n\n```\n./nginx -s reload\n```\n\n### 命令全部通过Mobaxterm远程终端软件控制台执行.\n\n### **扩展:**\n\n安装一个文件夹下的所有RPM文件,你可以使用以下命令来批量安装:\n\n```shell\nrpm -ivh /path/to/folder/*.rpm\n```\n\n其中, /path/to/folder是包含所有RPM文件的文件夹路径.\n\n这个命令使用通配符*.rpm来匹配并安装文件夹的所有RPM文件.\n\n-i选项表示安装软件包.\n\n-v选项表示显示详细的安装过程.\n\n-h选项表示以人类可读的方式显示进度信息.\n\n请注意,这个命令需要管理员权限来执行安装操作.\n\nVIM是一个流行的文本编辑器,经常用于在终端中编辑文件,你可以通过以下命令启动vim:\n\n```shell\nvim filename\n```\n\n其中,  filename是要编辑的文件的名称,如果文件不存在,vim将会创建一个新的文件.\n\n在vim中,你可以使用各种命令来编辑文件,以下是一些常用的vim命令:\n\n- i 进入插入模式,允许你在文件中插入和编辑文本.\n- Esc退出插入模式,返回到正常模式.\n- :w保存文件.\n- :q退出vim.\n- :wq保存文件并退出vim.\n- :q!强制退出vim,丢弃所有修改.\n- /pattern在文件中搜索指定的模式.\n- n在搜索结果中向下移动到下一个匹配项.\n- N在搜索结果中项上移动到上一个匹配项.\n\n对于tomcat服务器启动端口占用问题:\n\n在conf文件中找到tomcat服务器的配置文件-server.xml,\n\n重新配置端口:\n\n```xml\n# 未改动前,默认\n<Connector port=\"8080\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\">\n# 更改后(修改port值为未占用的端口号即可)\n<Connector port=\"8007\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\">\n```\n\n","source":"_posts/Nginx-负载均衡.md","raw":"---\ntitle: Nginx负载均衡\ndate: 2023-09-12 15:49:58\ntags:\n   - Nginx\ncategories:\n   - Nginx搭建\nkeywords: \"Nginx基础学习\"\nabbrlink: \"\"\ndecription:\ntop_img:\ncover: https://s2.loli.net/2023/09/12/9OemvhVWbf785rQ.png\n---\n\n## **Nginx（负载均衡配置）**\n\n### 1.**在Nginx中配置负载均衡可以通过以下步骤进行**\n\n1. #### **安装Nginx**\n\n   首先，确保已经在服务器上安装了Nginx。可以使用适合你的Linux发行版本的包管理器来安装Nginx。\n\n2. #### **创建上游服务器列表**\n\n   在Nginx配置文件中，定义一个上游服务器列表，即后端应用服务器的地址和端口。可以在nginx.conf或者sites-available目录中配置文件中进行配置。例如：\n\n   ```nginx\n   upstream backend {\n       server backend1.exaple.com:8000;\n       server backend2.exaple.com:8000;\n       server backend3.exaple.com:8000;\n       ........\n       \n   }\n   ```\n\n   在此示例中，我们定义了一个名为\"backend\"的上游服务器列表，并指定了一个后端应用服务器的地址和端口。\n\n3. #### **配置负载均衡策略**\n\n   在Nginx配置文件中，配置负载均衡策略。可以使用不同的负载均衡算法，如轮询（默认），IP哈希，最少连接等。例如：\n\n   ```nginx\n   http {\n       upstream backend {\n           server backend1.example.com:8000;\n           server backend2.example.com:8000;\n           server backend3.example.com:8000;\n           server backend4.example.com:8000;\n           .......\n       }\n       \n       server {\n           listen 80,\n               \n           localhost / {\n              proxy_pass http://backend;\n              proxy_set_header Host $host;\n              proxy_set_header X-Real-IP $remote_addr;\n           }\n       }\n   }\n   ```\n\n   在此示例中，我们在localhost块中使用了proxy_pass指令来将请求发送到上游服务器列表\"backend\"。还使用了proxy_set_header指令来设置一些HTTP头信息。\n\n4. #### **重启Nginx**\n\n   完成上述配置后，保存配置文件并重启Nginx服务，使其生效。可以使用以下命令重启Nginx：\n\n   ```shell\n   sudo service nginx restart\n   ```\n\n   或者，如果使用的是Systemd系统，可以使用以下命令：\n\n   ```shell\n   sudo systemctl restart nginx\n   ```\n\n   现在，Nginx将根据你的负载均衡配置请求分发到上游服务器列表中的后端应用服务器。你可以根据实际需求进行负载均衡配置，包括添加更多的后端服务器、调整负载均衡算法等。\n\n### **实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。**\n\n### **环境准备**\n\n1. 使用VMware虚拟机安装三台linux的服务器系统,分别2台centos 6,1台Red Hat. \n2. Nginx压缩包,tomcat压缩包,JDK安装包,gcc\\gcc-c++安装\n3. Mobaxterm远程终端软件\n\n### **开始搭建服务器:**\n\n#### tomcat安装(压缩包名-apache-tomcat-7.0.57.tar.gz):\n\n```shell\ntar -xvf apache-tomcat-7.0.57.tar.gz #解压\n```\n\n或`\n\n```shell\ntar -xvzf apache-tomcat-7.0.57.tar.gz #解压\n```\n\n#### JDK安装(安装包名-jdk-7-linux-i586.rpm)\n\n```shell\n rpm -ivh jdk-7-linux-i586.rpm --nodeps --force\n```\n\n#### Nginx安装(压缩包名-nginx-1.13.9.tar.gz)\n\n```shell\ntar -xvf nginx-1.13.9.tar.gz \n```\n\n或\n\n```shell\ntar -xvzf nginx-1.13.9.tar.gz\n```\n\n#### gcc\\gcc-c++安装\n\n```\nrpm -ivh /gcc *.rpm\n```\n\n```\nrpm -ivh /gcc-c++ *.rpm\n```\n\n**注意**\n\n关闭防火墙:\n\n```shell\nsudo iptables -F\n```\n\n或\n\n```shell\nservice stop firewalld\n```\n\n或\n\n```shell\nsystemctl iptables stop\n```\n\n2台tomcat服务器分别进入各自的启动目录下.执行启动文件\n\nlinux:\n\n双击startup.sh\n\n前者启动无效后,先进入启动目录使用命令:\n\n```shell\n./startup.sh\n```\n\nwindows:\n\n双击startup.bat\n\n前者启动无效后,进入启动目录使用命令:\n\n```shell\nstartup\n```\n\n启动后,访问主机地址+端口号,看看是否能访问出tomcat主页.\n\n然后如上述更改Nginx的配置文件即可.\n\nNginx服务器启动,进入Nginx的bin目录,执行命令:\n\n```shell\n./nginx\n```\n\nNginx的重新启动命令:\n\n```\n./nginx -s reload\n```\n\n### 命令全部通过Mobaxterm远程终端软件控制台执行.\n\n### **扩展:**\n\n安装一个文件夹下的所有RPM文件,你可以使用以下命令来批量安装:\n\n```shell\nrpm -ivh /path/to/folder/*.rpm\n```\n\n其中, /path/to/folder是包含所有RPM文件的文件夹路径.\n\n这个命令使用通配符*.rpm来匹配并安装文件夹的所有RPM文件.\n\n-i选项表示安装软件包.\n\n-v选项表示显示详细的安装过程.\n\n-h选项表示以人类可读的方式显示进度信息.\n\n请注意,这个命令需要管理员权限来执行安装操作.\n\nVIM是一个流行的文本编辑器,经常用于在终端中编辑文件,你可以通过以下命令启动vim:\n\n```shell\nvim filename\n```\n\n其中,  filename是要编辑的文件的名称,如果文件不存在,vim将会创建一个新的文件.\n\n在vim中,你可以使用各种命令来编辑文件,以下是一些常用的vim命令:\n\n- i 进入插入模式,允许你在文件中插入和编辑文本.\n- Esc退出插入模式,返回到正常模式.\n- :w保存文件.\n- :q退出vim.\n- :wq保存文件并退出vim.\n- :q!强制退出vim,丢弃所有修改.\n- /pattern在文件中搜索指定的模式.\n- n在搜索结果中向下移动到下一个匹配项.\n- N在搜索结果中项上移动到上一个匹配项.\n\n对于tomcat服务器启动端口占用问题:\n\n在conf文件中找到tomcat服务器的配置文件-server.xml,\n\n重新配置端口:\n\n```xml\n# 未改动前,默认\n<Connector port=\"8080\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\">\n# 更改后(修改port值为未占用的端口号即可)\n<Connector port=\"8007\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\">\n```\n\n","slug":"Nginx-负载均衡","published":1,"updated":"2023-09-12T07:58:51.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4np9000vfw481oqeebsd","content":"<h2 id=\"Nginx（负载均衡配置）\"><a href=\"#Nginx（负载均衡配置）\" class=\"headerlink\" title=\"Nginx（负载均衡配置）\"></a><strong>Nginx（负载均衡配置）</strong></h2><h3 id=\"1-在Nginx中配置负载均衡可以通过以下步骤进行\"><a href=\"#1-在Nginx中配置负载均衡可以通过以下步骤进行\" class=\"headerlink\" title=\"1.在Nginx中配置负载均衡可以通过以下步骤进行\"></a>1.<strong>在Nginx中配置负载均衡可以通过以下步骤进行</strong></h3><ol>\n<li><h4 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a><strong>安装Nginx</strong></h4><p>首先，确保已经在服务器上安装了Nginx。可以使用适合你的Linux发行版本的包管理器来安装Nginx。</p>\n</li>\n<li><h4 id=\"创建上游服务器列表\"><a href=\"#创建上游服务器列表\" class=\"headerlink\" title=\"创建上游服务器列表\"></a><strong>创建上游服务器列表</strong></h4><p>在Nginx配置文件中，定义一个上游服务器列表，即后端应用服务器的地址和端口。可以在nginx.conf或者sites-available目录中配置文件中进行配置。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> backend1.exaple.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> backend2.exaple.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> backend3.exaple.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">    ........</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在此示例中，我们定义了一个名为”backend”的上游服务器列表，并指定了一个后端应用服务器的地址和端口。</p>\n</li>\n<li><h4 id=\"配置负载均衡策略\"><a href=\"#配置负载均衡策略\" class=\"headerlink\" title=\"配置负载均衡策略\"></a><strong>配置负载均衡策略</strong></h4><p>在Nginx配置文件中，配置负载均衡策略。可以使用不同的负载均衡算法，如轮询（默认），IP哈希，最少连接等。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend1.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend2.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend3.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend4.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        .......</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>,</span><br><span class=\"line\">            </span><br><span class=\"line\">        localhost / &#123;</span><br><span class=\"line\">           <span class=\"attribute\">proxy_pass</span> http://backend;</span><br><span class=\"line\">           <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">           <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在此示例中，我们在localhost块中使用了proxy_pass指令来将请求发送到上游服务器列表”backend”。还使用了proxy_set_header指令来设置一些HTTP头信息。</p>\n</li>\n<li><h4 id=\"重启Nginx\"><a href=\"#重启Nginx\" class=\"headerlink\" title=\"重启Nginx\"></a><strong>重启Nginx</strong></h4><p>完成上述配置后，保存配置文件并重启Nginx服务，使其生效。可以使用以下命令重启Nginx：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service nginx restart</span><br></pre></td></tr></table></figure>\n\n<p>或者，如果使用的是Systemd系统，可以使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure>\n\n<p>现在，Nginx将根据你的负载均衡配置请求分发到上游服务器列表中的后端应用服务器。你可以根据实际需求进行负载均衡配置，包括添加更多的后端服务器、调整负载均衡算法等。</p>\n</li>\n</ol>\n<h3 id=\"实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。\"><a href=\"#实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。\" class=\"headerlink\" title=\"实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。\"></a><strong>实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。</strong></h3><h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a><strong>环境准备</strong></h3><ol>\n<li>使用VMware虚拟机安装三台linux的服务器系统,分别2台centos 6,1台Red Hat. </li>\n<li>Nginx压缩包,tomcat压缩包,JDK安装包,gcc\\gcc-c++安装</li>\n<li>Mobaxterm远程终端软件</li>\n</ol>\n<h3 id=\"开始搭建服务器\"><a href=\"#开始搭建服务器\" class=\"headerlink\" title=\"开始搭建服务器:\"></a><strong>开始搭建服务器:</strong></h3><h4 id=\"tomcat安装-压缩包名-apache-tomcat-7-0-57-tar-gz\"><a href=\"#tomcat安装-压缩包名-apache-tomcat-7-0-57-tar-gz\" class=\"headerlink\" title=\"tomcat安装(压缩包名-apache-tomcat-7.0.57.tar.gz):\"></a>tomcat安装(压缩包名-apache-tomcat-7.0.57.tar.gz):</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf apache-tomcat-7.0.57.tar.gz #解压</span><br></pre></td></tr></table></figure>\n\n<p>或&#96;</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf apache-tomcat-7.0.57.tar.gz #解压</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JDK安装-安装包名-jdk-7-linux-i586-rpm\"><a href=\"#JDK安装-安装包名-jdk-7-linux-i586-rpm\" class=\"headerlink\" title=\"JDK安装(安装包名-jdk-7-linux-i586.rpm)\"></a>JDK安装(安装包名-jdk-7-linux-i586.rpm)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh jdk-7-linux-i586.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Nginx安装-压缩包名-nginx-1-13-9-tar-gz\"><a href=\"#Nginx安装-压缩包名-nginx-1-13-9-tar-gz\" class=\"headerlink\" title=\"Nginx安装(压缩包名-nginx-1.13.9.tar.gz)\"></a>Nginx安装(压缩包名-nginx-1.13.9.tar.gz)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf nginx-1.13.9.tar.gz </span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf nginx-1.13.9.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"gcc-gcc-c-安装\"><a href=\"#gcc-gcc-c-安装\" class=\"headerlink\" title=\"gcc\\gcc-c++安装\"></a>gcc\\gcc-c++安装</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /gcc *.rpm</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /gcc-c++ *.rpm</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong></p>\n<p>关闭防火墙:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo iptables -F</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service stop firewalld</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl iptables stop</span><br></pre></td></tr></table></figure>\n\n<p>2台tomcat服务器分别进入各自的启动目录下.执行启动文件</p>\n<p>linux:</p>\n<p>双击startup.sh</p>\n<p>前者启动无效后,先进入启动目录使用命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./startup.sh</span><br></pre></td></tr></table></figure>\n\n<p>windows:</p>\n<p>双击startup.bat</p>\n<p>前者启动无效后,进入启动目录使用命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startup</span><br></pre></td></tr></table></figure>\n\n<p>启动后,访问主机地址+端口号,看看是否能访问出tomcat主页.</p>\n<p>然后如上述更改Nginx的配置文件即可.</p>\n<p>Nginx服务器启动,进入Nginx的bin目录,执行命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n\n<p>Nginx的重新启动命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"命令全部通过Mobaxterm远程终端软件控制台执行\"><a href=\"#命令全部通过Mobaxterm远程终端软件控制台执行\" class=\"headerlink\" title=\"命令全部通过Mobaxterm远程终端软件控制台执行.\"></a>命令全部通过Mobaxterm远程终端软件控制台执行.</h3><h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展:\"></a><strong>扩展:</strong></h3><p>安装一个文件夹下的所有RPM文件,你可以使用以下命令来批量安装:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /path/to/folder/*.rpm</span><br></pre></td></tr></table></figure>\n\n<p>其中, &#x2F;path&#x2F;to&#x2F;folder是包含所有RPM文件的文件夹路径.</p>\n<p>这个命令使用通配符*.rpm来匹配并安装文件夹的所有RPM文件.</p>\n<p>-i选项表示安装软件包.</p>\n<p>-v选项表示显示详细的安装过程.</p>\n<p>-h选项表示以人类可读的方式显示进度信息.</p>\n<p>请注意,这个命令需要管理员权限来执行安装操作.</p>\n<p>VIM是一个流行的文本编辑器,经常用于在终端中编辑文件,你可以通过以下命令启动vim:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim filename</span><br></pre></td></tr></table></figure>\n\n<p>其中,  filename是要编辑的文件的名称,如果文件不存在,vim将会创建一个新的文件.</p>\n<p>在vim中,你可以使用各种命令来编辑文件,以下是一些常用的vim命令:</p>\n<ul>\n<li>i 进入插入模式,允许你在文件中插入和编辑文本.</li>\n<li>Esc退出插入模式,返回到正常模式.</li>\n<li>:w保存文件.</li>\n<li>:q退出vim.</li>\n<li>:wq保存文件并退出vim.</li>\n<li>:q!强制退出vim,丢弃所有修改.</li>\n<li>&#x2F;pattern在文件中搜索指定的模式.</li>\n<li>n在搜索结果中向下移动到下一个匹配项.</li>\n<li>N在搜索结果中项上移动到上一个匹配项.</li>\n</ul>\n<p>对于tomcat服务器启动端口占用问题:</p>\n<p>在conf文件中找到tomcat服务器的配置文件-server.xml,</p>\n<p>重新配置端口:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 未改动前,默认</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8080&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span> <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span>&gt;</span></span><br><span class=\"line\"># 更改后(修改port值为未占用的端口号即可)</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8007&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span> <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"Nginx（负载均衡配置）\"><a href=\"#Nginx（负载均衡配置）\" class=\"headerlink\" title=\"Nginx（负载均衡配置）\"></a><strong>Nginx（负载均衡配置）</strong></h2><h3 id=\"1-在Nginx中配置负载均衡可以通过以下步骤进行\"><a href=\"#1-在Nginx中配置负载均衡可以通过以下步骤进行\" class=\"headerlink\" title=\"1.在Nginx中配置负载均衡可以通过以下步骤进行\"></a>1.<strong>在Nginx中配置负载均衡可以通过以下步骤进行</strong></h3><ol>\n<li><h4 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a><strong>安装Nginx</strong></h4><p>首先，确保已经在服务器上安装了Nginx。可以使用适合你的Linux发行版本的包管理器来安装Nginx。</p>\n</li>\n<li><h4 id=\"创建上游服务器列表\"><a href=\"#创建上游服务器列表\" class=\"headerlink\" title=\"创建上游服务器列表\"></a><strong>创建上游服务器列表</strong></h4><p>在Nginx配置文件中，定义一个上游服务器列表，即后端应用服务器的地址和端口。可以在nginx.conf或者sites-available目录中配置文件中进行配置。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> backend1.exaple.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> backend2.exaple.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> backend3.exaple.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">    ........</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在此示例中，我们定义了一个名为”backend”的上游服务器列表，并指定了一个后端应用服务器的地址和端口。</p>\n</li>\n<li><h4 id=\"配置负载均衡策略\"><a href=\"#配置负载均衡策略\" class=\"headerlink\" title=\"配置负载均衡策略\"></a><strong>配置负载均衡策略</strong></h4><p>在Nginx配置文件中，配置负载均衡策略。可以使用不同的负载均衡算法，如轮询（默认），IP哈希，最少连接等。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">upstream</span> backend &#123;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend1.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend2.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend3.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend4.example.com:<span class=\"number\">8000</span>;</span><br><span class=\"line\">        .......</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>,</span><br><span class=\"line\">            </span><br><span class=\"line\">        localhost / &#123;</span><br><span class=\"line\">           <span class=\"attribute\">proxy_pass</span> http://backend;</span><br><span class=\"line\">           <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">           <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在此示例中，我们在localhost块中使用了proxy_pass指令来将请求发送到上游服务器列表”backend”。还使用了proxy_set_header指令来设置一些HTTP头信息。</p>\n</li>\n<li><h4 id=\"重启Nginx\"><a href=\"#重启Nginx\" class=\"headerlink\" title=\"重启Nginx\"></a><strong>重启Nginx</strong></h4><p>完成上述配置后，保存配置文件并重启Nginx服务，使其生效。可以使用以下命令重启Nginx：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service nginx restart</span><br></pre></td></tr></table></figure>\n\n<p>或者，如果使用的是Systemd系统，可以使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure>\n\n<p>现在，Nginx将根据你的负载均衡配置请求分发到上游服务器列表中的后端应用服务器。你可以根据实际需求进行负载均衡配置，包括添加更多的后端服务器、调整负载均衡算法等。</p>\n</li>\n</ol>\n<h3 id=\"实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。\"><a href=\"#实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。\" class=\"headerlink\" title=\"实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。\"></a><strong>实验：搭建三台服务器，其中2台tomcat服务器、1台Nginx服务器，并用Nginx代理2台tomcat服务器实现负载均衡。</strong></h3><h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a><strong>环境准备</strong></h3><ol>\n<li>使用VMware虚拟机安装三台linux的服务器系统,分别2台centos 6,1台Red Hat. </li>\n<li>Nginx压缩包,tomcat压缩包,JDK安装包,gcc\\gcc-c++安装</li>\n<li>Mobaxterm远程终端软件</li>\n</ol>\n<h3 id=\"开始搭建服务器\"><a href=\"#开始搭建服务器\" class=\"headerlink\" title=\"开始搭建服务器:\"></a><strong>开始搭建服务器:</strong></h3><h4 id=\"tomcat安装-压缩包名-apache-tomcat-7-0-57-tar-gz\"><a href=\"#tomcat安装-压缩包名-apache-tomcat-7-0-57-tar-gz\" class=\"headerlink\" title=\"tomcat安装(压缩包名-apache-tomcat-7.0.57.tar.gz):\"></a>tomcat安装(压缩包名-apache-tomcat-7.0.57.tar.gz):</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf apache-tomcat-7.0.57.tar.gz #解压</span><br></pre></td></tr></table></figure>\n\n<p>或&#96;</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf apache-tomcat-7.0.57.tar.gz #解压</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JDK安装-安装包名-jdk-7-linux-i586-rpm\"><a href=\"#JDK安装-安装包名-jdk-7-linux-i586-rpm\" class=\"headerlink\" title=\"JDK安装(安装包名-jdk-7-linux-i586.rpm)\"></a>JDK安装(安装包名-jdk-7-linux-i586.rpm)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh jdk-7-linux-i586.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Nginx安装-压缩包名-nginx-1-13-9-tar-gz\"><a href=\"#Nginx安装-压缩包名-nginx-1-13-9-tar-gz\" class=\"headerlink\" title=\"Nginx安装(压缩包名-nginx-1.13.9.tar.gz)\"></a>Nginx安装(压缩包名-nginx-1.13.9.tar.gz)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf nginx-1.13.9.tar.gz </span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf nginx-1.13.9.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"gcc-gcc-c-安装\"><a href=\"#gcc-gcc-c-安装\" class=\"headerlink\" title=\"gcc\\gcc-c++安装\"></a>gcc\\gcc-c++安装</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /gcc *.rpm</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /gcc-c++ *.rpm</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong></p>\n<p>关闭防火墙:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo iptables -F</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service stop firewalld</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl iptables stop</span><br></pre></td></tr></table></figure>\n\n<p>2台tomcat服务器分别进入各自的启动目录下.执行启动文件</p>\n<p>linux:</p>\n<p>双击startup.sh</p>\n<p>前者启动无效后,先进入启动目录使用命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./startup.sh</span><br></pre></td></tr></table></figure>\n\n<p>windows:</p>\n<p>双击startup.bat</p>\n<p>前者启动无效后,进入启动目录使用命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startup</span><br></pre></td></tr></table></figure>\n\n<p>启动后,访问主机地址+端口号,看看是否能访问出tomcat主页.</p>\n<p>然后如上述更改Nginx的配置文件即可.</p>\n<p>Nginx服务器启动,进入Nginx的bin目录,执行命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n\n<p>Nginx的重新启动命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"命令全部通过Mobaxterm远程终端软件控制台执行\"><a href=\"#命令全部通过Mobaxterm远程终端软件控制台执行\" class=\"headerlink\" title=\"命令全部通过Mobaxterm远程终端软件控制台执行.\"></a>命令全部通过Mobaxterm远程终端软件控制台执行.</h3><h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展:\"></a><strong>扩展:</strong></h3><p>安装一个文件夹下的所有RPM文件,你可以使用以下命令来批量安装:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /path/to/folder/*.rpm</span><br></pre></td></tr></table></figure>\n\n<p>其中, &#x2F;path&#x2F;to&#x2F;folder是包含所有RPM文件的文件夹路径.</p>\n<p>这个命令使用通配符*.rpm来匹配并安装文件夹的所有RPM文件.</p>\n<p>-i选项表示安装软件包.</p>\n<p>-v选项表示显示详细的安装过程.</p>\n<p>-h选项表示以人类可读的方式显示进度信息.</p>\n<p>请注意,这个命令需要管理员权限来执行安装操作.</p>\n<p>VIM是一个流行的文本编辑器,经常用于在终端中编辑文件,你可以通过以下命令启动vim:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim filename</span><br></pre></td></tr></table></figure>\n\n<p>其中,  filename是要编辑的文件的名称,如果文件不存在,vim将会创建一个新的文件.</p>\n<p>在vim中,你可以使用各种命令来编辑文件,以下是一些常用的vim命令:</p>\n<ul>\n<li>i 进入插入模式,允许你在文件中插入和编辑文本.</li>\n<li>Esc退出插入模式,返回到正常模式.</li>\n<li>:w保存文件.</li>\n<li>:q退出vim.</li>\n<li>:wq保存文件并退出vim.</li>\n<li>:q!强制退出vim,丢弃所有修改.</li>\n<li>&#x2F;pattern在文件中搜索指定的模式.</li>\n<li>n在搜索结果中向下移动到下一个匹配项.</li>\n<li>N在搜索结果中项上移动到上一个匹配项.</li>\n</ul>\n<p>对于tomcat服务器启动端口占用问题:</p>\n<p>在conf文件中找到tomcat服务器的配置文件-server.xml,</p>\n<p>重新配置端口:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 未改动前,默认</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8080&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span> <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span>&gt;</span></span><br><span class=\"line\"># 更改后(修改port值为未占用的端口号即可)</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8007&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span> <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"1.Selenium基础学习","date":"2023-09-07T01:17:41.000Z","keywords":"Selenium","abbrlink":"","decription":null,"top_img":null,"cover":"https://s2.loli.net/2023/09/07/FrGsiH8PfTSD2jg.png","_content":"\n### **Selenium框架---**\n\n### （Web自动化测试工具）参考[安装Selenium类库 | Selenium](https://www.selenium.dev/zh-cn/documentation/webdriver/getting_started/install_library/)\n\n#### 1.\t简介\n\nSelenium通过使用WebDriver支持市场上所有主流浏览器的自动化。\n\nweb Driver是一个API和协议，它定义了一个语言中立的接口，用于控制web浏览器的行为。\n\n每个浏览器都有一个特定的WebDriver实现，称为驱动程序。\n\n驱动程序是负责委派给浏览器的组件，并处理与Selenium和浏览器之间的通信。\n\nSelenium在可能的情况下使用这些第三方驱动程序，但是在这些驱动程序不存在的情况下，它也提供了由项目自己维护的驱动程序。\n\nSelenium框架通过一个面向用户的界面将这些部分连接在一起，该界面允许透明地使用不同的浏览器后端，从而实现跨浏览器和跨平台自动化。\n\n##### 1.1\t安装Selenium类库（配置自动化的浏览器）\n\n###### 首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\n\n###### Selenium安装方式：\n\n###### Pip\n\n###### pip \tinstall \tselenium\n\n##### 1.2\t第一个Selenium脚本\n\n###### **八大基本组成部分**\n\nSelenium所做的一切，就是发送给浏览器命令，用以执行某些操作或为信息发送请求。您将使用Selenium执行的大部分操作，都是以下基本命令的组合：\n\n1. ###### \t使用驱动实例开启会话\n\n   ```python\n   driver = webdriver.Chrome()\n   ```\n\n2. ​      **在浏览器上执行操作**\n\n   ```python\n   #在本例中，我们导航到一个网页\n   driver.get(url)\n   ```\n\n   \n\n3. ​     **请求浏览器信息**\n\n   ```python\n   #您可以请求一系列关于浏览器的信息，包括窗口句柄、浏览器尺寸/位置、cookie、警报等\n   title = driver.title\n   ```\n\n   \n\n4. ​        **建立等待策略**\n\n   ```python\n   #将代码与浏览器的当前状态同步是Selenium面临的最大挑战之一，做好它是一个高级主题。\n   #基本上，您希望在尝试定位元素之前，确保该元素位于页面上，并且在尝试与该元素交互之前，该元素处于可交互状态\n   #隐式等待很少是最好的解决方案，但在这里最容易演示，所有我们将使用它作为占位符\n   driver.implicitly_wait(0.5)\n   ```\n\n   \n\n5. ​       **发送命令查找元素**\n\n   ```python\n   #大多数Selenium会话中主要命令都与元素相关，如果不先找到元素，就无法与之交互\n   text_box = driver.find_element(by=By.NAME, Value=\"my-text\")\n   submit_button = driver.find_element(by=By.CSS_SELECTOR, value=\"button\")\n   ```\n\n   \n\n6. ​       **操作元素**\n\n   ```python\n   #对于一个元素，只有少数几个操作可以执行，但您将经常使用它们\n   text_box.send_keys(\"Selenium\")\n   submit_button.click()\n   ```\n\n   \n\n7. ​       **获取元素信息**\n\n   ```python\n   #元素存储了很多被请求的信息\n   value = message.text\n   ```\n\n   \n\n8. ​       **结束会话**\n\n   ```python\n   #这将结束驱动程序进程，默认情况下，该进程也会关闭浏览器。无法向此驱动程序实例发送更多命令\n   driver.quit()\n   ```\n\n   ##### **组合所有事情**\n\n   ```python\n   from selenium import webdriver\n   from selenium.webdriver.common.by import By\n   import time\n   \n   def test_eight_components()\n   \t#创建谷歌浏览器对象\n   \tdriver = webdriver.Chrome()\n       #打开web测试网站\n   \tdriver.get(url)\n       #窗口最大化\n       driver.maximize_window()\n       #请求浏览器信息\n       title = driver.title\n       assert title == \"Web form\"\n       #建立等待策略\n       driver.implicitly_wait(0.5)\n       #搜索定位网页元素\n       text_box = driver.find_element(by=By.NAME, value=\"my-text\")\n       submit_button = driver.find_element(by=By.CSS_SELECTOR, value=\"button\")\n       #对定位的网页元素进行交互\n       text_box.send_keys(\"Selenium\")\n       submit_button.click()\n       message = driver.find_element(by=By.ID, value=\"message\")\n       value = message.text\n       assert value == \"Received!\"\n       #延迟\n       time.sleep(10)\n       #关闭浏览器\n       driver.quit()\n   \n   ```\n\n\n##### 1.3\t元素选择策略\n\n在webDriver中有8种不同的内置元素定位策略：\n\n![image-20230815164033500](D:\\AppData\\Typora\\typora-user-images\\image-20230815164033500.png)\n\n###### 下拉框定位使用\n\n导包：\n\n```python\nfrom selenium.webdriver.support.select import Select\n```\n\n使用：\n\n```\nSelect(WebElement).select_by_index(int)\n```\n\n##### 1.4\tActions接口\n\n用于向Web浏览器提供虚化设备输入操作的低级接口\n\n```python\nclickable = driver.find_element(By.ID, \"clickable\")\n    ActionChains(driver)\\\n        .move_to_element(clickable)\\\n        .pause(1)\\\n        .click_and_hold()\\\n        .pause(1)\\\n        .send_keys(\"abc\")\\\n        .perform()\n```\n\n###### 释放所有Actions\n\n需要注意的重要一点是, 驱动程序会记住整个会话中所有输入项的状态. 即使创建actions类的新实例, 按下的键和指针的位置 也将处于以前执行的操作离开它们的任何状态.\n\n有一种特殊的方法来释放所有当前按下的键和指针按钮. 此方法在每种语言中的实现方式不同, 因为它不会使用perform方法执行.\n\n```python\nActionBuilder(driver).clear_actions()\n```\n\n##### 1.5\t等待\n\n所有导航命令都等待特定值 基于[页面加载策略](https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#pageloadstrategy)（ 在驱动程序将控制权返回给代码之前，等待的默认值为 ）。 唯一关心的是加载 HTML 中定义的资产， 但是加载的 JavaScript 资产通常会导致网站发生变化， 并且需要与之交互的元素可能尚未出现在页面上 当代码准备好执行下一个 Selenium 命令时。`readyState``\"complete\"``readyState`\n\n同样，在许多单页应用程序中，元素会动态获取 添加到页面或根据点击更改公开范围。 元素必须同时存在并[显示在](https://www.selenium.dev/zh-cn/documentation/webdriver/elements/information/#is-displayed)页面上 为了让硒与它相互作用。\n\n**隐式等待**\n\nSelenium有一种内置的方式来自动等待称为*隐式等待*的元素。 可以使用浏览器选项中的[超时](https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#timeouts)功能或使用驱动程序方法（如下所示）设置隐式等待值。\n\n这是一个全局设置，适用于整个会话的每个元素位置调用。 默认值为 ，这意味着如果未找到该元素，它将 立即返回错误。如果设置了隐式等待，驱动程序将等待 返回错误之前所提供值的持续时间。请注意，只要 元素定位，驱动程序将返回元素引用，代码将继续执行， 因此，较大的隐式等待值不一定会增加会话的持续时间。`0`\n\n*警告：*不要混合隐式和显式等待。 这样做可能会导致不可预测的等待时间。 例如，将隐式等待设置为 10 秒 并显式等待 15 秒 可能会导致 20 秒后发生超时。\n\n使用隐式等待解决我们的示例如下所示：\n\n```python\n driver.implicitly_wait(2)\n    driver.get('https://www.selenium.dev/selenium/web/dynamic.html')\n    driver.find_element(By.ID, \"adder\").click()\n\n    added = driver.find_element(By.ID, \"box0\")\n```\n\n**显示等待**\n\n*显式等待*是添加到轮询应用程序的代码中的循环 使特定条件在退出循环之前评估为 true，并且 继续执行代码中的下一个命令。如果在指定的超时值之前不满足条件， 该代码将给出超时错误。由于应用程序有多种方法不处于所需状态， 因此，显式等待是指定要等待的确切条件的绝佳选择 在每个地方都需要它。 另一个不错的功能是，默认情况下，Selenium Wait 类会自动等待指定的元素存在。\n\n```python\n    revealed = driver.find_element(By.ID, \"revealed\")\n    wait = WebDriverWait(driver, timeout=2)\n\n    driver.find_element(By.ID, \"reveal\").click()\n    wait.until(lambda d : revealed.is_displayed())\n\n    revealed.send_keys(\"Displayed\")\n```\n\n**定制**\n\n可以使用各种参数实例化 Wait 类，这些参数将更改条件的计算方式。\n\n这可能包括：\n\n- 更改代码的计算频率（轮询间隔）\n- 指定应自动处理哪些异常\n- 更改总超时长度\n- 自定义超时消息\n\n例如，如果默认情况下重试*元素不可交互*错误，那么我们可以 在要执行的代码中对方法添加一个操作（我们只需要 确保代码在成功时返回）：`true`\n\n```python\n    revealed = driver.find_element(By.ID, \"revealed\")\n    errors = [NoSuchElementException, ElementNotInteractableException]\n    wait = WebDriverWait(driver, timeout=2, poll_frequency=.2, ignored_exceptions=errors)\n\n    driver.find_element(By.ID, \"reveal\").click()\n    wait.until(lambda d : revealed.send_keys(\"Displayed\") or True)\n```\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","source":"_posts/Selenium基础学习.md","raw":"---\ntitle: 1.Selenium基础学习\ndate: 2023-09-07 09:17:41\ntags:\n   - Selenium\ncategories:\n   - Selenium学习\nkeywords: \"Selenium\"\nabbrlink: \"\"\ndecription:\ntop_img:\ncover: https://s2.loli.net/2023/09/07/FrGsiH8PfTSD2jg.png\n---\n\n### **Selenium框架---**\n\n### （Web自动化测试工具）参考[安装Selenium类库 | Selenium](https://www.selenium.dev/zh-cn/documentation/webdriver/getting_started/install_library/)\n\n#### 1.\t简介\n\nSelenium通过使用WebDriver支持市场上所有主流浏览器的自动化。\n\nweb Driver是一个API和协议，它定义了一个语言中立的接口，用于控制web浏览器的行为。\n\n每个浏览器都有一个特定的WebDriver实现，称为驱动程序。\n\n驱动程序是负责委派给浏览器的组件，并处理与Selenium和浏览器之间的通信。\n\nSelenium在可能的情况下使用这些第三方驱动程序，但是在这些驱动程序不存在的情况下，它也提供了由项目自己维护的驱动程序。\n\nSelenium框架通过一个面向用户的界面将这些部分连接在一起，该界面允许透明地使用不同的浏览器后端，从而实现跨浏览器和跨平台自动化。\n\n##### 1.1\t安装Selenium类库（配置自动化的浏览器）\n\n###### 首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\n\n###### Selenium安装方式：\n\n###### Pip\n\n###### pip \tinstall \tselenium\n\n##### 1.2\t第一个Selenium脚本\n\n###### **八大基本组成部分**\n\nSelenium所做的一切，就是发送给浏览器命令，用以执行某些操作或为信息发送请求。您将使用Selenium执行的大部分操作，都是以下基本命令的组合：\n\n1. ###### \t使用驱动实例开启会话\n\n   ```python\n   driver = webdriver.Chrome()\n   ```\n\n2. ​      **在浏览器上执行操作**\n\n   ```python\n   #在本例中，我们导航到一个网页\n   driver.get(url)\n   ```\n\n   \n\n3. ​     **请求浏览器信息**\n\n   ```python\n   #您可以请求一系列关于浏览器的信息，包括窗口句柄、浏览器尺寸/位置、cookie、警报等\n   title = driver.title\n   ```\n\n   \n\n4. ​        **建立等待策略**\n\n   ```python\n   #将代码与浏览器的当前状态同步是Selenium面临的最大挑战之一，做好它是一个高级主题。\n   #基本上，您希望在尝试定位元素之前，确保该元素位于页面上，并且在尝试与该元素交互之前，该元素处于可交互状态\n   #隐式等待很少是最好的解决方案，但在这里最容易演示，所有我们将使用它作为占位符\n   driver.implicitly_wait(0.5)\n   ```\n\n   \n\n5. ​       **发送命令查找元素**\n\n   ```python\n   #大多数Selenium会话中主要命令都与元素相关，如果不先找到元素，就无法与之交互\n   text_box = driver.find_element(by=By.NAME, Value=\"my-text\")\n   submit_button = driver.find_element(by=By.CSS_SELECTOR, value=\"button\")\n   ```\n\n   \n\n6. ​       **操作元素**\n\n   ```python\n   #对于一个元素，只有少数几个操作可以执行，但您将经常使用它们\n   text_box.send_keys(\"Selenium\")\n   submit_button.click()\n   ```\n\n   \n\n7. ​       **获取元素信息**\n\n   ```python\n   #元素存储了很多被请求的信息\n   value = message.text\n   ```\n\n   \n\n8. ​       **结束会话**\n\n   ```python\n   #这将结束驱动程序进程，默认情况下，该进程也会关闭浏览器。无法向此驱动程序实例发送更多命令\n   driver.quit()\n   ```\n\n   ##### **组合所有事情**\n\n   ```python\n   from selenium import webdriver\n   from selenium.webdriver.common.by import By\n   import time\n   \n   def test_eight_components()\n   \t#创建谷歌浏览器对象\n   \tdriver = webdriver.Chrome()\n       #打开web测试网站\n   \tdriver.get(url)\n       #窗口最大化\n       driver.maximize_window()\n       #请求浏览器信息\n       title = driver.title\n       assert title == \"Web form\"\n       #建立等待策略\n       driver.implicitly_wait(0.5)\n       #搜索定位网页元素\n       text_box = driver.find_element(by=By.NAME, value=\"my-text\")\n       submit_button = driver.find_element(by=By.CSS_SELECTOR, value=\"button\")\n       #对定位的网页元素进行交互\n       text_box.send_keys(\"Selenium\")\n       submit_button.click()\n       message = driver.find_element(by=By.ID, value=\"message\")\n       value = message.text\n       assert value == \"Received!\"\n       #延迟\n       time.sleep(10)\n       #关闭浏览器\n       driver.quit()\n   \n   ```\n\n\n##### 1.3\t元素选择策略\n\n在webDriver中有8种不同的内置元素定位策略：\n\n![image-20230815164033500](D:\\AppData\\Typora\\typora-user-images\\image-20230815164033500.png)\n\n###### 下拉框定位使用\n\n导包：\n\n```python\nfrom selenium.webdriver.support.select import Select\n```\n\n使用：\n\n```\nSelect(WebElement).select_by_index(int)\n```\n\n##### 1.4\tActions接口\n\n用于向Web浏览器提供虚化设备输入操作的低级接口\n\n```python\nclickable = driver.find_element(By.ID, \"clickable\")\n    ActionChains(driver)\\\n        .move_to_element(clickable)\\\n        .pause(1)\\\n        .click_and_hold()\\\n        .pause(1)\\\n        .send_keys(\"abc\")\\\n        .perform()\n```\n\n###### 释放所有Actions\n\n需要注意的重要一点是, 驱动程序会记住整个会话中所有输入项的状态. 即使创建actions类的新实例, 按下的键和指针的位置 也将处于以前执行的操作离开它们的任何状态.\n\n有一种特殊的方法来释放所有当前按下的键和指针按钮. 此方法在每种语言中的实现方式不同, 因为它不会使用perform方法执行.\n\n```python\nActionBuilder(driver).clear_actions()\n```\n\n##### 1.5\t等待\n\n所有导航命令都等待特定值 基于[页面加载策略](https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#pageloadstrategy)（ 在驱动程序将控制权返回给代码之前，等待的默认值为 ）。 唯一关心的是加载 HTML 中定义的资产， 但是加载的 JavaScript 资产通常会导致网站发生变化， 并且需要与之交互的元素可能尚未出现在页面上 当代码准备好执行下一个 Selenium 命令时。`readyState``\"complete\"``readyState`\n\n同样，在许多单页应用程序中，元素会动态获取 添加到页面或根据点击更改公开范围。 元素必须同时存在并[显示在](https://www.selenium.dev/zh-cn/documentation/webdriver/elements/information/#is-displayed)页面上 为了让硒与它相互作用。\n\n**隐式等待**\n\nSelenium有一种内置的方式来自动等待称为*隐式等待*的元素。 可以使用浏览器选项中的[超时](https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#timeouts)功能或使用驱动程序方法（如下所示）设置隐式等待值。\n\n这是一个全局设置，适用于整个会话的每个元素位置调用。 默认值为 ，这意味着如果未找到该元素，它将 立即返回错误。如果设置了隐式等待，驱动程序将等待 返回错误之前所提供值的持续时间。请注意，只要 元素定位，驱动程序将返回元素引用，代码将继续执行， 因此，较大的隐式等待值不一定会增加会话的持续时间。`0`\n\n*警告：*不要混合隐式和显式等待。 这样做可能会导致不可预测的等待时间。 例如，将隐式等待设置为 10 秒 并显式等待 15 秒 可能会导致 20 秒后发生超时。\n\n使用隐式等待解决我们的示例如下所示：\n\n```python\n driver.implicitly_wait(2)\n    driver.get('https://www.selenium.dev/selenium/web/dynamic.html')\n    driver.find_element(By.ID, \"adder\").click()\n\n    added = driver.find_element(By.ID, \"box0\")\n```\n\n**显示等待**\n\n*显式等待*是添加到轮询应用程序的代码中的循环 使特定条件在退出循环之前评估为 true，并且 继续执行代码中的下一个命令。如果在指定的超时值之前不满足条件， 该代码将给出超时错误。由于应用程序有多种方法不处于所需状态， 因此，显式等待是指定要等待的确切条件的绝佳选择 在每个地方都需要它。 另一个不错的功能是，默认情况下，Selenium Wait 类会自动等待指定的元素存在。\n\n```python\n    revealed = driver.find_element(By.ID, \"revealed\")\n    wait = WebDriverWait(driver, timeout=2)\n\n    driver.find_element(By.ID, \"reveal\").click()\n    wait.until(lambda d : revealed.is_displayed())\n\n    revealed.send_keys(\"Displayed\")\n```\n\n**定制**\n\n可以使用各种参数实例化 Wait 类，这些参数将更改条件的计算方式。\n\n这可能包括：\n\n- 更改代码的计算频率（轮询间隔）\n- 指定应自动处理哪些异常\n- 更改总超时长度\n- 自定义超时消息\n\n例如，如果默认情况下重试*元素不可交互*错误，那么我们可以 在要执行的代码中对方法添加一个操作（我们只需要 确保代码在成功时返回）：`true`\n\n```python\n    revealed = driver.find_element(By.ID, \"revealed\")\n    errors = [NoSuchElementException, ElementNotInteractableException]\n    wait = WebDriverWait(driver, timeout=2, poll_frequency=.2, ignored_exceptions=errors)\n\n    driver.find_element(By.ID, \"reveal\").click()\n    wait.until(lambda d : revealed.send_keys(\"Displayed\") or True)\n```\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n","slug":"Selenium基础学习","published":1,"updated":"2023-09-19T03:55:30.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4npe000zfw4884g408od","content":"<h3 id=\"Selenium框架—\"><a href=\"#Selenium框架—\" class=\"headerlink\" title=\"Selenium框架—\"></a><strong>Selenium框架—</strong></h3><h3 id=\"（Web自动化测试工具）参考安装Selenium类库-Selenium\"><a href=\"#（Web自动化测试工具）参考安装Selenium类库-Selenium\" class=\"headerlink\" title=\"（Web自动化测试工具）参考安装Selenium类库 | Selenium\"></a>（Web自动化测试工具）参考<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/getting_started/install_library/\">安装Selenium类库 | Selenium</a></h3><h4 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.\t简介\"></a>1.\t简介</h4><p>Selenium通过使用WebDriver支持市场上所有主流浏览器的自动化。</p>\n<p>web Driver是一个API和协议，它定义了一个语言中立的接口，用于控制web浏览器的行为。</p>\n<p>每个浏览器都有一个特定的WebDriver实现，称为驱动程序。</p>\n<p>驱动程序是负责委派给浏览器的组件，并处理与Selenium和浏览器之间的通信。</p>\n<p>Selenium在可能的情况下使用这些第三方驱动程序，但是在这些驱动程序不存在的情况下，它也提供了由项目自己维护的驱动程序。</p>\n<p>Selenium框架通过一个面向用户的界面将这些部分连接在一起，该界面允许透明地使用不同的浏览器后端，从而实现跨浏览器和跨平台自动化。</p>\n<h5 id=\"1-1安装Selenium类库（配置自动化的浏览器）\"><a href=\"#1-1安装Selenium类库（配置自动化的浏览器）\" class=\"headerlink\" title=\"1.1\t安装Selenium类库（配置自动化的浏览器）\"></a>1.1\t安装Selenium类库（配置自动化的浏览器）</h5><h6 id=\"首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\"><a href=\"#首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\" class=\"headerlink\" title=\"首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\"></a>首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。</h6><h6 id=\"Selenium安装方式：\"><a href=\"#Selenium安装方式：\" class=\"headerlink\" title=\"Selenium安装方式：\"></a>Selenium安装方式：</h6><h6 id=\"Pip\"><a href=\"#Pip\" class=\"headerlink\" title=\"Pip\"></a>Pip</h6><h6 id=\"pip-install-selenium\"><a href=\"#pip-install-selenium\" class=\"headerlink\" title=\"pip \tinstall \tselenium\"></a>pip \tinstall \tselenium</h6><h5 id=\"1-2第一个Selenium脚本\"><a href=\"#1-2第一个Selenium脚本\" class=\"headerlink\" title=\"1.2\t第一个Selenium脚本\"></a>1.2\t第一个Selenium脚本</h5><h6 id=\"八大基本组成部分\"><a href=\"#八大基本组成部分\" class=\"headerlink\" title=\"八大基本组成部分\"></a><strong>八大基本组成部分</strong></h6><p>Selenium所做的一切，就是发送给浏览器命令，用以执行某些操作或为信息发送请求。您将使用Selenium执行的大部分操作，都是以下基本命令的组合：</p>\n<ol>\n<li><h6 id=\"使用驱动实例开启会话\"><a href=\"#使用驱动实例开启会话\" class=\"headerlink\" title=\"使用驱动实例开启会话\"></a>使用驱动实例开启会话</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver = webdriver.Chrome()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>​      <strong>在浏览器上执行操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#在本例中，我们导航到一个网页</span></span><br><span class=\"line\">driver.get(url)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​     <strong>请求浏览器信息</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#您可以请求一系列关于浏览器的信息，包括窗口句柄、浏览器尺寸/位置、cookie、警报等</span></span><br><span class=\"line\">title = driver.title</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​        <strong>建立等待策略</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将代码与浏览器的当前状态同步是Selenium面临的最大挑战之一，做好它是一个高级主题。</span></span><br><span class=\"line\"><span class=\"comment\">#基本上，您希望在尝试定位元素之前，确保该元素位于页面上，并且在尝试与该元素交互之前，该元素处于可交互状态</span></span><br><span class=\"line\"><span class=\"comment\">#隐式等待很少是最好的解决方案，但在这里最容易演示，所有我们将使用它作为占位符</span></span><br><span class=\"line\">driver.implicitly_wait(<span class=\"number\">0.5</span>)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>发送命令查找元素</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#大多数Selenium会话中主要命令都与元素相关，如果不先找到元素，就无法与之交互</span></span><br><span class=\"line\">text_box = driver.find_element(by=By.NAME, Value=<span class=\"string\">&quot;my-text&quot;</span>)</span><br><span class=\"line\">submit_button = driver.find_element(by=By.CSS_SELECTOR, value=<span class=\"string\">&quot;button&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>操作元素</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对于一个元素，只有少数几个操作可以执行，但您将经常使用它们</span></span><br><span class=\"line\">text_box.send_keys(<span class=\"string\">&quot;Selenium&quot;</span>)</span><br><span class=\"line\">submit_button.click()</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>获取元素信息</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#元素存储了很多被请求的信息</span></span><br><span class=\"line\">value = message.text</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>结束会话</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#这将结束驱动程序进程，默认情况下，该进程也会关闭浏览器。无法向此驱动程序实例发送更多命令</span></span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"组合所有事情\"><a href=\"#组合所有事情\" class=\"headerlink\" title=\"组合所有事情\"></a><strong>组合所有事情</strong></h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.by <span class=\"keyword\">import</span> By</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_eight_components</span>()</span><br><span class=\"line\">\t<span class=\"comment\">#创建谷歌浏览器对象</span></span><br><span class=\"line\">\tdriver = webdriver.Chrome()</span><br><span class=\"line\">    <span class=\"comment\">#打开web测试网站</span></span><br><span class=\"line\">\tdriver.get(url)</span><br><span class=\"line\">    <span class=\"comment\">#窗口最大化</span></span><br><span class=\"line\">    driver.maximize_window()</span><br><span class=\"line\">    <span class=\"comment\">#请求浏览器信息</span></span><br><span class=\"line\">    title = driver.title</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> title == <span class=\"string\">&quot;Web form&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">#建立等待策略</span></span><br><span class=\"line\">    driver.implicitly_wait(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"comment\">#搜索定位网页元素</span></span><br><span class=\"line\">    text_box = driver.find_element(by=By.NAME, value=<span class=\"string\">&quot;my-text&quot;</span>)</span><br><span class=\"line\">    submit_button = driver.find_element(by=By.CSS_SELECTOR, value=<span class=\"string\">&quot;button&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\">#对定位的网页元素进行交互</span></span><br><span class=\"line\">    text_box.send_keys(<span class=\"string\">&quot;Selenium&quot;</span>)</span><br><span class=\"line\">    submit_button.click()</span><br><span class=\"line\">    message = driver.find_element(by=By.ID, value=<span class=\"string\">&quot;message&quot;</span>)</span><br><span class=\"line\">    value = message.text</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> value == <span class=\"string\">&quot;Received!&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">#延迟</span></span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"comment\">#关闭浏览器</span></span><br><span class=\"line\">    driver.quit()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h5 id=\"1-3元素选择策略\"><a href=\"#1-3元素选择策略\" class=\"headerlink\" title=\"1.3\t元素选择策略\"></a>1.3\t元素选择策略</h5><p>在webDriver中有8种不同的内置元素定位策略：</p>\n<p><img src=\"/2023/09/07/Selenium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/AppData\\Typora\\typora-user-images\\image-20230815164033500.png\" alt=\"image-20230815164033500\"></p>\n<h6 id=\"下拉框定位使用\"><a href=\"#下拉框定位使用\" class=\"headerlink\" title=\"下拉框定位使用\"></a>下拉框定位使用</h6><p>导包：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.support.select <span class=\"keyword\">import</span> Select</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Select(WebElement).select_by_index(int)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-4Actions接口\"><a href=\"#1-4Actions接口\" class=\"headerlink\" title=\"1.4\tActions接口\"></a>1.4\tActions接口</h5><p>用于向Web浏览器提供虚化设备输入操作的低级接口</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickable = driver.find_element(By.ID, <span class=\"string\">&quot;clickable&quot;</span>)</span><br><span class=\"line\">    ActionChains(driver)\\</span><br><span class=\"line\">        .move_to_element(clickable)\\</span><br><span class=\"line\">        .pause(<span class=\"number\">1</span>)\\</span><br><span class=\"line\">        .click_and_hold()\\</span><br><span class=\"line\">        .pause(<span class=\"number\">1</span>)\\</span><br><span class=\"line\">        .send_keys(<span class=\"string\">&quot;abc&quot;</span>)\\</span><br><span class=\"line\">        .perform()</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"释放所有Actions\"><a href=\"#释放所有Actions\" class=\"headerlink\" title=\"释放所有Actions\"></a>释放所有Actions</h6><p>需要注意的重要一点是, 驱动程序会记住整个会话中所有输入项的状态. 即使创建actions类的新实例, 按下的键和指针的位置 也将处于以前执行的操作离开它们的任何状态.</p>\n<p>有一种特殊的方法来释放所有当前按下的键和指针按钮. 此方法在每种语言中的实现方式不同, 因为它不会使用perform方法执行.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ActionBuilder(driver).clear_actions()</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-5等待\"><a href=\"#1-5等待\" class=\"headerlink\" title=\"1.5\t等待\"></a>1.5\t等待</h5><p>所有导航命令都等待特定值 基于<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#pageloadstrategy\">页面加载策略</a>（ 在驱动程序将控制权返回给代码之前，等待的默认值为 ）。 唯一关心的是加载 HTML 中定义的资产， 但是加载的 JavaScript 资产通常会导致网站发生变化， 并且需要与之交互的元素可能尚未出现在页面上 当代码准备好执行下一个 Selenium 命令时。<code>readyState``&quot;complete&quot;``readyState</code></p>\n<p>同样，在许多单页应用程序中，元素会动态获取 添加到页面或根据点击更改公开范围。 元素必须同时存在并<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/elements/information/#is-displayed\">显示在</a>页面上 为了让硒与它相互作用。</p>\n<p><strong>隐式等待</strong></p>\n<p>Selenium有一种内置的方式来自动等待称为<em>隐式等待</em>的元素。 可以使用浏览器选项中的<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#timeouts\">超时</a>功能或使用驱动程序方法（如下所示）设置隐式等待值。</p>\n<p>这是一个全局设置，适用于整个会话的每个元素位置调用。 默认值为 ，这意味着如果未找到该元素，它将 立即返回错误。如果设置了隐式等待，驱动程序将等待 返回错误之前所提供值的持续时间。请注意，只要 元素定位，驱动程序将返回元素引用，代码将继续执行， 因此，较大的隐式等待值不一定会增加会话的持续时间。<code>0</code></p>\n<p><em>警告：</em>不要混合隐式和显式等待。 这样做可能会导致不可预测的等待时间。 例如，将隐式等待设置为 10 秒 并显式等待 15 秒 可能会导致 20 秒后发生超时。</p>\n<p>使用隐式等待解决我们的示例如下所示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver.implicitly_wait(<span class=\"number\">2</span>)</span><br><span class=\"line\">   driver.get(<span class=\"string\">&#x27;https://www.selenium.dev/selenium/web/dynamic.html&#x27;</span>)</span><br><span class=\"line\">   driver.find_element(By.ID, <span class=\"string\">&quot;adder&quot;</span>).click()</span><br><span class=\"line\"></span><br><span class=\"line\">   added = driver.find_element(By.ID, <span class=\"string\">&quot;box0&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><strong>显示等待</strong></p>\n<p><em>显式等待</em>是添加到轮询应用程序的代码中的循环 使特定条件在退出循环之前评估为 true，并且 继续执行代码中的下一个命令。如果在指定的超时值之前不满足条件， 该代码将给出超时错误。由于应用程序有多种方法不处于所需状态， 因此，显式等待是指定要等待的确切条件的绝佳选择 在每个地方都需要它。 另一个不错的功能是，默认情况下，Selenium Wait 类会自动等待指定的元素存在。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">revealed = driver.find_element(By.ID, <span class=\"string\">&quot;revealed&quot;</span>)</span><br><span class=\"line\">wait = WebDriverWait(driver, timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">driver.find_element(By.ID, <span class=\"string\">&quot;reveal&quot;</span>).click()</span><br><span class=\"line\">wait.until(<span class=\"keyword\">lambda</span> d : revealed.is_displayed())</span><br><span class=\"line\"></span><br><span class=\"line\">revealed.send_keys(<span class=\"string\">&quot;Displayed&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><strong>定制</strong></p>\n<p>可以使用各种参数实例化 Wait 类，这些参数将更改条件的计算方式。</p>\n<p>这可能包括：</p>\n<ul>\n<li>更改代码的计算频率（轮询间隔）</li>\n<li>指定应自动处理哪些异常</li>\n<li>更改总超时长度</li>\n<li>自定义超时消息</li>\n</ul>\n<p>例如，如果默认情况下重试<em>元素不可交互</em>错误，那么我们可以 在要执行的代码中对方法添加一个操作（我们只需要 确保代码在成功时返回）：<code>true</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">revealed = driver.find_element(By.ID, <span class=\"string\">&quot;revealed&quot;</span>)</span><br><span class=\"line\">errors = [NoSuchElementException, ElementNotInteractableException]</span><br><span class=\"line\">wait = WebDriverWait(driver, timeout=<span class=\"number\">2</span>, poll_frequency=<span class=\"number\">.2</span>, ignored_exceptions=errors)</span><br><span class=\"line\"></span><br><span class=\"line\">driver.find_element(By.ID, <span class=\"string\">&quot;reveal&quot;</span>).click()</span><br><span class=\"line\">wait.until(<span class=\"keyword\">lambda</span> d : revealed.send_keys(<span class=\"string\">&quot;Displayed&quot;</span>) <span class=\"keyword\">or</span> <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h3 id=\"Selenium框架—\"><a href=\"#Selenium框架—\" class=\"headerlink\" title=\"Selenium框架—\"></a><strong>Selenium框架—</strong></h3><h3 id=\"（Web自动化测试工具）参考安装Selenium类库-Selenium\"><a href=\"#（Web自动化测试工具）参考安装Selenium类库-Selenium\" class=\"headerlink\" title=\"（Web自动化测试工具）参考安装Selenium类库 | Selenium\"></a>（Web自动化测试工具）参考<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/getting_started/install_library/\">安装Selenium类库 | Selenium</a></h3><h4 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.\t简介\"></a>1.\t简介</h4><p>Selenium通过使用WebDriver支持市场上所有主流浏览器的自动化。</p>\n<p>web Driver是一个API和协议，它定义了一个语言中立的接口，用于控制web浏览器的行为。</p>\n<p>每个浏览器都有一个特定的WebDriver实现，称为驱动程序。</p>\n<p>驱动程序是负责委派给浏览器的组件，并处理与Selenium和浏览器之间的通信。</p>\n<p>Selenium在可能的情况下使用这些第三方驱动程序，但是在这些驱动程序不存在的情况下，它也提供了由项目自己维护的驱动程序。</p>\n<p>Selenium框架通过一个面向用户的界面将这些部分连接在一起，该界面允许透明地使用不同的浏览器后端，从而实现跨浏览器和跨平台自动化。</p>\n<h5 id=\"1-1安装Selenium类库（配置自动化的浏览器）\"><a href=\"#1-1安装Selenium类库（配置自动化的浏览器）\" class=\"headerlink\" title=\"1.1\t安装Selenium类库（配置自动化的浏览器）\"></a>1.1\t安装Selenium类库（配置自动化的浏览器）</h5><h6 id=\"首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\"><a href=\"#首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\" class=\"headerlink\" title=\"首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。\"></a>首先，你需要为自动化项目安装Selenium绑定库。库的安装过程取决于您选择使用的语言。</h6><h6 id=\"Selenium安装方式：\"><a href=\"#Selenium安装方式：\" class=\"headerlink\" title=\"Selenium安装方式：\"></a>Selenium安装方式：</h6><h6 id=\"Pip\"><a href=\"#Pip\" class=\"headerlink\" title=\"Pip\"></a>Pip</h6><h6 id=\"pip-install-selenium\"><a href=\"#pip-install-selenium\" class=\"headerlink\" title=\"pip \tinstall \tselenium\"></a>pip \tinstall \tselenium</h6><h5 id=\"1-2第一个Selenium脚本\"><a href=\"#1-2第一个Selenium脚本\" class=\"headerlink\" title=\"1.2\t第一个Selenium脚本\"></a>1.2\t第一个Selenium脚本</h5><h6 id=\"八大基本组成部分\"><a href=\"#八大基本组成部分\" class=\"headerlink\" title=\"八大基本组成部分\"></a><strong>八大基本组成部分</strong></h6><p>Selenium所做的一切，就是发送给浏览器命令，用以执行某些操作或为信息发送请求。您将使用Selenium执行的大部分操作，都是以下基本命令的组合：</p>\n<ol>\n<li><h6 id=\"使用驱动实例开启会话\"><a href=\"#使用驱动实例开启会话\" class=\"headerlink\" title=\"使用驱动实例开启会话\"></a>使用驱动实例开启会话</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver = webdriver.Chrome()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>​      <strong>在浏览器上执行操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#在本例中，我们导航到一个网页</span></span><br><span class=\"line\">driver.get(url)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​     <strong>请求浏览器信息</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#您可以请求一系列关于浏览器的信息，包括窗口句柄、浏览器尺寸/位置、cookie、警报等</span></span><br><span class=\"line\">title = driver.title</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​        <strong>建立等待策略</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将代码与浏览器的当前状态同步是Selenium面临的最大挑战之一，做好它是一个高级主题。</span></span><br><span class=\"line\"><span class=\"comment\">#基本上，您希望在尝试定位元素之前，确保该元素位于页面上，并且在尝试与该元素交互之前，该元素处于可交互状态</span></span><br><span class=\"line\"><span class=\"comment\">#隐式等待很少是最好的解决方案，但在这里最容易演示，所有我们将使用它作为占位符</span></span><br><span class=\"line\">driver.implicitly_wait(<span class=\"number\">0.5</span>)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>发送命令查找元素</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#大多数Selenium会话中主要命令都与元素相关，如果不先找到元素，就无法与之交互</span></span><br><span class=\"line\">text_box = driver.find_element(by=By.NAME, Value=<span class=\"string\">&quot;my-text&quot;</span>)</span><br><span class=\"line\">submit_button = driver.find_element(by=By.CSS_SELECTOR, value=<span class=\"string\">&quot;button&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>操作元素</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对于一个元素，只有少数几个操作可以执行，但您将经常使用它们</span></span><br><span class=\"line\">text_box.send_keys(<span class=\"string\">&quot;Selenium&quot;</span>)</span><br><span class=\"line\">submit_button.click()</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>获取元素信息</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#元素存储了很多被请求的信息</span></span><br><span class=\"line\">value = message.text</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>​       <strong>结束会话</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#这将结束驱动程序进程，默认情况下，该进程也会关闭浏览器。无法向此驱动程序实例发送更多命令</span></span><br><span class=\"line\">driver.quit()</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"组合所有事情\"><a href=\"#组合所有事情\" class=\"headerlink\" title=\"组合所有事情\"></a><strong>组合所有事情</strong></h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.by <span class=\"keyword\">import</span> By</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_eight_components</span>()</span><br><span class=\"line\">\t<span class=\"comment\">#创建谷歌浏览器对象</span></span><br><span class=\"line\">\tdriver = webdriver.Chrome()</span><br><span class=\"line\">    <span class=\"comment\">#打开web测试网站</span></span><br><span class=\"line\">\tdriver.get(url)</span><br><span class=\"line\">    <span class=\"comment\">#窗口最大化</span></span><br><span class=\"line\">    driver.maximize_window()</span><br><span class=\"line\">    <span class=\"comment\">#请求浏览器信息</span></span><br><span class=\"line\">    title = driver.title</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> title == <span class=\"string\">&quot;Web form&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">#建立等待策略</span></span><br><span class=\"line\">    driver.implicitly_wait(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"comment\">#搜索定位网页元素</span></span><br><span class=\"line\">    text_box = driver.find_element(by=By.NAME, value=<span class=\"string\">&quot;my-text&quot;</span>)</span><br><span class=\"line\">    submit_button = driver.find_element(by=By.CSS_SELECTOR, value=<span class=\"string\">&quot;button&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\">#对定位的网页元素进行交互</span></span><br><span class=\"line\">    text_box.send_keys(<span class=\"string\">&quot;Selenium&quot;</span>)</span><br><span class=\"line\">    submit_button.click()</span><br><span class=\"line\">    message = driver.find_element(by=By.ID, value=<span class=\"string\">&quot;message&quot;</span>)</span><br><span class=\"line\">    value = message.text</span><br><span class=\"line\">    <span class=\"keyword\">assert</span> value == <span class=\"string\">&quot;Received!&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">#延迟</span></span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"comment\">#关闭浏览器</span></span><br><span class=\"line\">    driver.quit()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h5 id=\"1-3元素选择策略\"><a href=\"#1-3元素选择策略\" class=\"headerlink\" title=\"1.3\t元素选择策略\"></a>1.3\t元素选择策略</h5><p>在webDriver中有8种不同的内置元素定位策略：</p>\n<p><img src=\"/2023/09/07/Selenium%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/AppData\\Typora\\typora-user-images\\image-20230815164033500.png\" alt=\"image-20230815164033500\"></p>\n<h6 id=\"下拉框定位使用\"><a href=\"#下拉框定位使用\" class=\"headerlink\" title=\"下拉框定位使用\"></a>下拉框定位使用</h6><p>导包：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.support.select <span class=\"keyword\">import</span> Select</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Select(WebElement).select_by_index(int)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-4Actions接口\"><a href=\"#1-4Actions接口\" class=\"headerlink\" title=\"1.4\tActions接口\"></a>1.4\tActions接口</h5><p>用于向Web浏览器提供虚化设备输入操作的低级接口</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickable = driver.find_element(By.ID, <span class=\"string\">&quot;clickable&quot;</span>)</span><br><span class=\"line\">    ActionChains(driver)\\</span><br><span class=\"line\">        .move_to_element(clickable)\\</span><br><span class=\"line\">        .pause(<span class=\"number\">1</span>)\\</span><br><span class=\"line\">        .click_and_hold()\\</span><br><span class=\"line\">        .pause(<span class=\"number\">1</span>)\\</span><br><span class=\"line\">        .send_keys(<span class=\"string\">&quot;abc&quot;</span>)\\</span><br><span class=\"line\">        .perform()</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"释放所有Actions\"><a href=\"#释放所有Actions\" class=\"headerlink\" title=\"释放所有Actions\"></a>释放所有Actions</h6><p>需要注意的重要一点是, 驱动程序会记住整个会话中所有输入项的状态. 即使创建actions类的新实例, 按下的键和指针的位置 也将处于以前执行的操作离开它们的任何状态.</p>\n<p>有一种特殊的方法来释放所有当前按下的键和指针按钮. 此方法在每种语言中的实现方式不同, 因为它不会使用perform方法执行.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ActionBuilder(driver).clear_actions()</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-5等待\"><a href=\"#1-5等待\" class=\"headerlink\" title=\"1.5\t等待\"></a>1.5\t等待</h5><p>所有导航命令都等待特定值 基于<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#pageloadstrategy\">页面加载策略</a>（ 在驱动程序将控制权返回给代码之前，等待的默认值为 ）。 唯一关心的是加载 HTML 中定义的资产， 但是加载的 JavaScript 资产通常会导致网站发生变化， 并且需要与之交互的元素可能尚未出现在页面上 当代码准备好执行下一个 Selenium 命令时。<code>readyState``&quot;complete&quot;``readyState</code></p>\n<p>同样，在许多单页应用程序中，元素会动态获取 添加到页面或根据点击更改公开范围。 元素必须同时存在并<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/elements/information/#is-displayed\">显示在</a>页面上 为了让硒与它相互作用。</p>\n<p><strong>隐式等待</strong></p>\n<p>Selenium有一种内置的方式来自动等待称为<em>隐式等待</em>的元素。 可以使用浏览器选项中的<a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/drivers/options/#timeouts\">超时</a>功能或使用驱动程序方法（如下所示）设置隐式等待值。</p>\n<p>这是一个全局设置，适用于整个会话的每个元素位置调用。 默认值为 ，这意味着如果未找到该元素，它将 立即返回错误。如果设置了隐式等待，驱动程序将等待 返回错误之前所提供值的持续时间。请注意，只要 元素定位，驱动程序将返回元素引用，代码将继续执行， 因此，较大的隐式等待值不一定会增加会话的持续时间。<code>0</code></p>\n<p><em>警告：</em>不要混合隐式和显式等待。 这样做可能会导致不可预测的等待时间。 例如，将隐式等待设置为 10 秒 并显式等待 15 秒 可能会导致 20 秒后发生超时。</p>\n<p>使用隐式等待解决我们的示例如下所示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver.implicitly_wait(<span class=\"number\">2</span>)</span><br><span class=\"line\">   driver.get(<span class=\"string\">&#x27;https://www.selenium.dev/selenium/web/dynamic.html&#x27;</span>)</span><br><span class=\"line\">   driver.find_element(By.ID, <span class=\"string\">&quot;adder&quot;</span>).click()</span><br><span class=\"line\"></span><br><span class=\"line\">   added = driver.find_element(By.ID, <span class=\"string\">&quot;box0&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><strong>显示等待</strong></p>\n<p><em>显式等待</em>是添加到轮询应用程序的代码中的循环 使特定条件在退出循环之前评估为 true，并且 继续执行代码中的下一个命令。如果在指定的超时值之前不满足条件， 该代码将给出超时错误。由于应用程序有多种方法不处于所需状态， 因此，显式等待是指定要等待的确切条件的绝佳选择 在每个地方都需要它。 另一个不错的功能是，默认情况下，Selenium Wait 类会自动等待指定的元素存在。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">revealed = driver.find_element(By.ID, <span class=\"string\">&quot;revealed&quot;</span>)</span><br><span class=\"line\">wait = WebDriverWait(driver, timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">driver.find_element(By.ID, <span class=\"string\">&quot;reveal&quot;</span>).click()</span><br><span class=\"line\">wait.until(<span class=\"keyword\">lambda</span> d : revealed.is_displayed())</span><br><span class=\"line\"></span><br><span class=\"line\">revealed.send_keys(<span class=\"string\">&quot;Displayed&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><strong>定制</strong></p>\n<p>可以使用各种参数实例化 Wait 类，这些参数将更改条件的计算方式。</p>\n<p>这可能包括：</p>\n<ul>\n<li>更改代码的计算频率（轮询间隔）</li>\n<li>指定应自动处理哪些异常</li>\n<li>更改总超时长度</li>\n<li>自定义超时消息</li>\n</ul>\n<p>例如，如果默认情况下重试<em>元素不可交互</em>错误，那么我们可以 在要执行的代码中对方法添加一个操作（我们只需要 确保代码在成功时返回）：<code>true</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">revealed = driver.find_element(By.ID, <span class=\"string\">&quot;revealed&quot;</span>)</span><br><span class=\"line\">errors = [NoSuchElementException, ElementNotInteractableException]</span><br><span class=\"line\">wait = WebDriverWait(driver, timeout=<span class=\"number\">2</span>, poll_frequency=<span class=\"number\">.2</span>, ignored_exceptions=errors)</span><br><span class=\"line\"></span><br><span class=\"line\">driver.find_element(By.ID, <span class=\"string\">&quot;reveal&quot;</span>).click()</span><br><span class=\"line\">wait.until(<span class=\"keyword\">lambda</span> d : revealed.send_keys(<span class=\"string\">&quot;Displayed&quot;</span>) <span class=\"keyword\">or</span> <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"1.接口测试的概念","date":"2023-09-07T02:07:57.000Z","keywords":"接口测试","abbrlink":"","decription":null,"top_img":null,"cover":"https://s2.loli.net/2023/09/07/t9qIa3YKB2X4F6j.png","_content":"\n\n\n## **接口测试的概念**\n\n## 1. **接口测试概念**\n\n接口测试是测试系统组件间接口的一种测试，它介于单元测试于系统测试中间。\n\n接口测试主要用于检查外部系统与系统之间以及内部各个子系统之间的交互点。\n\n测试的重点是要检查数据的交换、传递和控制管理过程，以及系统之间的交互点。\n\n换句话说，接口测试就是开发人员把这个接口实现了，我们需要去验证这个接口的实现是否正确。但这是一个后台的功能，不想让前端人员介入，因为让前端人员介入的话会比较麻烦。\n\n**总结：**接口测试就是代替前端验证服务端程序是否正确。\n\n## 2. **接口测试原理**\n\n- 测试人员借助工具模拟客户端向服务器端发送请求。\n- 服务器端接收请求后，对请求进行相应的处理并向客户端响应结果。\n- 客户端接收响应数据后，测试人员对结果进行判断的一个过程。\n\n{%asset_img 01-07-23-110137.png%}\n\n接口测试是黑盒测试。作为黑盒测试，基本的测试思路是通过输入和输出判断被测系统或者对象的逻辑是否正确。\n\n## 3. **做接口测试的依据是什么**\n\n1. 需求。熟悉实际的业务需求可以更好的帮助我们设计测试用例，准备测试数据。\n2. 接口文档。根据接口说明文档开发接口测试脚本，执行脚本。\n3. 原型图。可以根据原型图更好的判断实际测试数据，是否符号接口之间的逻辑关系。\n\n## 4. **接口测试分类**\n\nWeb接口测试：\n\n- 服务器接口测试：测试自己公司实现的接口（工作中的重点）\n\n  同一个系统内部不同模块、不同服务之间的调用。\n\n  比如：目前主流的系统架构为应用层、服务层和数据层。\n\n  应用层：负责展示数据和发起数据请求。\n\n  服务层：为应用层提供数据处理。\n\n  数据层：用来存储数据，有关系型数据库等，各层之间的交互就是通过服务器接口。\n\n- 第三方接口测试：测试别人公司实现的接口（不同系统甚至不同公司之间的接口调试）\n\n  在项目中会用到很多第三方接口，比如要做一个系统来展示每天的天气，那天气数据是怎么得到的呢？不可能自己去预测天气，有免费的第三方接口可使用，只需按照接口协议调用想要的天气数据即可。当然这是调用系统外部的数据。还比如第三方登录时调用外部公司的微博登录接口等。\n\n模块接口测试：就是测试一个类中的方法，或者说模块中的一个接口。\n\n一个程序内部接口的测试，模块接口测试是单元测试的基础，它主要测试模块的调用与返回。\n\n## 5. **接口测试的特点**\n\n{%asset_img 29-07-23-112918.png%}\n\n- 无UI界面：在做接口测试的时候是无法看到应用界面的。\n- 无UI交互操作：既然无UI页面，也就不可能在UI上进行点点点操作了。\n- 不同于手工测试：接口自动化测试可用于持续集成，接口覆盖率也比较高。\n- 基于协议：接口测试是带访问协议的测试，需要测试协议和协议中的内容是否正确。\n- 数据验证：检查数据的交换、传递和控制管理过程，还包括处理的次数、业务逻辑是否正确。\n- 格式校验：请求参数和返回值的数据格式校验，包括参数的缺省、返回的数据是否完全等。\n\n## 6. **接口测试的意义（优势）**\n\n### （1）**更早的发现问题**\n\n不少的测试资料中强调，测试应该更早的介入到项目开发中，因为越早的发现BUG，修复的成本越低。\n\n然而功能测试必须要等到系统提供可测试的界面才能对系统进行测试。\n\n而接口测试可以在功能界面开发出来之前对系统进行测试。\n\n系统接口是上层功能的基础，接口测试可以更早更低成本的发现和解决问题。\n\n然而，在实际的开发过程中，开发人员并没有充足的时间去编写单元测试，并且他们往往对自己编写的代码有足够的信心，不愿意将\"浪费\"时间在编写单元测试上面。\n\n这时候接口测试的作用就会变得更加重要。\n\n### （2）**缩短产品研发周期**\n\n对于产品研发周期来说，如果将所有测试工作都集中在功能测试阶段，那么测试的问题和修复周期就会变长。\n\n因为测试可以更早的介入产品开发中，所以可以有效的控制功能测试阶段BUG数量，从而有效的缩短产品开发周期。\n\n### （3）**发现更底层的问题**\n\n系统的有些底层逻辑是在UI功能测试中不太容易触发的，那么这些逻辑可能会存在问题。接口测试可以更容易更全面的测试到这些底层的逻辑。\n\n### （4）**检查服务器的异常处理能力**\n\n我们通常把前端的验证称为弱验证，因为它很容易被绕过，这个时候如果只站在功能的层面进行测试，就很难发现一些安全的问题。\n\n而不以功能为入口的接口测试就会很容易的验证这些异常情况。\n\n1. 比如订单接口是不允许重复提交的。\n\n2. 有些接口还要考虑性能问题。\n\n3. 比如购物车里有多个商品，全部勾选后去支付，会判断商品库存，这时候能提交成功吗，处理逻辑又有什么？\n\n4. 安全性测试：\n\n   服务端提供API，接口调用方在客户端，之间的通讯暴露在公网上，如果有不善意的用户抓包获取了支付接口，用1元价格购买到了100元商品，这是非常危险的，这就是安全性测试的一个方面。\n\n   SQL注入等也属于这类。\n\n## 7. **UI测试与接口测试对比** \n\n### （1）**UI测试特点**\n\n一般互联网公司、最大的特点就是快，产品需要不停的迭代，迭代世家基本在15天左右。\n\nUI自动化测试的优点是，能够实际模拟真实用户的行为，直接验证软件的商业价值，缺点是用例的维护和执行代价很大。\n\n另外，UI自动化测试的稳定性问题，是长期以来阻碍UI测试发展的重要原因。\n\n在快速迭代的情况下(如不停的更新活动界面)，页面的改动可能会很频繁，而UI自动化测试本身基于页面元素，前端小小的改动可能需要测试的非常大的改动。\n\n所以总结如下：\n\n1. Web应用和App迭代速度非常快。\n2. 页面更新频繁。\n3. 测试成本高于效益。\n4. 可交付于第三方进行测试（云测、众测）\n\n### （2）**接口测试**\n\n针对服务端后台测试，接口规则一旦确定，后期的变化非常的小。\n\n相对于变化频繁的UI来说，接口测试的性价比更高。\n\n这就成为了企业内重点测试的对象，我们都知道服务端中保存着用户数据、业务数据、交易数据等。倘若任何一个接口实现有问题，都会影响所有用户。\n\n正是由于服务端数据和业务逻辑关系着企业的命脉，所以极少会有企业把接口交于第三方测试。\n\n作为测试人员，我们需要验证的是接口间数据传递的正确性和完整性。\n\n\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n\n","source":"_posts/接口测试学习.md","raw":"---\ntitle: 1.接口测试的概念\ndate: 2023-09-07 10:07:57\ntags:\n   - request\n   - 接口测试\ncategories:\n   - 接口测试\nkeywords: \"接口测试\"\nabbrlink: \"\"\ndecription:\ntop_img:\ncover: https://s2.loli.net/2023/09/07/t9qIa3YKB2X4F6j.png\n---\n\n\n\n## **接口测试的概念**\n\n## 1. **接口测试概念**\n\n接口测试是测试系统组件间接口的一种测试，它介于单元测试于系统测试中间。\n\n接口测试主要用于检查外部系统与系统之间以及内部各个子系统之间的交互点。\n\n测试的重点是要检查数据的交换、传递和控制管理过程，以及系统之间的交互点。\n\n换句话说，接口测试就是开发人员把这个接口实现了，我们需要去验证这个接口的实现是否正确。但这是一个后台的功能，不想让前端人员介入，因为让前端人员介入的话会比较麻烦。\n\n**总结：**接口测试就是代替前端验证服务端程序是否正确。\n\n## 2. **接口测试原理**\n\n- 测试人员借助工具模拟客户端向服务器端发送请求。\n- 服务器端接收请求后，对请求进行相应的处理并向客户端响应结果。\n- 客户端接收响应数据后，测试人员对结果进行判断的一个过程。\n\n{%asset_img 01-07-23-110137.png%}\n\n接口测试是黑盒测试。作为黑盒测试，基本的测试思路是通过输入和输出判断被测系统或者对象的逻辑是否正确。\n\n## 3. **做接口测试的依据是什么**\n\n1. 需求。熟悉实际的业务需求可以更好的帮助我们设计测试用例，准备测试数据。\n2. 接口文档。根据接口说明文档开发接口测试脚本，执行脚本。\n3. 原型图。可以根据原型图更好的判断实际测试数据，是否符号接口之间的逻辑关系。\n\n## 4. **接口测试分类**\n\nWeb接口测试：\n\n- 服务器接口测试：测试自己公司实现的接口（工作中的重点）\n\n  同一个系统内部不同模块、不同服务之间的调用。\n\n  比如：目前主流的系统架构为应用层、服务层和数据层。\n\n  应用层：负责展示数据和发起数据请求。\n\n  服务层：为应用层提供数据处理。\n\n  数据层：用来存储数据，有关系型数据库等，各层之间的交互就是通过服务器接口。\n\n- 第三方接口测试：测试别人公司实现的接口（不同系统甚至不同公司之间的接口调试）\n\n  在项目中会用到很多第三方接口，比如要做一个系统来展示每天的天气，那天气数据是怎么得到的呢？不可能自己去预测天气，有免费的第三方接口可使用，只需按照接口协议调用想要的天气数据即可。当然这是调用系统外部的数据。还比如第三方登录时调用外部公司的微博登录接口等。\n\n模块接口测试：就是测试一个类中的方法，或者说模块中的一个接口。\n\n一个程序内部接口的测试，模块接口测试是单元测试的基础，它主要测试模块的调用与返回。\n\n## 5. **接口测试的特点**\n\n{%asset_img 29-07-23-112918.png%}\n\n- 无UI界面：在做接口测试的时候是无法看到应用界面的。\n- 无UI交互操作：既然无UI页面，也就不可能在UI上进行点点点操作了。\n- 不同于手工测试：接口自动化测试可用于持续集成，接口覆盖率也比较高。\n- 基于协议：接口测试是带访问协议的测试，需要测试协议和协议中的内容是否正确。\n- 数据验证：检查数据的交换、传递和控制管理过程，还包括处理的次数、业务逻辑是否正确。\n- 格式校验：请求参数和返回值的数据格式校验，包括参数的缺省、返回的数据是否完全等。\n\n## 6. **接口测试的意义（优势）**\n\n### （1）**更早的发现问题**\n\n不少的测试资料中强调，测试应该更早的介入到项目开发中，因为越早的发现BUG，修复的成本越低。\n\n然而功能测试必须要等到系统提供可测试的界面才能对系统进行测试。\n\n而接口测试可以在功能界面开发出来之前对系统进行测试。\n\n系统接口是上层功能的基础，接口测试可以更早更低成本的发现和解决问题。\n\n然而，在实际的开发过程中，开发人员并没有充足的时间去编写单元测试，并且他们往往对自己编写的代码有足够的信心，不愿意将\"浪费\"时间在编写单元测试上面。\n\n这时候接口测试的作用就会变得更加重要。\n\n### （2）**缩短产品研发周期**\n\n对于产品研发周期来说，如果将所有测试工作都集中在功能测试阶段，那么测试的问题和修复周期就会变长。\n\n因为测试可以更早的介入产品开发中，所以可以有效的控制功能测试阶段BUG数量，从而有效的缩短产品开发周期。\n\n### （3）**发现更底层的问题**\n\n系统的有些底层逻辑是在UI功能测试中不太容易触发的，那么这些逻辑可能会存在问题。接口测试可以更容易更全面的测试到这些底层的逻辑。\n\n### （4）**检查服务器的异常处理能力**\n\n我们通常把前端的验证称为弱验证，因为它很容易被绕过，这个时候如果只站在功能的层面进行测试，就很难发现一些安全的问题。\n\n而不以功能为入口的接口测试就会很容易的验证这些异常情况。\n\n1. 比如订单接口是不允许重复提交的。\n\n2. 有些接口还要考虑性能问题。\n\n3. 比如购物车里有多个商品，全部勾选后去支付，会判断商品库存，这时候能提交成功吗，处理逻辑又有什么？\n\n4. 安全性测试：\n\n   服务端提供API，接口调用方在客户端，之间的通讯暴露在公网上，如果有不善意的用户抓包获取了支付接口，用1元价格购买到了100元商品，这是非常危险的，这就是安全性测试的一个方面。\n\n   SQL注入等也属于这类。\n\n## 7. **UI测试与接口测试对比** \n\n### （1）**UI测试特点**\n\n一般互联网公司、最大的特点就是快，产品需要不停的迭代，迭代世家基本在15天左右。\n\nUI自动化测试的优点是，能够实际模拟真实用户的行为，直接验证软件的商业价值，缺点是用例的维护和执行代价很大。\n\n另外，UI自动化测试的稳定性问题，是长期以来阻碍UI测试发展的重要原因。\n\n在快速迭代的情况下(如不停的更新活动界面)，页面的改动可能会很频繁，而UI自动化测试本身基于页面元素，前端小小的改动可能需要测试的非常大的改动。\n\n所以总结如下：\n\n1. Web应用和App迭代速度非常快。\n2. 页面更新频繁。\n3. 测试成本高于效益。\n4. 可交付于第三方进行测试（云测、众测）\n\n### （2）**接口测试**\n\n针对服务端后台测试，接口规则一旦确定，后期的变化非常的小。\n\n相对于变化频繁的UI来说，接口测试的性价比更高。\n\n这就成为了企业内重点测试的对象，我们都知道服务端中保存着用户数据、业务数据、交易数据等。倘若任何一个接口实现有问题，都会影响所有用户。\n\n正是由于服务端数据和业务逻辑关系着企业的命脉，所以极少会有企业把接口交于第三方测试。\n\n作为测试人员，我们需要验证的是接口间数据传递的正确性和完整性。\n\n\n\n本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n\n","slug":"接口测试学习","published":1,"updated":"2023-09-19T03:55:13.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4npz001yfw48h8pvb2lo","content":"<h2 id=\"接口测试的概念\"><a href=\"#接口测试的概念\" class=\"headerlink\" title=\"接口测试的概念\"></a><strong>接口测试的概念</strong></h2><h2 id=\"1-接口测试概念\"><a href=\"#1-接口测试概念\" class=\"headerlink\" title=\"1. 接口测试概念\"></a>1. <strong>接口测试概念</strong></h2><p>接口测试是测试系统组件间接口的一种测试，它介于单元测试于系统测试中间。</p>\n<p>接口测试主要用于检查外部系统与系统之间以及内部各个子系统之间的交互点。</p>\n<p>测试的重点是要检查数据的交换、传递和控制管理过程，以及系统之间的交互点。</p>\n<p>换句话说，接口测试就是开发人员把这个接口实现了，我们需要去验证这个接口的实现是否正确。但这是一个后台的功能，不想让前端人员介入，因为让前端人员介入的话会比较麻烦。</p>\n<p><strong>总结：</strong>接口测试就是代替前端验证服务端程序是否正确。</p>\n<h2 id=\"2-接口测试原理\"><a href=\"#2-接口测试原理\" class=\"headerlink\" title=\"2. 接口测试原理\"></a>2. <strong>接口测试原理</strong></h2><ul>\n<li>测试人员借助工具模拟客户端向服务器端发送请求。</li>\n<li>服务器端接收请求后，对请求进行相应的处理并向客户端响应结果。</li>\n<li>客户端接收响应数据后，测试人员对结果进行判断的一个过程。</li>\n</ul>\n<img src=\"/2023/09/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0/01-07-23-110137.png\" class>\n\n<p>接口测试是黑盒测试。作为黑盒测试，基本的测试思路是通过输入和输出判断被测系统或者对象的逻辑是否正确。</p>\n<h2 id=\"3-做接口测试的依据是什么\"><a href=\"#3-做接口测试的依据是什么\" class=\"headerlink\" title=\"3. 做接口测试的依据是什么\"></a>3. <strong>做接口测试的依据是什么</strong></h2><ol>\n<li>需求。熟悉实际的业务需求可以更好的帮助我们设计测试用例，准备测试数据。</li>\n<li>接口文档。根据接口说明文档开发接口测试脚本，执行脚本。</li>\n<li>原型图。可以根据原型图更好的判断实际测试数据，是否符号接口之间的逻辑关系。</li>\n</ol>\n<h2 id=\"4-接口测试分类\"><a href=\"#4-接口测试分类\" class=\"headerlink\" title=\"4. 接口测试分类\"></a>4. <strong>接口测试分类</strong></h2><p>Web接口测试：</p>\n<ul>\n<li><p>服务器接口测试：测试自己公司实现的接口（工作中的重点）</p>\n<p>同一个系统内部不同模块、不同服务之间的调用。</p>\n<p>比如：目前主流的系统架构为应用层、服务层和数据层。</p>\n<p>应用层：负责展示数据和发起数据请求。</p>\n<p>服务层：为应用层提供数据处理。</p>\n<p>数据层：用来存储数据，有关系型数据库等，各层之间的交互就是通过服务器接口。</p>\n</li>\n<li><p>第三方接口测试：测试别人公司实现的接口（不同系统甚至不同公司之间的接口调试）</p>\n<p>在项目中会用到很多第三方接口，比如要做一个系统来展示每天的天气，那天气数据是怎么得到的呢？不可能自己去预测天气，有免费的第三方接口可使用，只需按照接口协议调用想要的天气数据即可。当然这是调用系统外部的数据。还比如第三方登录时调用外部公司的微博登录接口等。</p>\n</li>\n</ul>\n<p>模块接口测试：就是测试一个类中的方法，或者说模块中的一个接口。</p>\n<p>一个程序内部接口的测试，模块接口测试是单元测试的基础，它主要测试模块的调用与返回。</p>\n<h2 id=\"5-接口测试的特点\"><a href=\"#5-接口测试的特点\" class=\"headerlink\" title=\"5. 接口测试的特点\"></a>5. <strong>接口测试的特点</strong></h2><img src=\"/2023/09/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0/29-07-23-112918.png\" class>\n\n<ul>\n<li>无UI界面：在做接口测试的时候是无法看到应用界面的。</li>\n<li>无UI交互操作：既然无UI页面，也就不可能在UI上进行点点点操作了。</li>\n<li>不同于手工测试：接口自动化测试可用于持续集成，接口覆盖率也比较高。</li>\n<li>基于协议：接口测试是带访问协议的测试，需要测试协议和协议中的内容是否正确。</li>\n<li>数据验证：检查数据的交换、传递和控制管理过程，还包括处理的次数、业务逻辑是否正确。</li>\n<li>格式校验：请求参数和返回值的数据格式校验，包括参数的缺省、返回的数据是否完全等。</li>\n</ul>\n<h2 id=\"6-接口测试的意义（优势）\"><a href=\"#6-接口测试的意义（优势）\" class=\"headerlink\" title=\"6. 接口测试的意义（优势）\"></a>6. <strong>接口测试的意义（优势）</strong></h2><h3 id=\"（1）更早的发现问题\"><a href=\"#（1）更早的发现问题\" class=\"headerlink\" title=\"（1）更早的发现问题\"></a>（1）<strong>更早的发现问题</strong></h3><p>不少的测试资料中强调，测试应该更早的介入到项目开发中，因为越早的发现BUG，修复的成本越低。</p>\n<p>然而功能测试必须要等到系统提供可测试的界面才能对系统进行测试。</p>\n<p>而接口测试可以在功能界面开发出来之前对系统进行测试。</p>\n<p>系统接口是上层功能的基础，接口测试可以更早更低成本的发现和解决问题。</p>\n<p>然而，在实际的开发过程中，开发人员并没有充足的时间去编写单元测试，并且他们往往对自己编写的代码有足够的信心，不愿意将”浪费”时间在编写单元测试上面。</p>\n<p>这时候接口测试的作用就会变得更加重要。</p>\n<h3 id=\"（2）缩短产品研发周期\"><a href=\"#（2）缩短产品研发周期\" class=\"headerlink\" title=\"（2）缩短产品研发周期\"></a>（2）<strong>缩短产品研发周期</strong></h3><p>对于产品研发周期来说，如果将所有测试工作都集中在功能测试阶段，那么测试的问题和修复周期就会变长。</p>\n<p>因为测试可以更早的介入产品开发中，所以可以有效的控制功能测试阶段BUG数量，从而有效的缩短产品开发周期。</p>\n<h3 id=\"（3）发现更底层的问题\"><a href=\"#（3）发现更底层的问题\" class=\"headerlink\" title=\"（3）发现更底层的问题\"></a>（3）<strong>发现更底层的问题</strong></h3><p>系统的有些底层逻辑是在UI功能测试中不太容易触发的，那么这些逻辑可能会存在问题。接口测试可以更容易更全面的测试到这些底层的逻辑。</p>\n<h3 id=\"（4）检查服务器的异常处理能力\"><a href=\"#（4）检查服务器的异常处理能力\" class=\"headerlink\" title=\"（4）检查服务器的异常处理能力\"></a>（4）<strong>检查服务器的异常处理能力</strong></h3><p>我们通常把前端的验证称为弱验证，因为它很容易被绕过，这个时候如果只站在功能的层面进行测试，就很难发现一些安全的问题。</p>\n<p>而不以功能为入口的接口测试就会很容易的验证这些异常情况。</p>\n<ol>\n<li><p>比如订单接口是不允许重复提交的。</p>\n</li>\n<li><p>有些接口还要考虑性能问题。</p>\n</li>\n<li><p>比如购物车里有多个商品，全部勾选后去支付，会判断商品库存，这时候能提交成功吗，处理逻辑又有什么？</p>\n</li>\n<li><p>安全性测试：</p>\n<p>服务端提供API，接口调用方在客户端，之间的通讯暴露在公网上，如果有不善意的用户抓包获取了支付接口，用1元价格购买到了100元商品，这是非常危险的，这就是安全性测试的一个方面。</p>\n<p>SQL注入等也属于这类。</p>\n</li>\n</ol>\n<h2 id=\"7-UI测试与接口测试对比\"><a href=\"#7-UI测试与接口测试对比\" class=\"headerlink\" title=\"7. UI测试与接口测试对比\"></a>7. <strong>UI测试与接口测试对比</strong></h2><h3 id=\"（1）UI测试特点\"><a href=\"#（1）UI测试特点\" class=\"headerlink\" title=\"（1）UI测试特点\"></a>（1）<strong>UI测试特点</strong></h3><p>一般互联网公司、最大的特点就是快，产品需要不停的迭代，迭代世家基本在15天左右。</p>\n<p>UI自动化测试的优点是，能够实际模拟真实用户的行为，直接验证软件的商业价值，缺点是用例的维护和执行代价很大。</p>\n<p>另外，UI自动化测试的稳定性问题，是长期以来阻碍UI测试发展的重要原因。</p>\n<p>在快速迭代的情况下(如不停的更新活动界面)，页面的改动可能会很频繁，而UI自动化测试本身基于页面元素，前端小小的改动可能需要测试的非常大的改动。</p>\n<p>所以总结如下：</p>\n<ol>\n<li>Web应用和App迭代速度非常快。</li>\n<li>页面更新频繁。</li>\n<li>测试成本高于效益。</li>\n<li>可交付于第三方进行测试（云测、众测）</li>\n</ol>\n<h3 id=\"（2）接口测试\"><a href=\"#（2）接口测试\" class=\"headerlink\" title=\"（2）接口测试\"></a>（2）<strong>接口测试</strong></h3><p>针对服务端后台测试，接口规则一旦确定，后期的变化非常的小。</p>\n<p>相对于变化频繁的UI来说，接口测试的性价比更高。</p>\n<p>这就成为了企业内重点测试的对象，我们都知道服务端中保存着用户数据、业务数据、交易数据等。倘若任何一个接口实现有问题，都会影响所有用户。</p>\n<p>正是由于服务端数据和业务逻辑关系着企业的命脉，所以极少会有企业把接口交于第三方测试。</p>\n<p>作为测试人员，我们需要验证的是接口间数据传递的正确性和完整性。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"接口测试的概念\"><a href=\"#接口测试的概念\" class=\"headerlink\" title=\"接口测试的概念\"></a><strong>接口测试的概念</strong></h2><h2 id=\"1-接口测试概念\"><a href=\"#1-接口测试概念\" class=\"headerlink\" title=\"1. 接口测试概念\"></a>1. <strong>接口测试概念</strong></h2><p>接口测试是测试系统组件间接口的一种测试，它介于单元测试于系统测试中间。</p>\n<p>接口测试主要用于检查外部系统与系统之间以及内部各个子系统之间的交互点。</p>\n<p>测试的重点是要检查数据的交换、传递和控制管理过程，以及系统之间的交互点。</p>\n<p>换句话说，接口测试就是开发人员把这个接口实现了，我们需要去验证这个接口的实现是否正确。但这是一个后台的功能，不想让前端人员介入，因为让前端人员介入的话会比较麻烦。</p>\n<p><strong>总结：</strong>接口测试就是代替前端验证服务端程序是否正确。</p>\n<h2 id=\"2-接口测试原理\"><a href=\"#2-接口测试原理\" class=\"headerlink\" title=\"2. 接口测试原理\"></a>2. <strong>接口测试原理</strong></h2><ul>\n<li>测试人员借助工具模拟客户端向服务器端发送请求。</li>\n<li>服务器端接收请求后，对请求进行相应的处理并向客户端响应结果。</li>\n<li>客户端接收响应数据后，测试人员对结果进行判断的一个过程。</li>\n</ul>\n<img src=\"/2023/09/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0/01-07-23-110137.png\" class>\n\n<p>接口测试是黑盒测试。作为黑盒测试，基本的测试思路是通过输入和输出判断被测系统或者对象的逻辑是否正确。</p>\n<h2 id=\"3-做接口测试的依据是什么\"><a href=\"#3-做接口测试的依据是什么\" class=\"headerlink\" title=\"3. 做接口测试的依据是什么\"></a>3. <strong>做接口测试的依据是什么</strong></h2><ol>\n<li>需求。熟悉实际的业务需求可以更好的帮助我们设计测试用例，准备测试数据。</li>\n<li>接口文档。根据接口说明文档开发接口测试脚本，执行脚本。</li>\n<li>原型图。可以根据原型图更好的判断实际测试数据，是否符号接口之间的逻辑关系。</li>\n</ol>\n<h2 id=\"4-接口测试分类\"><a href=\"#4-接口测试分类\" class=\"headerlink\" title=\"4. 接口测试分类\"></a>4. <strong>接口测试分类</strong></h2><p>Web接口测试：</p>\n<ul>\n<li><p>服务器接口测试：测试自己公司实现的接口（工作中的重点）</p>\n<p>同一个系统内部不同模块、不同服务之间的调用。</p>\n<p>比如：目前主流的系统架构为应用层、服务层和数据层。</p>\n<p>应用层：负责展示数据和发起数据请求。</p>\n<p>服务层：为应用层提供数据处理。</p>\n<p>数据层：用来存储数据，有关系型数据库等，各层之间的交互就是通过服务器接口。</p>\n</li>\n<li><p>第三方接口测试：测试别人公司实现的接口（不同系统甚至不同公司之间的接口调试）</p>\n<p>在项目中会用到很多第三方接口，比如要做一个系统来展示每天的天气，那天气数据是怎么得到的呢？不可能自己去预测天气，有免费的第三方接口可使用，只需按照接口协议调用想要的天气数据即可。当然这是调用系统外部的数据。还比如第三方登录时调用外部公司的微博登录接口等。</p>\n</li>\n</ul>\n<p>模块接口测试：就是测试一个类中的方法，或者说模块中的一个接口。</p>\n<p>一个程序内部接口的测试，模块接口测试是单元测试的基础，它主要测试模块的调用与返回。</p>\n<h2 id=\"5-接口测试的特点\"><a href=\"#5-接口测试的特点\" class=\"headerlink\" title=\"5. 接口测试的特点\"></a>5. <strong>接口测试的特点</strong></h2><img src=\"/2023/09/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0/29-07-23-112918.png\" class>\n\n<ul>\n<li>无UI界面：在做接口测试的时候是无法看到应用界面的。</li>\n<li>无UI交互操作：既然无UI页面，也就不可能在UI上进行点点点操作了。</li>\n<li>不同于手工测试：接口自动化测试可用于持续集成，接口覆盖率也比较高。</li>\n<li>基于协议：接口测试是带访问协议的测试，需要测试协议和协议中的内容是否正确。</li>\n<li>数据验证：检查数据的交换、传递和控制管理过程，还包括处理的次数、业务逻辑是否正确。</li>\n<li>格式校验：请求参数和返回值的数据格式校验，包括参数的缺省、返回的数据是否完全等。</li>\n</ul>\n<h2 id=\"6-接口测试的意义（优势）\"><a href=\"#6-接口测试的意义（优势）\" class=\"headerlink\" title=\"6. 接口测试的意义（优势）\"></a>6. <strong>接口测试的意义（优势）</strong></h2><h3 id=\"（1）更早的发现问题\"><a href=\"#（1）更早的发现问题\" class=\"headerlink\" title=\"（1）更早的发现问题\"></a>（1）<strong>更早的发现问题</strong></h3><p>不少的测试资料中强调，测试应该更早的介入到项目开发中，因为越早的发现BUG，修复的成本越低。</p>\n<p>然而功能测试必须要等到系统提供可测试的界面才能对系统进行测试。</p>\n<p>而接口测试可以在功能界面开发出来之前对系统进行测试。</p>\n<p>系统接口是上层功能的基础，接口测试可以更早更低成本的发现和解决问题。</p>\n<p>然而，在实际的开发过程中，开发人员并没有充足的时间去编写单元测试，并且他们往往对自己编写的代码有足够的信心，不愿意将”浪费”时间在编写单元测试上面。</p>\n<p>这时候接口测试的作用就会变得更加重要。</p>\n<h3 id=\"（2）缩短产品研发周期\"><a href=\"#（2）缩短产品研发周期\" class=\"headerlink\" title=\"（2）缩短产品研发周期\"></a>（2）<strong>缩短产品研发周期</strong></h3><p>对于产品研发周期来说，如果将所有测试工作都集中在功能测试阶段，那么测试的问题和修复周期就会变长。</p>\n<p>因为测试可以更早的介入产品开发中，所以可以有效的控制功能测试阶段BUG数量，从而有效的缩短产品开发周期。</p>\n<h3 id=\"（3）发现更底层的问题\"><a href=\"#（3）发现更底层的问题\" class=\"headerlink\" title=\"（3）发现更底层的问题\"></a>（3）<strong>发现更底层的问题</strong></h3><p>系统的有些底层逻辑是在UI功能测试中不太容易触发的，那么这些逻辑可能会存在问题。接口测试可以更容易更全面的测试到这些底层的逻辑。</p>\n<h3 id=\"（4）检查服务器的异常处理能力\"><a href=\"#（4）检查服务器的异常处理能力\" class=\"headerlink\" title=\"（4）检查服务器的异常处理能力\"></a>（4）<strong>检查服务器的异常处理能力</strong></h3><p>我们通常把前端的验证称为弱验证，因为它很容易被绕过，这个时候如果只站在功能的层面进行测试，就很难发现一些安全的问题。</p>\n<p>而不以功能为入口的接口测试就会很容易的验证这些异常情况。</p>\n<ol>\n<li><p>比如订单接口是不允许重复提交的。</p>\n</li>\n<li><p>有些接口还要考虑性能问题。</p>\n</li>\n<li><p>比如购物车里有多个商品，全部勾选后去支付，会判断商品库存，这时候能提交成功吗，处理逻辑又有什么？</p>\n</li>\n<li><p>安全性测试：</p>\n<p>服务端提供API，接口调用方在客户端，之间的通讯暴露在公网上，如果有不善意的用户抓包获取了支付接口，用1元价格购买到了100元商品，这是非常危险的，这就是安全性测试的一个方面。</p>\n<p>SQL注入等也属于这类。</p>\n</li>\n</ol>\n<h2 id=\"7-UI测试与接口测试对比\"><a href=\"#7-UI测试与接口测试对比\" class=\"headerlink\" title=\"7. UI测试与接口测试对比\"></a>7. <strong>UI测试与接口测试对比</strong></h2><h3 id=\"（1）UI测试特点\"><a href=\"#（1）UI测试特点\" class=\"headerlink\" title=\"（1）UI测试特点\"></a>（1）<strong>UI测试特点</strong></h3><p>一般互联网公司、最大的特点就是快，产品需要不停的迭代，迭代世家基本在15天左右。</p>\n<p>UI自动化测试的优点是，能够实际模拟真实用户的行为，直接验证软件的商业价值，缺点是用例的维护和执行代价很大。</p>\n<p>另外，UI自动化测试的稳定性问题，是长期以来阻碍UI测试发展的重要原因。</p>\n<p>在快速迭代的情况下(如不停的更新活动界面)，页面的改动可能会很频繁，而UI自动化测试本身基于页面元素，前端小小的改动可能需要测试的非常大的改动。</p>\n<p>所以总结如下：</p>\n<ol>\n<li>Web应用和App迭代速度非常快。</li>\n<li>页面更新频繁。</li>\n<li>测试成本高于效益。</li>\n<li>可交付于第三方进行测试（云测、众测）</li>\n</ol>\n<h3 id=\"（2）接口测试\"><a href=\"#（2）接口测试\" class=\"headerlink\" title=\"（2）接口测试\"></a>（2）<strong>接口测试</strong></h3><p>针对服务端后台测试，接口规则一旦确定，后期的变化非常的小。</p>\n<p>相对于变化频繁的UI来说，接口测试的性价比更高。</p>\n<p>这就成为了企业内重点测试的对象，我们都知道服务端中保存着用户数据、业务数据、交易数据等。倘若任何一个接口实现有问题，都会影响所有用户。</p>\n<p>正是由于服务端数据和业务逻辑关系着企业的命脉，所以极少会有企业把接口交于第三方测试。</p>\n<p>作为测试人员，我们需要验证的是接口间数据传递的正确性和完整性。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n"},{"title":"服务器部署系统(nginx)","date":"2023-09-13T03:47:07.000Z","keywords":"Nginx基础学习","abbrlink":"","decription":null,"top_img":null,"cover":"https://s2.loli.net/2023/09/12/9OemvhVWbf785rQ.png","_content":"\n## **服务器部署系统（Nginx负载均衡）**\n\n### 1.**部署步骤**\n\n1.  **上游服务器部署tomcat**\n2.  **安装JDK**\n3.  **安装Mysql**\n4. **上传部署项目**\n5.  **代理服务器（安装Nginx）**\n\n### 2.**详细步骤说明**\n\n1.  **上游服务器部署tomcat**\n\n   **以apache-Tomcat-7.0.57.tar.gz为例：**\n\n   --->\n\n   [官网下载]: https://tomcat.apache.org/\t\"Tomcat下载\"\n\n   并将Tomcat压缩包通过MobaXterm上传到Linux服务器,在指令控制台通过命令：\n\n   ```shell\n   # 解压文件指令\n   tar -xvzf apache-tomcat-7.0.57.tar.gz\n   ```\n\n2. **安装JDK（注意：版本要匹配！！！）**\n\n   **以jdk-8u131-linux-i586.rpm为例：**\n\n   --->\n\n   [官网下载]: http://www.codebaoku.com/jdk/jdk-index.html\t\"JDK下载\"\n\n   并将jdk-8u131-linux-i586.rpm软件安装包通过MobaXterm上传到Linux服务器，在指令控制台通过命令：\n\n   ```shell\n   # RPM软件安装包安装指令\n   rpm -ivh jdk-8u131-linux-i586.rpm\n   ```\n\n   或\n\n   ```shell\n   # RPM软件安装包安装指令\n   rpm -ivh jdk-8u131-linux-i586.rpm --nodeps --force\n   ```\n\n   在 RPM 文件安装过程中，`--nodeps` 和 `--force` 是两个常用的选项，它们的作用如下：\n\n   1. `--nodeps`：这个选项告诉 RPM 安装程序忽略依赖关系。通常情况下，RPM 安装程序会检查将要安装的软件包是否依赖于其他软件包，如果依赖关系没有满足，安装将会失败。使用 `--nodeps` 选项可以跳过这个依赖检查，强制安装软件包，即使依赖关系没有满足。但是需要注意，使用 `--nodeps` 可能会导致系统中的软件包依赖关系出现问题。\n   2. `--force`：这个选项告诉 RPM 安装程序强制安装软件包，即使已经存在相同名称和版本的软件包。通常情况下，如果已经安装了相同名称和版本的软件包，RPM 安装程序会拒绝安装，并显示错误消息。使用 `--force` 选项可以覆盖已安装的软件包，强制安装新的软件包，即使它们的名称和版本相同。但是需要注意，使用 `--force` 可能会导致系统中的软件包出现冲突或不一致的情况。\n\n3. **安装Mysql**\n\n   **以MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar为例：**\n\n   --->\n\n   [官方下载]: https://www.mysql.com/downloads/\t\"MySQL下载\"\n\n   并将MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：\n\n   ```shell\n   tar -xvzf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar\n   ```\n\n   或\n\n   ```shell\n   tar -xvf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar\n   ```\n\n   首先确认数据库的登陆密码是否是root，不是root则改为root   \n   \t登陆到数据库执行修改密码命令：\n\n   ```mysql\n   grant  all privileges on  *.* to 'root'@'localhost' identified by 'root';\n   ```\n\n   ```mysql\n   flush privileges;\n   ```\n\n   将xxx.sql文件导入到数据库中，不用进入Mysql。\n\n   ```shell\n   mysql -uroot -proot < xxx.sql\n   ```\n\n   \n\n4. **上传部署项目**\n\n   **以某某系统为例：**\n\n   --->将开发的应用程序，打包成可执行的xx.jar的Java应用程序，将xx.jar的Java应用程序和资源文件通过MobaXterm上传到服务器，在环境配置完成后，在控制台指令通过命令：\n\n   ```shell\n   java -jar xx.jar\n   ```\n\n   启动Java应用程序\n\n5. **代理服务器（Nginx安装）**\n\n   在一般情况下，安装 Nginx 并不需要安装 `gcc` 和 `gcc-c++`，因为 Nginx 是一个已经编译好的二进制文件，不需要在服务器上进行编译。然而，如果你需要自定义编译 Nginx 或者安装一些 Nginx 的第三方模块，那么可能需要安装 `gcc` 和 `gcc-c++`。\n\n   `gcc` 和 `gcc-c++` 是 GNU Compiler Collection 的一部分，它们提供了编译和链接 C 和 C++ 程序所需的工具和库。在编译 Nginx 或者一些第三方模块时，可能会使用到 C 或 C++ 语言的代码，因此需要安装这两个软件包。\n\n   要安装 `gcc` 和 `gcc-c++`，可以根据你使用的 Linux 发行版执行相应的命令：\n\n   - 在 Ubuntu 或者其他基于 Debian 的发行版上，可以使用以下命令安装：\n\n   - ```shell\n     sudo apt-get update sudo apt-get install build-essential\n     ```\n\n   - 在 CentOS 或者其他基于 Red Hat 的发行版上，可以使用以下命令安装：\n\n   - ```shell\n     sudo yum update sudo yum groupinstall \"Development Tools\"\n     ```\n\n   安装完成后，你就可以使用 `gcc` 和 `g++` 命令进行编译和链接操作了。\n\n   ////////////////////////////////////////////////////////////////////////\n\n   下载gcc和gcc-c++软件安装包，并将gcc和gcc-c++安装包内的所有RPM软件安装文件安装，首先切到gcc和gcc-c++目录下，执行命令：\n\n   ```shell\n   rpm -ivh *.rpm --nodeps --force\n   ```\n\n   或\n\n   ```shell\n   rpm -ivh /home/xx/xx/gcc *.rpm --nodeps --force\n   ```\n\n   **以nginx-1.13.9.tar.gz为例**：\n\n   --->\n\n   [官网下载]: https://www.newbe.pro/Mirrors/Mirrors-Nginx/\t\"Nginx下载\"\n\n   ，并将nginx-1.13.9.tar.gz压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：\n\n   ```shell\n   tar -xvzf nginx-1.13.9.tar.gz\n   ```\n\n   完成nginx解压，进入到目录。\n\n   ​          执行环境检查\n\n   ```shell\n    ./configure   --without-http_rewrite_module\n   ```\n\n   ​\t      编译和安装 \n\n   ```shell\n   make   && make install\n   ```\n\n   **验证：**\n   \t进入到/usr/local/nginx/sbin/\n   \t./nginx   启动\n\n   ```shell\n   ./nginx\n   ```\n\n   与\n\n   ```shell\n   ./nginx -s reload\n   ```\n\n   ​\t\n\n   打开浏览器，直接访问linuxip地址即可。\n   \tWELCOME  to  nginx!\n\n   ////////////////////////////////////////////////////////////////\n\n   **设置代理**\n\n   配置nginx的配置文件，找到nginx的安装目录，默认路径/usr/local/nginx/conf/nginx.conf。编辑nginx.conf文件的命令：\n\n   ```shell\n   vi nginx.conf\n   ```\n\n   进入vim文本查看模式，按键盘A进入可编辑模式，\n\n   在Server上方添加上游服务器列表：\n\n   ```shell\n   upstream 上游服务器变量名 {\n        server 第一台上游服务器IP地址:访问应用端口号;\n        server 第二台上游服务器IP地址:访问应用端口号;\n        ip_hash;\n        多台服务器，以此类推...\n   }\n   ```\n\n   Server内部添加代理URL地址：\n\n   ```shell\n   localhost / {\n         proxy_pass http://上游服务器变量名;\n         ......\n   }\n   ```\n\n   按ESC键，键盘输入:wq, 回车退出并保存。\n\n### 3.**过程出现问题**\n\n1. **上游部署的服务器要关闭防火墙**\n\n   关闭防火墙命令：\n\n   ```shell\n   systemctl stop firewalld\n   ```\n\n   或\n\n   ```shell\n   service iptables stop\n   ```\n\n   如果不关闭防火墙，会导致Nginx代理服务器无法访问\n\n2. **JDK进行安装出现Could not .... tool.pack  tool.tar**\n\n   原因1：JDK卸载时，没有卸载干净，切换到jdk-xxx的安装目录下，执行命令：\n\n   ```shell\n   rpm -e jdk-xxxx\n   ```\n\n   原因2：由于jdk安装包版本太旧，这是jdk安装包自身问题，重新下载个jdk安装包\n\n3. **Nginx的配置文件(/usr/local/nginx/conf)-nginx.conf修改--error：400**\n\n   在 Nginx 配置文件中，变量名不允许出现下划线。这是因为 Nginx 配置文件中的变量命名规则与变量命名规则在其他编程语言中可能不同。\n\n   根据 Nginx 的变量命名规则，变量名只能包含字母、数字和连字符（`-`），并且不能以连字符开头。下划线不在允许的字符范围内，因此不能在变量名中使用下划线。\n\n   如果你在 Nginx 配置文件中使用了下划线作为变量名的一部分，Nginx 将无法正确解析该配置，并可能导致配置文件加载失败或出现其他错误。\n\n   为了解决这个问题，你可以考虑使用连字符（`-`）来替代下划线。如果你需要在变量名中表示多个单词，可以使用驼峰命名法或使用连字符（`-`）来分隔单词。\n\n   例如，如果你想使用一个变量来表示用户的 ID，可以使用类似于 `user_id` 或 `userId` 的命名方式，而不是 `user_id`。这样可以避免在 Nginx 配置文件中出现下划线导致的问题。\n\n   总之，确保在 Nginx 配置文件中的变量名中只使用允许的字符（字母、数字和连字符），并遵循 Nginx 的变量命名规则。\n\n4. **MobaXterm与服务端操作不实时同步**\n\n   如果你在使用 MobaXterm 连接到远程服务器时，发现操作不实时同步，可能是由于远程服务器的终端设置或网络延迟引起的。\n\n   有几种方法可以尝试解决这个问题：\n\n   1. 调整 MobaXterm 的设置：在 MobaXterm 的会话设置中，尝试将 \"Terminal-type string\" 设置为 \"xterm\" 或 \"xterm-256color\"，并确保 \"Terminal emulation\" 设置为 \"Xterm\"。这有时可以解决与远程服务器的终端同步问题。\n   2. 使用其他终端工具：如果问题仍然存在，可以尝试使用其他 SSH 客户端或终端工具，如 PuTTY、SecureCRT 等，看是否能够实时同步操作。\n   3. 检查网络连接和延迟：确保你的网络连接稳定，并检查网络延迟。如果网络延迟较高，可能会导致操作不实时同步。你可以使用 `ping` 命令测试网络延迟，例如 `ping google.com`。\n   4. 联系系统管理员：如果问题仍然存在，可能是服务器端的配置或性能问题导致的。联系服务器的系统管理员，寻求帮助并了解是否有相关的配置或调整可以改善同步问题。\n   5. 登录服务器，进入配置文件目录查看配置文件是否已经修改的，如果不是，进行修改并保存。\n\n   需要注意的是，以上方法可能不适用于每个情况，具体的解决方法可能因个人情况而异。如果问题持续存在，建议与系统管理员或技术支持人员进行进一步的沟通和协助。\n\n5. **nginx服务器访问系统，页面无法跳转**\n\n   在 Nginx 配置中，`id_hash` 是一种用于负载均衡的配置指令，它用于根据客户端 IP 地址进行哈希算法，以便将请求分发给相同的后端服务器。\n\n   当使用 `id_hash` 配置指令时，Nginx 会计算客户端 IP 地址的哈希值，并将该哈希值与后端服务器列表中的服务器数量取模，以确定将请求发送到哪个后端服务器。这样做的目的是确保相同 IP 地址的请求始终被发送到同一台后端服务器，以保持会话的一致性。\n\n   使用 `id_hash` 配置指令的一个常见应用场景是在负载均衡集群中使用会话保持（session persistence），确保用户的会话数据在同一台服务器上保持一致，避免因为请求被分发到不同的服务器而导致会话丢失或数据不一致的问题。\n\n   以下是一个示例的 Nginx 配置片段，展示了如何使用 `id_hash` 配置指令：\n\n   ```nginx\n   http {    \n       upstream backend {        \n           ip_hash;        \n           server backend1.example.com;             server backend2.example.com;             server backend3.example.com;         }     \n       server {        \n           listen 80;        \n           server_name example.com;         location / {            \n               proxy_pass http://backend;        }    \n       }\n   } \n   ```\n\n   在上述配置中，`ip_hash` 指令用于基于客户端 IP 地址进行哈希负载均衡，确保相同 IP 的请求发送到同一台后端服务器。你也可以使用 `id_hash` 替代 `ip_hash`，其效果是一样的。\n\n   需要注意的是，使用哈希负载均衡时，如果后端服务器的数量发生变化，可能会导致哈希算法重新分配请求，这可能会影响会话的一致性。因此，在调整后端服务器数量时，需要谨慎考虑会话保持的问题。\n","source":"_posts/服务器部署系统-nginx.md","raw":"---\ntitle: 服务器部署系统(nginx)\ndate: 2023-09-13 11:47:07\ntags:\n   - 服务器部署系统\n   - Nginx\ncategories:\n   - Nginx搭建\nkeywords: \"Nginx基础学习\"\nabbrlink: \"\"\ndecription:\ntop_img:\ncover: https://s2.loli.net/2023/09/12/9OemvhVWbf785rQ.png\n---\n\n## **服务器部署系统（Nginx负载均衡）**\n\n### 1.**部署步骤**\n\n1.  **上游服务器部署tomcat**\n2.  **安装JDK**\n3.  **安装Mysql**\n4. **上传部署项目**\n5.  **代理服务器（安装Nginx）**\n\n### 2.**详细步骤说明**\n\n1.  **上游服务器部署tomcat**\n\n   **以apache-Tomcat-7.0.57.tar.gz为例：**\n\n   --->\n\n   [官网下载]: https://tomcat.apache.org/\t\"Tomcat下载\"\n\n   并将Tomcat压缩包通过MobaXterm上传到Linux服务器,在指令控制台通过命令：\n\n   ```shell\n   # 解压文件指令\n   tar -xvzf apache-tomcat-7.0.57.tar.gz\n   ```\n\n2. **安装JDK（注意：版本要匹配！！！）**\n\n   **以jdk-8u131-linux-i586.rpm为例：**\n\n   --->\n\n   [官网下载]: http://www.codebaoku.com/jdk/jdk-index.html\t\"JDK下载\"\n\n   并将jdk-8u131-linux-i586.rpm软件安装包通过MobaXterm上传到Linux服务器，在指令控制台通过命令：\n\n   ```shell\n   # RPM软件安装包安装指令\n   rpm -ivh jdk-8u131-linux-i586.rpm\n   ```\n\n   或\n\n   ```shell\n   # RPM软件安装包安装指令\n   rpm -ivh jdk-8u131-linux-i586.rpm --nodeps --force\n   ```\n\n   在 RPM 文件安装过程中，`--nodeps` 和 `--force` 是两个常用的选项，它们的作用如下：\n\n   1. `--nodeps`：这个选项告诉 RPM 安装程序忽略依赖关系。通常情况下，RPM 安装程序会检查将要安装的软件包是否依赖于其他软件包，如果依赖关系没有满足，安装将会失败。使用 `--nodeps` 选项可以跳过这个依赖检查，强制安装软件包，即使依赖关系没有满足。但是需要注意，使用 `--nodeps` 可能会导致系统中的软件包依赖关系出现问题。\n   2. `--force`：这个选项告诉 RPM 安装程序强制安装软件包，即使已经存在相同名称和版本的软件包。通常情况下，如果已经安装了相同名称和版本的软件包，RPM 安装程序会拒绝安装，并显示错误消息。使用 `--force` 选项可以覆盖已安装的软件包，强制安装新的软件包，即使它们的名称和版本相同。但是需要注意，使用 `--force` 可能会导致系统中的软件包出现冲突或不一致的情况。\n\n3. **安装Mysql**\n\n   **以MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar为例：**\n\n   --->\n\n   [官方下载]: https://www.mysql.com/downloads/\t\"MySQL下载\"\n\n   并将MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：\n\n   ```shell\n   tar -xvzf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar\n   ```\n\n   或\n\n   ```shell\n   tar -xvf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar\n   ```\n\n   首先确认数据库的登陆密码是否是root，不是root则改为root   \n   \t登陆到数据库执行修改密码命令：\n\n   ```mysql\n   grant  all privileges on  *.* to 'root'@'localhost' identified by 'root';\n   ```\n\n   ```mysql\n   flush privileges;\n   ```\n\n   将xxx.sql文件导入到数据库中，不用进入Mysql。\n\n   ```shell\n   mysql -uroot -proot < xxx.sql\n   ```\n\n   \n\n4. **上传部署项目**\n\n   **以某某系统为例：**\n\n   --->将开发的应用程序，打包成可执行的xx.jar的Java应用程序，将xx.jar的Java应用程序和资源文件通过MobaXterm上传到服务器，在环境配置完成后，在控制台指令通过命令：\n\n   ```shell\n   java -jar xx.jar\n   ```\n\n   启动Java应用程序\n\n5. **代理服务器（Nginx安装）**\n\n   在一般情况下，安装 Nginx 并不需要安装 `gcc` 和 `gcc-c++`，因为 Nginx 是一个已经编译好的二进制文件，不需要在服务器上进行编译。然而，如果你需要自定义编译 Nginx 或者安装一些 Nginx 的第三方模块，那么可能需要安装 `gcc` 和 `gcc-c++`。\n\n   `gcc` 和 `gcc-c++` 是 GNU Compiler Collection 的一部分，它们提供了编译和链接 C 和 C++ 程序所需的工具和库。在编译 Nginx 或者一些第三方模块时，可能会使用到 C 或 C++ 语言的代码，因此需要安装这两个软件包。\n\n   要安装 `gcc` 和 `gcc-c++`，可以根据你使用的 Linux 发行版执行相应的命令：\n\n   - 在 Ubuntu 或者其他基于 Debian 的发行版上，可以使用以下命令安装：\n\n   - ```shell\n     sudo apt-get update sudo apt-get install build-essential\n     ```\n\n   - 在 CentOS 或者其他基于 Red Hat 的发行版上，可以使用以下命令安装：\n\n   - ```shell\n     sudo yum update sudo yum groupinstall \"Development Tools\"\n     ```\n\n   安装完成后，你就可以使用 `gcc` 和 `g++` 命令进行编译和链接操作了。\n\n   ////////////////////////////////////////////////////////////////////////\n\n   下载gcc和gcc-c++软件安装包，并将gcc和gcc-c++安装包内的所有RPM软件安装文件安装，首先切到gcc和gcc-c++目录下，执行命令：\n\n   ```shell\n   rpm -ivh *.rpm --nodeps --force\n   ```\n\n   或\n\n   ```shell\n   rpm -ivh /home/xx/xx/gcc *.rpm --nodeps --force\n   ```\n\n   **以nginx-1.13.9.tar.gz为例**：\n\n   --->\n\n   [官网下载]: https://www.newbe.pro/Mirrors/Mirrors-Nginx/\t\"Nginx下载\"\n\n   ，并将nginx-1.13.9.tar.gz压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：\n\n   ```shell\n   tar -xvzf nginx-1.13.9.tar.gz\n   ```\n\n   完成nginx解压，进入到目录。\n\n   ​          执行环境检查\n\n   ```shell\n    ./configure   --without-http_rewrite_module\n   ```\n\n   ​\t      编译和安装 \n\n   ```shell\n   make   && make install\n   ```\n\n   **验证：**\n   \t进入到/usr/local/nginx/sbin/\n   \t./nginx   启动\n\n   ```shell\n   ./nginx\n   ```\n\n   与\n\n   ```shell\n   ./nginx -s reload\n   ```\n\n   ​\t\n\n   打开浏览器，直接访问linuxip地址即可。\n   \tWELCOME  to  nginx!\n\n   ////////////////////////////////////////////////////////////////\n\n   **设置代理**\n\n   配置nginx的配置文件，找到nginx的安装目录，默认路径/usr/local/nginx/conf/nginx.conf。编辑nginx.conf文件的命令：\n\n   ```shell\n   vi nginx.conf\n   ```\n\n   进入vim文本查看模式，按键盘A进入可编辑模式，\n\n   在Server上方添加上游服务器列表：\n\n   ```shell\n   upstream 上游服务器变量名 {\n        server 第一台上游服务器IP地址:访问应用端口号;\n        server 第二台上游服务器IP地址:访问应用端口号;\n        ip_hash;\n        多台服务器，以此类推...\n   }\n   ```\n\n   Server内部添加代理URL地址：\n\n   ```shell\n   localhost / {\n         proxy_pass http://上游服务器变量名;\n         ......\n   }\n   ```\n\n   按ESC键，键盘输入:wq, 回车退出并保存。\n\n### 3.**过程出现问题**\n\n1. **上游部署的服务器要关闭防火墙**\n\n   关闭防火墙命令：\n\n   ```shell\n   systemctl stop firewalld\n   ```\n\n   或\n\n   ```shell\n   service iptables stop\n   ```\n\n   如果不关闭防火墙，会导致Nginx代理服务器无法访问\n\n2. **JDK进行安装出现Could not .... tool.pack  tool.tar**\n\n   原因1：JDK卸载时，没有卸载干净，切换到jdk-xxx的安装目录下，执行命令：\n\n   ```shell\n   rpm -e jdk-xxxx\n   ```\n\n   原因2：由于jdk安装包版本太旧，这是jdk安装包自身问题，重新下载个jdk安装包\n\n3. **Nginx的配置文件(/usr/local/nginx/conf)-nginx.conf修改--error：400**\n\n   在 Nginx 配置文件中，变量名不允许出现下划线。这是因为 Nginx 配置文件中的变量命名规则与变量命名规则在其他编程语言中可能不同。\n\n   根据 Nginx 的变量命名规则，变量名只能包含字母、数字和连字符（`-`），并且不能以连字符开头。下划线不在允许的字符范围内，因此不能在变量名中使用下划线。\n\n   如果你在 Nginx 配置文件中使用了下划线作为变量名的一部分，Nginx 将无法正确解析该配置，并可能导致配置文件加载失败或出现其他错误。\n\n   为了解决这个问题，你可以考虑使用连字符（`-`）来替代下划线。如果你需要在变量名中表示多个单词，可以使用驼峰命名法或使用连字符（`-`）来分隔单词。\n\n   例如，如果你想使用一个变量来表示用户的 ID，可以使用类似于 `user_id` 或 `userId` 的命名方式，而不是 `user_id`。这样可以避免在 Nginx 配置文件中出现下划线导致的问题。\n\n   总之，确保在 Nginx 配置文件中的变量名中只使用允许的字符（字母、数字和连字符），并遵循 Nginx 的变量命名规则。\n\n4. **MobaXterm与服务端操作不实时同步**\n\n   如果你在使用 MobaXterm 连接到远程服务器时，发现操作不实时同步，可能是由于远程服务器的终端设置或网络延迟引起的。\n\n   有几种方法可以尝试解决这个问题：\n\n   1. 调整 MobaXterm 的设置：在 MobaXterm 的会话设置中，尝试将 \"Terminal-type string\" 设置为 \"xterm\" 或 \"xterm-256color\"，并确保 \"Terminal emulation\" 设置为 \"Xterm\"。这有时可以解决与远程服务器的终端同步问题。\n   2. 使用其他终端工具：如果问题仍然存在，可以尝试使用其他 SSH 客户端或终端工具，如 PuTTY、SecureCRT 等，看是否能够实时同步操作。\n   3. 检查网络连接和延迟：确保你的网络连接稳定，并检查网络延迟。如果网络延迟较高，可能会导致操作不实时同步。你可以使用 `ping` 命令测试网络延迟，例如 `ping google.com`。\n   4. 联系系统管理员：如果问题仍然存在，可能是服务器端的配置或性能问题导致的。联系服务器的系统管理员，寻求帮助并了解是否有相关的配置或调整可以改善同步问题。\n   5. 登录服务器，进入配置文件目录查看配置文件是否已经修改的，如果不是，进行修改并保存。\n\n   需要注意的是，以上方法可能不适用于每个情况，具体的解决方法可能因个人情况而异。如果问题持续存在，建议与系统管理员或技术支持人员进行进一步的沟通和协助。\n\n5. **nginx服务器访问系统，页面无法跳转**\n\n   在 Nginx 配置中，`id_hash` 是一种用于负载均衡的配置指令，它用于根据客户端 IP 地址进行哈希算法，以便将请求分发给相同的后端服务器。\n\n   当使用 `id_hash` 配置指令时，Nginx 会计算客户端 IP 地址的哈希值，并将该哈希值与后端服务器列表中的服务器数量取模，以确定将请求发送到哪个后端服务器。这样做的目的是确保相同 IP 地址的请求始终被发送到同一台后端服务器，以保持会话的一致性。\n\n   使用 `id_hash` 配置指令的一个常见应用场景是在负载均衡集群中使用会话保持（session persistence），确保用户的会话数据在同一台服务器上保持一致，避免因为请求被分发到不同的服务器而导致会话丢失或数据不一致的问题。\n\n   以下是一个示例的 Nginx 配置片段，展示了如何使用 `id_hash` 配置指令：\n\n   ```nginx\n   http {    \n       upstream backend {        \n           ip_hash;        \n           server backend1.example.com;             server backend2.example.com;             server backend3.example.com;         }     \n       server {        \n           listen 80;        \n           server_name example.com;         location / {            \n               proxy_pass http://backend;        }    \n       }\n   } \n   ```\n\n   在上述配置中，`ip_hash` 指令用于基于客户端 IP 地址进行哈希负载均衡，确保相同 IP 的请求发送到同一台后端服务器。你也可以使用 `id_hash` 替代 `ip_hash`，其效果是一样的。\n\n   需要注意的是，使用哈希负载均衡时，如果后端服务器的数量发生变化，可能会导致哈希算法重新分配请求，这可能会影响会话的一致性。因此，在调整后端服务器数量时，需要谨慎考虑会话保持的问题。\n","slug":"服务器部署系统-nginx","published":1,"updated":"2023-09-13T05:02:16.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4nq0001zfw48en9jcpqs","content":"<h2 id=\"服务器部署系统（Nginx负载均衡）\"><a href=\"#服务器部署系统（Nginx负载均衡）\" class=\"headerlink\" title=\"服务器部署系统（Nginx负载均衡）\"></a><strong>服务器部署系统（Nginx负载均衡）</strong></h2><h3 id=\"1-部署步骤\"><a href=\"#1-部署步骤\" class=\"headerlink\" title=\"1.部署步骤\"></a>1.<strong>部署步骤</strong></h3><ol>\n<li><strong>上游服务器部署tomcat</strong></li>\n<li><strong>安装JDK</strong></li>\n<li><strong>安装Mysql</strong></li>\n<li><strong>上传部署项目</strong></li>\n<li><strong>代理服务器（安装Nginx）</strong></li>\n</ol>\n<h3 id=\"2-详细步骤说明\"><a href=\"#2-详细步骤说明\" class=\"headerlink\" title=\"2.详细步骤说明\"></a>2.<strong>详细步骤说明</strong></h3><ol>\n<li><strong>上游服务器部署tomcat</strong></li>\n</ol>\n<p>   <strong>以apache-Tomcat-7.0.57.tar.gz为例：</strong></p>\n<p>   —&gt;</p>\n<p>   [官网下载]: <a href=\"https://tomcat.apache.org/\">https://tomcat.apache.org/</a>\t“Tomcat下载”</p>\n<p>   并将Tomcat压缩包通过MobaXterm上传到Linux服务器,在指令控制台通过命令：</p>\n   <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解压文件指令</span></span><br><span class=\"line\">tar -xvzf apache-tomcat-7.0.57.tar.gz</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p><strong>安装JDK（注意：版本要匹配！！！）</strong></p>\n<p><strong>以jdk-8u131-linux-i586.rpm为例：</strong></p>\n<p>—&gt;</p>\n<p>[官网下载]: <a href=\"http://www.codebaoku.com/jdk/jdk-index.html\">http://www.codebaoku.com/jdk/jdk-index.html</a>\t“JDK下载”</p>\n<p>并将jdk-8u131-linux-i586.rpm软件安装包通过MobaXterm上传到Linux服务器，在指令控制台通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">RPM软件安装包安装指令</span></span><br><span class=\"line\">rpm -ivh jdk-8u131-linux-i586.rpm</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">RPM软件安装包安装指令</span></span><br><span class=\"line\">rpm -ivh jdk-8u131-linux-i586.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<p>在 RPM 文件安装过程中，<code>--nodeps</code> 和 <code>--force</code> 是两个常用的选项，它们的作用如下：</p>\n<ol>\n<li><code>--nodeps</code>：这个选项告诉 RPM 安装程序忽略依赖关系。通常情况下，RPM 安装程序会检查将要安装的软件包是否依赖于其他软件包，如果依赖关系没有满足，安装将会失败。使用 <code>--nodeps</code> 选项可以跳过这个依赖检查，强制安装软件包，即使依赖关系没有满足。但是需要注意，使用 <code>--nodeps</code> 可能会导致系统中的软件包依赖关系出现问题。</li>\n<li><code>--force</code>：这个选项告诉 RPM 安装程序强制安装软件包，即使已经存在相同名称和版本的软件包。通常情况下，如果已经安装了相同名称和版本的软件包，RPM 安装程序会拒绝安装，并显示错误消息。使用 <code>--force</code> 选项可以覆盖已安装的软件包，强制安装新的软件包，即使它们的名称和版本相同。但是需要注意，使用 <code>--force</code> 可能会导致系统中的软件包出现冲突或不一致的情况。</li>\n</ol>\n</li>\n<li><p><strong>安装Mysql</strong></p>\n<p><strong>以MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar为例：</strong></p>\n<p>—&gt;</p>\n<p>[官方下载]: <a href=\"https://www.mysql.com/downloads/\">https://www.mysql.com/downloads/</a>\t“MySQL下载”</p>\n<p>并将MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar</span><br></pre></td></tr></table></figure>\n\n<p>首先确认数据库的登陆密码是否是root，不是root则改为root<br>登陆到数据库执行修改密码命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant  all privileges on  *.* to &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n\n<p>将xxx.sql文件导入到数据库中，不用进入Mysql。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -proot &lt; xxx.sql</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p><strong>上传部署项目</strong></p>\n<p><strong>以某某系统为例：</strong></p>\n<p>—&gt;将开发的应用程序，打包成可执行的xx.jar的Java应用程序，将xx.jar的Java应用程序和资源文件通过MobaXterm上传到服务器，在环境配置完成后，在控制台指令通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar xx.jar</span><br></pre></td></tr></table></figure>\n\n<p>启动Java应用程序</p>\n</li>\n<li><p><strong>代理服务器（Nginx安装）</strong></p>\n<p>在一般情况下，安装 Nginx 并不需要安装 <code>gcc</code> 和 <code>gcc-c++</code>，因为 Nginx 是一个已经编译好的二进制文件，不需要在服务器上进行编译。然而，如果你需要自定义编译 Nginx 或者安装一些 Nginx 的第三方模块，那么可能需要安装 <code>gcc</code> 和 <code>gcc-c++</code>。</p>\n<p><code>gcc</code> 和 <code>gcc-c++</code> 是 GNU Compiler Collection 的一部分，它们提供了编译和链接 C 和 C++ 程序所需的工具和库。在编译 Nginx 或者一些第三方模块时，可能会使用到 C 或 C++ 语言的代码，因此需要安装这两个软件包。</p>\n<p>要安装 <code>gcc</code> 和 <code>gcc-c++</code>，可以根据你使用的 Linux 发行版执行相应的命令：</p>\n<ul>\n<li><p>在 Ubuntu 或者其他基于 Debian 的发行版上，可以使用以下命令安装：</p>\n</li>\n<li><pre><code class=\"shell\">sudo apt-get update sudo apt-get install build-essential\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 在 CentOS 或者其他基于 Red Hat 的发行版上，可以使用以下命令安装：</span><br><span class=\"line\"></span><br><span class=\"line\">- ```shell</span><br><span class=\"line\">  sudo yum update sudo yum groupinstall &quot;Development Tools&quot;</span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n</ul>\n<p>安装完成后，你就可以使用 <code>gcc</code> 和 <code>g++</code> 命令进行编译和链接操作了。</p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<p>下载gcc和gcc-c++软件安装包，并将gcc和gcc-c++安装包内的所有RPM软件安装文件安装，首先切到gcc和gcc-c++目录下，执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh *.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /home/xx/xx/gcc *.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<p><strong>以nginx-1.13.9.tar.gz为例</strong>：</p>\n<p>—&gt;</p>\n<p>[官网下载]: <a href=\"https://www.newbe.pro/Mirrors/Mirrors-Nginx/\">https://www.newbe.pro/Mirrors/Mirrors-Nginx/</a>\t“Nginx下载”</p>\n<p>，并将nginx-1.13.9.tar.gz压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf nginx-1.13.9.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>完成nginx解压，进入到目录。</p>\n<p>​          执行环境检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure   --without-http_rewrite_module</span><br></pre></td></tr></table></figure>\n\n<p>​\t      编译和安装 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make   &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p><strong>验证：</strong><br>    进入到&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;<br>    .&#x2F;nginx   启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n\n<p>与</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<p>​\t</p>\n<p>打开浏览器，直接访问linuxip地址即可。<br>    WELCOME  to  nginx!</p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<p><strong>设置代理</strong></p>\n<p>配置nginx的配置文件，找到nginx的安装目录，默认路径&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf。编辑nginx.conf文件的命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi nginx.conf</span><br></pre></td></tr></table></figure>\n\n<p>进入vim文本查看模式，按键盘A进入可编辑模式，</p>\n<p>在Server上方添加上游服务器列表：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream 上游服务器变量名 &#123;</span><br><span class=\"line\">     server 第一台上游服务器IP地址:访问应用端口号;</span><br><span class=\"line\">     server 第二台上游服务器IP地址:访问应用端口号;</span><br><span class=\"line\">     ip_hash;</span><br><span class=\"line\">     多台服务器，以此类推...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Server内部添加代理URL地址：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localhost / &#123;</span><br><span class=\"line\">      proxy_pass http://上游服务器变量名;</span><br><span class=\"line\">      ......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>按ESC键，键盘输入:wq, 回车退出并保存。</p>\n</li>\n</ol>\n<h3 id=\"3-过程出现问题\"><a href=\"#3-过程出现问题\" class=\"headerlink\" title=\"3.过程出现问题\"></a>3.<strong>过程出现问题</strong></h3><ol>\n<li><p><strong>上游部署的服务器要关闭防火墙</strong></p>\n<p>关闭防火墙命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br></pre></td></tr></table></figure>\n\n<p>如果不关闭防火墙，会导致Nginx代理服务器无法访问</p>\n</li>\n<li><p><strong>JDK进行安装出现Could not …. tool.pack  tool.tar</strong></p>\n<p>原因1：JDK卸载时，没有卸载干净，切换到jdk-xxx的安装目录下，执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -e jdk-xxxx</span><br></pre></td></tr></table></figure>\n\n<p>原因2：由于jdk安装包版本太旧，这是jdk安装包自身问题，重新下载个jdk安装包</p>\n</li>\n<li><p><strong>Nginx的配置文件(&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf)-nginx.conf修改–error：400</strong></p>\n<p>在 Nginx 配置文件中，变量名不允许出现下划线。这是因为 Nginx 配置文件中的变量命名规则与变量命名规则在其他编程语言中可能不同。</p>\n<p>根据 Nginx 的变量命名规则，变量名只能包含字母、数字和连字符（<code>-</code>），并且不能以连字符开头。下划线不在允许的字符范围内，因此不能在变量名中使用下划线。</p>\n<p>如果你在 Nginx 配置文件中使用了下划线作为变量名的一部分，Nginx 将无法正确解析该配置，并可能导致配置文件加载失败或出现其他错误。</p>\n<p>为了解决这个问题，你可以考虑使用连字符（<code>-</code>）来替代下划线。如果你需要在变量名中表示多个单词，可以使用驼峰命名法或使用连字符（<code>-</code>）来分隔单词。</p>\n<p>例如，如果你想使用一个变量来表示用户的 ID，可以使用类似于 <code>user_id</code> 或 <code>userId</code> 的命名方式，而不是 <code>user_id</code>。这样可以避免在 Nginx 配置文件中出现下划线导致的问题。</p>\n<p>总之，确保在 Nginx 配置文件中的变量名中只使用允许的字符（字母、数字和连字符），并遵循 Nginx 的变量命名规则。</p>\n</li>\n<li><p><strong>MobaXterm与服务端操作不实时同步</strong></p>\n<p>如果你在使用 MobaXterm 连接到远程服务器时，发现操作不实时同步，可能是由于远程服务器的终端设置或网络延迟引起的。</p>\n<p>有几种方法可以尝试解决这个问题：</p>\n<ol>\n<li>调整 MobaXterm 的设置：在 MobaXterm 的会话设置中，尝试将 “Terminal-type string” 设置为 “xterm” 或 “xterm-256color”，并确保 “Terminal emulation” 设置为 “Xterm”。这有时可以解决与远程服务器的终端同步问题。</li>\n<li>使用其他终端工具：如果问题仍然存在，可以尝试使用其他 SSH 客户端或终端工具，如 PuTTY、SecureCRT 等，看是否能够实时同步操作。</li>\n<li>检查网络连接和延迟：确保你的网络连接稳定，并检查网络延迟。如果网络延迟较高，可能会导致操作不实时同步。你可以使用 <code>ping</code> 命令测试网络延迟，例如 <code>ping google.com</code>。</li>\n<li>联系系统管理员：如果问题仍然存在，可能是服务器端的配置或性能问题导致的。联系服务器的系统管理员，寻求帮助并了解是否有相关的配置或调整可以改善同步问题。</li>\n<li>登录服务器，进入配置文件目录查看配置文件是否已经修改的，如果不是，进行修改并保存。</li>\n</ol>\n<p>需要注意的是，以上方法可能不适用于每个情况，具体的解决方法可能因个人情况而异。如果问题持续存在，建议与系统管理员或技术支持人员进行进一步的沟通和协助。</p>\n</li>\n<li><p><strong>nginx服务器访问系统，页面无法跳转</strong></p>\n<p>在 Nginx 配置中，<code>id_hash</code> 是一种用于负载均衡的配置指令，它用于根据客户端 IP 地址进行哈希算法，以便将请求分发给相同的后端服务器。</p>\n<p>当使用 <code>id_hash</code> 配置指令时，Nginx 会计算客户端 IP 地址的哈希值，并将该哈希值与后端服务器列表中的服务器数量取模，以确定将请求发送到哪个后端服务器。这样做的目的是确保相同 IP 地址的请求始终被发送到同一台后端服务器，以保持会话的一致性。</p>\n<p>使用 <code>id_hash</code> 配置指令的一个常见应用场景是在负载均衡集群中使用会话保持（session persistence），确保用户的会话数据在同一台服务器上保持一致，避免因为请求被分发到不同的服务器而导致会话丢失或数据不一致的问题。</p>\n<p>以下是一个示例的 Nginx 配置片段，展示了如何使用 <code>id_hash</code> 配置指令：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;    </span><br><span class=\"line\">    <span class=\"section\">upstream</span> backend &#123;        </span><br><span class=\"line\">        ip_hash;        </span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend1.example.com;             <span class=\"attribute\">server</span> backend2.example.com;             <span class=\"attribute\">server</span> backend3.example.com;         &#125;     </span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;        </span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;        </span><br><span class=\"line\">        <span class=\"attribute\">server_name</span> example.com;         <span class=\"section\">location</span> / &#123;            </span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://backend;        &#125;    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>在上述配置中，<code>ip_hash</code> 指令用于基于客户端 IP 地址进行哈希负载均衡，确保相同 IP 的请求发送到同一台后端服务器。你也可以使用 <code>id_hash</code> 替代 <code>ip_hash</code>，其效果是一样的。</p>\n<p>需要注意的是，使用哈希负载均衡时，如果后端服务器的数量发生变化，可能会导致哈希算法重新分配请求，这可能会影响会话的一致性。因此，在调整后端服务器数量时，需要谨慎考虑会话保持的问题。</p>\n</li>\n</ol>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"服务器部署系统（Nginx负载均衡）\"><a href=\"#服务器部署系统（Nginx负载均衡）\" class=\"headerlink\" title=\"服务器部署系统（Nginx负载均衡）\"></a><strong>服务器部署系统（Nginx负载均衡）</strong></h2><h3 id=\"1-部署步骤\"><a href=\"#1-部署步骤\" class=\"headerlink\" title=\"1.部署步骤\"></a>1.<strong>部署步骤</strong></h3><ol>\n<li><strong>上游服务器部署tomcat</strong></li>\n<li><strong>安装JDK</strong></li>\n<li><strong>安装Mysql</strong></li>\n<li><strong>上传部署项目</strong></li>\n<li><strong>代理服务器（安装Nginx）</strong></li>\n</ol>\n<h3 id=\"2-详细步骤说明\"><a href=\"#2-详细步骤说明\" class=\"headerlink\" title=\"2.详细步骤说明\"></a>2.<strong>详细步骤说明</strong></h3><ol>\n<li><strong>上游服务器部署tomcat</strong></li>\n</ol>\n<p>   <strong>以apache-Tomcat-7.0.57.tar.gz为例：</strong></p>\n<p>   —&gt;</p>\n<p>   [官网下载]: <a href=\"https://tomcat.apache.org/\">https://tomcat.apache.org/</a>\t“Tomcat下载”</p>\n<p>   并将Tomcat压缩包通过MobaXterm上传到Linux服务器,在指令控制台通过命令：</p>\n   <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解压文件指令</span></span><br><span class=\"line\">tar -xvzf apache-tomcat-7.0.57.tar.gz</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p><strong>安装JDK（注意：版本要匹配！！！）</strong></p>\n<p><strong>以jdk-8u131-linux-i586.rpm为例：</strong></p>\n<p>—&gt;</p>\n<p>[官网下载]: <a href=\"http://www.codebaoku.com/jdk/jdk-index.html\">http://www.codebaoku.com/jdk/jdk-index.html</a>\t“JDK下载”</p>\n<p>并将jdk-8u131-linux-i586.rpm软件安装包通过MobaXterm上传到Linux服务器，在指令控制台通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">RPM软件安装包安装指令</span></span><br><span class=\"line\">rpm -ivh jdk-8u131-linux-i586.rpm</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">RPM软件安装包安装指令</span></span><br><span class=\"line\">rpm -ivh jdk-8u131-linux-i586.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<p>在 RPM 文件安装过程中，<code>--nodeps</code> 和 <code>--force</code> 是两个常用的选项，它们的作用如下：</p>\n<ol>\n<li><code>--nodeps</code>：这个选项告诉 RPM 安装程序忽略依赖关系。通常情况下，RPM 安装程序会检查将要安装的软件包是否依赖于其他软件包，如果依赖关系没有满足，安装将会失败。使用 <code>--nodeps</code> 选项可以跳过这个依赖检查，强制安装软件包，即使依赖关系没有满足。但是需要注意，使用 <code>--nodeps</code> 可能会导致系统中的软件包依赖关系出现问题。</li>\n<li><code>--force</code>：这个选项告诉 RPM 安装程序强制安装软件包，即使已经存在相同名称和版本的软件包。通常情况下，如果已经安装了相同名称和版本的软件包，RPM 安装程序会拒绝安装，并显示错误消息。使用 <code>--force</code> 选项可以覆盖已安装的软件包，强制安装新的软件包，即使它们的名称和版本相同。但是需要注意，使用 <code>--force</code> 可能会导致系统中的软件包出现冲突或不一致的情况。</li>\n</ol>\n</li>\n<li><p><strong>安装Mysql</strong></p>\n<p><strong>以MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar为例：</strong></p>\n<p>—&gt;</p>\n<p>[官方下载]: <a href=\"https://www.mysql.com/downloads/\">https://www.mysql.com/downloads/</a>\t“MySQL下载”</p>\n<p>并将MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf MySQL-5.5.53-1.linux2.6.i386.rpm-bundle.tar</span><br></pre></td></tr></table></figure>\n\n<p>首先确认数据库的登陆密码是否是root，不是root则改为root<br>登陆到数据库执行修改密码命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant  all privileges on  *.* to &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n\n<p>将xxx.sql文件导入到数据库中，不用进入Mysql。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -proot &lt; xxx.sql</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p><strong>上传部署项目</strong></p>\n<p><strong>以某某系统为例：</strong></p>\n<p>—&gt;将开发的应用程序，打包成可执行的xx.jar的Java应用程序，将xx.jar的Java应用程序和资源文件通过MobaXterm上传到服务器，在环境配置完成后，在控制台指令通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar xx.jar</span><br></pre></td></tr></table></figure>\n\n<p>启动Java应用程序</p>\n</li>\n<li><p><strong>代理服务器（Nginx安装）</strong></p>\n<p>在一般情况下，安装 Nginx 并不需要安装 <code>gcc</code> 和 <code>gcc-c++</code>，因为 Nginx 是一个已经编译好的二进制文件，不需要在服务器上进行编译。然而，如果你需要自定义编译 Nginx 或者安装一些 Nginx 的第三方模块，那么可能需要安装 <code>gcc</code> 和 <code>gcc-c++</code>。</p>\n<p><code>gcc</code> 和 <code>gcc-c++</code> 是 GNU Compiler Collection 的一部分，它们提供了编译和链接 C 和 C++ 程序所需的工具和库。在编译 Nginx 或者一些第三方模块时，可能会使用到 C 或 C++ 语言的代码，因此需要安装这两个软件包。</p>\n<p>要安装 <code>gcc</code> 和 <code>gcc-c++</code>，可以根据你使用的 Linux 发行版执行相应的命令：</p>\n<ul>\n<li><p>在 Ubuntu 或者其他基于 Debian 的发行版上，可以使用以下命令安装：</p>\n</li>\n<li><pre><code class=\"shell\">sudo apt-get update sudo apt-get install build-essential\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 在 CentOS 或者其他基于 Red Hat 的发行版上，可以使用以下命令安装：</span><br><span class=\"line\"></span><br><span class=\"line\">- ```shell</span><br><span class=\"line\">  sudo yum update sudo yum groupinstall &quot;Development Tools&quot;</span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n</ul>\n<p>安装完成后，你就可以使用 <code>gcc</code> 和 <code>g++</code> 命令进行编译和链接操作了。</p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<p>下载gcc和gcc-c++软件安装包，并将gcc和gcc-c++安装包内的所有RPM软件安装文件安装，首先切到gcc和gcc-c++目录下，执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh *.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh /home/xx/xx/gcc *.rpm --nodeps --force</span><br></pre></td></tr></table></figure>\n\n<p><strong>以nginx-1.13.9.tar.gz为例</strong>：</p>\n<p>—&gt;</p>\n<p>[官网下载]: <a href=\"https://www.newbe.pro/Mirrors/Mirrors-Nginx/\">https://www.newbe.pro/Mirrors/Mirrors-Nginx/</a>\t“Nginx下载”</p>\n<p>，并将nginx-1.13.9.tar.gz压缩包通过MobaXterm上传到服务器，在指令控制台通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvzf nginx-1.13.9.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>完成nginx解压，进入到目录。</p>\n<p>​          执行环境检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure   --without-http_rewrite_module</span><br></pre></td></tr></table></figure>\n\n<p>​\t      编译和安装 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make   &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p><strong>验证：</strong><br>    进入到&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;<br>    .&#x2F;nginx   启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n\n<p>与</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<p>​\t</p>\n<p>打开浏览器，直接访问linuxip地址即可。<br>    WELCOME  to  nginx!</p>\n<p>&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</p>\n<p><strong>设置代理</strong></p>\n<p>配置nginx的配置文件，找到nginx的安装目录，默认路径&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf。编辑nginx.conf文件的命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi nginx.conf</span><br></pre></td></tr></table></figure>\n\n<p>进入vim文本查看模式，按键盘A进入可编辑模式，</p>\n<p>在Server上方添加上游服务器列表：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream 上游服务器变量名 &#123;</span><br><span class=\"line\">     server 第一台上游服务器IP地址:访问应用端口号;</span><br><span class=\"line\">     server 第二台上游服务器IP地址:访问应用端口号;</span><br><span class=\"line\">     ip_hash;</span><br><span class=\"line\">     多台服务器，以此类推...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Server内部添加代理URL地址：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localhost / &#123;</span><br><span class=\"line\">      proxy_pass http://上游服务器变量名;</span><br><span class=\"line\">      ......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>按ESC键，键盘输入:wq, 回车退出并保存。</p>\n</li>\n</ol>\n<h3 id=\"3-过程出现问题\"><a href=\"#3-过程出现问题\" class=\"headerlink\" title=\"3.过程出现问题\"></a>3.<strong>过程出现问题</strong></h3><ol>\n<li><p><strong>上游部署的服务器要关闭防火墙</strong></p>\n<p>关闭防火墙命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br></pre></td></tr></table></figure>\n\n<p>如果不关闭防火墙，会导致Nginx代理服务器无法访问</p>\n</li>\n<li><p><strong>JDK进行安装出现Could not …. tool.pack  tool.tar</strong></p>\n<p>原因1：JDK卸载时，没有卸载干净，切换到jdk-xxx的安装目录下，执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -e jdk-xxxx</span><br></pre></td></tr></table></figure>\n\n<p>原因2：由于jdk安装包版本太旧，这是jdk安装包自身问题，重新下载个jdk安装包</p>\n</li>\n<li><p><strong>Nginx的配置文件(&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf)-nginx.conf修改–error：400</strong></p>\n<p>在 Nginx 配置文件中，变量名不允许出现下划线。这是因为 Nginx 配置文件中的变量命名规则与变量命名规则在其他编程语言中可能不同。</p>\n<p>根据 Nginx 的变量命名规则，变量名只能包含字母、数字和连字符（<code>-</code>），并且不能以连字符开头。下划线不在允许的字符范围内，因此不能在变量名中使用下划线。</p>\n<p>如果你在 Nginx 配置文件中使用了下划线作为变量名的一部分，Nginx 将无法正确解析该配置，并可能导致配置文件加载失败或出现其他错误。</p>\n<p>为了解决这个问题，你可以考虑使用连字符（<code>-</code>）来替代下划线。如果你需要在变量名中表示多个单词，可以使用驼峰命名法或使用连字符（<code>-</code>）来分隔单词。</p>\n<p>例如，如果你想使用一个变量来表示用户的 ID，可以使用类似于 <code>user_id</code> 或 <code>userId</code> 的命名方式，而不是 <code>user_id</code>。这样可以避免在 Nginx 配置文件中出现下划线导致的问题。</p>\n<p>总之，确保在 Nginx 配置文件中的变量名中只使用允许的字符（字母、数字和连字符），并遵循 Nginx 的变量命名规则。</p>\n</li>\n<li><p><strong>MobaXterm与服务端操作不实时同步</strong></p>\n<p>如果你在使用 MobaXterm 连接到远程服务器时，发现操作不实时同步，可能是由于远程服务器的终端设置或网络延迟引起的。</p>\n<p>有几种方法可以尝试解决这个问题：</p>\n<ol>\n<li>调整 MobaXterm 的设置：在 MobaXterm 的会话设置中，尝试将 “Terminal-type string” 设置为 “xterm” 或 “xterm-256color”，并确保 “Terminal emulation” 设置为 “Xterm”。这有时可以解决与远程服务器的终端同步问题。</li>\n<li>使用其他终端工具：如果问题仍然存在，可以尝试使用其他 SSH 客户端或终端工具，如 PuTTY、SecureCRT 等，看是否能够实时同步操作。</li>\n<li>检查网络连接和延迟：确保你的网络连接稳定，并检查网络延迟。如果网络延迟较高，可能会导致操作不实时同步。你可以使用 <code>ping</code> 命令测试网络延迟，例如 <code>ping google.com</code>。</li>\n<li>联系系统管理员：如果问题仍然存在，可能是服务器端的配置或性能问题导致的。联系服务器的系统管理员，寻求帮助并了解是否有相关的配置或调整可以改善同步问题。</li>\n<li>登录服务器，进入配置文件目录查看配置文件是否已经修改的，如果不是，进行修改并保存。</li>\n</ol>\n<p>需要注意的是，以上方法可能不适用于每个情况，具体的解决方法可能因个人情况而异。如果问题持续存在，建议与系统管理员或技术支持人员进行进一步的沟通和协助。</p>\n</li>\n<li><p><strong>nginx服务器访问系统，页面无法跳转</strong></p>\n<p>在 Nginx 配置中，<code>id_hash</code> 是一种用于负载均衡的配置指令，它用于根据客户端 IP 地址进行哈希算法，以便将请求分发给相同的后端服务器。</p>\n<p>当使用 <code>id_hash</code> 配置指令时，Nginx 会计算客户端 IP 地址的哈希值，并将该哈希值与后端服务器列表中的服务器数量取模，以确定将请求发送到哪个后端服务器。这样做的目的是确保相同 IP 地址的请求始终被发送到同一台后端服务器，以保持会话的一致性。</p>\n<p>使用 <code>id_hash</code> 配置指令的一个常见应用场景是在负载均衡集群中使用会话保持（session persistence），确保用户的会话数据在同一台服务器上保持一致，避免因为请求被分发到不同的服务器而导致会话丢失或数据不一致的问题。</p>\n<p>以下是一个示例的 Nginx 配置片段，展示了如何使用 <code>id_hash</code> 配置指令：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;    </span><br><span class=\"line\">    <span class=\"section\">upstream</span> backend &#123;        </span><br><span class=\"line\">        ip_hash;        </span><br><span class=\"line\">        <span class=\"attribute\">server</span> backend1.example.com;             <span class=\"attribute\">server</span> backend2.example.com;             <span class=\"attribute\">server</span> backend3.example.com;         &#125;     </span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;        </span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;        </span><br><span class=\"line\">        <span class=\"attribute\">server_name</span> example.com;         <span class=\"section\">location</span> / &#123;            </span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://backend;        &#125;    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>在上述配置中，<code>ip_hash</code> 指令用于基于客户端 IP 地址进行哈希负载均衡，确保相同 IP 的请求发送到同一台后端服务器。你也可以使用 <code>id_hash</code> 替代 <code>ip_hash</code>，其效果是一样的。</p>\n<p>需要注意的是，使用哈希负载均衡时，如果后端服务器的数量发生变化，可能会导致哈希算法重新分配请求，这可能会影响会话的一致性。因此，在调整后端服务器数量时，需要谨慎考虑会话保持的问题。</p>\n</li>\n</ol>\n"},{"title":"进行JMeter分布式测试遇到的坑","date":"2023-09-21T06:47:13.000Z","cover":"https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png","_content":"\n## **进行JMeter分布式测试遇到的坑**\n\n自己在使用JMeter进行分布式测试的时候，遇到了很多的坑。下面总结起来，方便以后查看。\n\n## 1.控制机端\n\n1. **执行机没有关闭防火墙**\n\n   在执行机IP+端口号设置正确的情况下，控制机在启动测试计划的时候，出现如下情况：\n\n   windows系统，下的GUI界面：\n\n   {%asset_img 48-21-23-144816.png%}\n\n   Linux系统下，出现：\n\n   {%asset_img 48-21-23-144820.png%}\n\n   如上情况说明，无法找到执行机与之进行连接，最先应想的就是执行机中的防火墙是不是没有关闭，我关闭执行机的防火墙后，以上错误消失。\n\n   CentOS7中关闭防火墙如下：\n\n   1. 查看防火墙状态命令：systemctl status firewalld.service\n\n      {%asset_img 48-21-23-144824.png%}\n\n      active(running):说明防火墙是开启状态。\n\n   2. 关闭运行的防火墙使用命令：systemctl stop firewalld.service\n\n      {%asset_img 48-21-23-144828.png%}\n\n      inactive(dead):说明防火墙已经是关闭状态。\n\n   3. 前面的方法，一旦重启操作系统，防火墙就自动开启了，该怎么设置才能永久关闭防火墙呢？\n\n      - systemctl disable firewalld.service,开机禁止防火墙服务器。\n      - systemctl enable firewalld.service,开机启动防火墙服务器。\n\n      提示：开启防火墙命令systemctl statr firewalld.service\n\n   4. **内存溢出**\n\n      在执行JMeter命令时，提示如下信息。\n\n      windows系统，提示如下：\n\n      Error occurred during initialization  of  VM Could not  reserve enough space  for  object heap errorleve1=1\n\n      Linux系统，提示如下：\n\n      {%asset_img 48-21-23-144833.png%}\n\n      提示你，虚拟机初始化期间无法为HotSpot保留足够的空间。\n\n      解决办法：打开jmeter.bat文件，查找set HEAP，把set HEAP=-Xms128m -Xmx512m修改为set HEAP=-Xms512m-Xmx1024m。\n\n      （看实际需求往大调整）\n\n## 2.执行机端\n\n1. **启动JMeter-server服务情况1**\n\n   出现如下所示：\n\n   {%asset_img 48-21-23-144837.png%}\n\n   **服务器启动异常**：Java运程方法调用抛出异常：无法启动服务。localhost.localdomain是一个本地回环地址。\n\n   **原因**：\n\n   要在远程对象上调用方法，RMI客户端首先必须从RMI注册表中检索远程存根对象。此存根对象包含服务器地址，该服务器地址稍后将在调用远程方法时用于连接到远程对象（与RMI注册表的连接和与远程对象的连接是两个完全不同的东西）。默认情况下，服务器将尝试检测自己的地址并将其传递给存根对象。不幸的是，用于检测服务器地址的算法并不总是产生有用的结果（取决于网络配置）。\n\n   通过设置RMI服务器上的系统属性Java.rmi.server.hostname,可以覆盖传递给存根对象的服务器地址。\n\n   默认情况下，RMI注册表使用端口1099.\n\n   解决方案：\n\n   **方法1：**\n\n   运行JMeter命令启动jmeter-server服务时，增加如下参数：\n\n   **./jmeter-server  -Djava.rmi.server.hostname=(执行机-本机IP)**\n\n   **方法2：**\n\n   修改jmeter-server文件：\n\n   ```properties\n   #修改RMI_HOST_DEF如下\n   RMI_HOST_DEF=-Djava.rmi.server.hostname=192.16.*.*(本机ip)\n   ```\n\n   之后执行命令./jmeter-server,来启动jmeter-server服务即可。（可方法一同理）\n\n   补充：\n\n   Linux系统中后台执行，启用jmeter-server服务：\n\n   nohup  ./jmeter-server  -Djava.rmi.server.hostname=192.168.x.x\n\n   查看jmeter-server服务是否启动成功，执行命令：ps axu | grep  jmeter\n\n   **方法3：**\n\n   也有可能是hostname与localhost不一致导致的。\n\n   当在/etc/hosts文件中进行映射时，通过localhost无法映射到一个有效的IP地址，就会出现上述问题。\n\n   操作步骤：\n\n   获取机器名称，增加一条域名与IP的映射。\n\n   1. **先在/etc/hosts里添加一行，如下所示：**\n\n      机器的实际IP地址为：192.168.134.130\n\n      {%asset_img 48-21-23-144845.png%}\n\n   2. **然后修改/etc/sysconfig/network文件里面的HOSTNAME。**\n\n      {%asset_img 48-21-23-144848.png%}\n\n      则可以访问成功。\n\n      （以上三种方式都可以试试，其实是一类问题）\n\n   3. **启动jmeter-server服务情况二**\n\n      出现如下图所示：\n\n      {%asset_img 48-21-23-144852.png%}\n\n      提示你，找不到系统指定的文件。\n\n      原因：要么拥有RMI over SSL的有效密钥库，要么禁用掉SSL。\n\n      解决方案禁用掉SSL：修改bin/jmeter.properties配置文件，server.rmi.ssl.disable=true即可解决。\n\n      提示：master和slave机器上jmeter.properties配置文件中，server.rmi.ssl.disable都改成true。\n\n   4. **启动jmeter-server服务情况三**\n\n      执行机启动jmeter-server服务，提示\"Could notfind ApacheJMeter_core.jar\"\n\n      原因：是因为JMeter没有配置环境变量。\n\n## 3.**分布式测试控制机接收不到返回结果**\n\n即：也就是关于控制机的多网卡问题。\n\n如果控制机（master）只有一个网卡，不需要关注这个问题。\n\n如果我们在练习的时候，只有一台电脑，需要启动虚拟机完成演示的时候，就需要注意这里的问题了。\n\n1. **多网卡出现的问题说明**\n\n   JMeter采取了RMI进行远程调用，如果控制机（master）有多个网卡，它只是使用其中任意一个网卡。\n\n   默认情况下，他会使用无线局域网适配器这块网卡，而虚拟机使用的网卡是以太网适配器VIware  Network Adapter VMnet8。\n\n   如下图所示：\n\n   {%asset_img 48-21-23-144857.png%}\n\n   这就导致JMeter的控制机（master）和执行机（slave）不在同一网段内，会导致无法互通，出现的情况可能是控制机无法连接执行机，或者是执行机中的测试结果无法回传给控制机。\n\n2. **多网卡出现的问题解决方式**\n\n   我的测试机情况如下：\n\n   一台windows系统主机作为控制机，IP地址如上图中所示。\n\n   在该主机上启动了三台虚拟机，IP地址分别为192.168.134.129、192.168.134.130、192.168.134.131。\n\n   1. **执行机中的配置**\n\n      修改jmeter-server文件\n\n      RMI_HOST_DEF=-Djava.rmi.server.hostname=xxx.xxx.xx.xx(执行机的IP)\n\n      当然也可以不配置，在执行机启动jmeter-server服务的时候，执行如下命令，也是一样的。\n\n      ./jmeter-server -Djava.rmi.server.hostname=xxx.xx.xx.xx\n\n   2. **控制机中的配置**\n\n      修改jmeter.bat启动文件（我是windows系统主机作为控制机）\n\n      在文件中新增如下内容：\n\n      ```properties\n      set rmi_host=-Djava.rmi.server.hostname=192.168.134.100\n      #可添加，可修改\n      set ARGS=%DUMP% %HEAP% %NEW% %SURVIVOR% %TENURING% %PERM% %DDRAW% %rmi_host%\n      ```\n\n      如下图所示：\n\n      {%asset_img 49-21-23-144901.png%}\n\n      这样就把控制机的IP网段从192.168.1.101换成了192.168.134.100\n\n      **提示：**\n\n      - 设置网段的IP不要和虚拟机中的IP冲突。\n      - 这里的配置是基于上一篇文章【JMeter分布式测试】中的配置。\n      - 如果不需要进行分布式了，不要忘记把JMeter.bat启动文件修改回来，防止做其他工作时有影响。\n\n      这样就设置后，windows系统主机就可以控制三个Linux虚拟机分布式执行脚本了。\n\n## 4.**参数化问题**\n\n1. **参数化问题说明**\n\n   - 通常，我们编写、调试脚本都是在windows机器上，而真正性能测试时，脚本几乎都在Linux下运行。\n   - 使用CSV数据文件做参数化时，是需要指定文件路径的。\n   - 这里就有个问题：window下写的文件路径到了Linux下是不正确的，导致无法正常读取CSV文件。\n   - 为了解决这个问题，下面将要讲解一个简单的万能解决方法。\n\n2. **两个前提**\n\n   - 我们的CSV文件必须在JMeter的bin目录下创建，然后再添加自己要的数据。\n   - Jmeter命令必须从bin目录下启动。\n\n3. **操作方式**\n\n   CSV数据文件设置组件中，直接按下面的格式写：\n\n   {%asset_img 49-21-23-144907.png%}\n\n   这样就可以了，只要把CSV文件上传到Linux系统JMeter下的bin目录，这个脚本就可以跨平台执行了。\n\n4. **总结**\n\n   - ${_ _p(user.dir,)} ${_ _p(file.separator,)}test.txt可以根据不同的系统，不同的JMeter安装路径。自动获取Jmeter路径，然后再获取不同系统下的文件路径分隔符，最后加上文件名称拼成文件路径。\n   - 这样就可以解决使用CSV数据文件做参数化时，跨平台导致路径不一致的问题。\n   - 重点前提：CSV文件放在JMeter的bin目录下，且到bin目录中执行JMeter命令。\n\n## 5.**其他补充**\n\n1. **修改端口号**\n\n   JMeter分布式测试的默认端口号是1099，我们可以自定义修改端口号。\n\n   再jmeter.properties配置文件中修改：\n\n   - server_port=1086:表示master机器要远程连接的端口，即：remote_host=xxx:1086.\n   - server.rmi.localport=1086:表示slave server启动显示的端口。\n\n   其实上面两者一样，修改改server_port即可。\n\n2. **查看分布式测试过程中**\n\n   在jmeter.properties配置文件中修改mode=Standard。\n\n   - 用于查看分布式测试过程中，每个压力机的测试结果。\n   - 若不启用，在运行过程中，控制器是无法实时看到压力机的结果。\n\n   提示：一般不需要开启。\n   \n   \n   \n   本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n   \n   \n","source":"_posts/进行JMeter分布式测试遇到的坑.md","raw":"---\ntitle: 进行JMeter分布式测试遇到的坑\ndate: 2023-09-21 14:47:13\ntags:\n   - 分布式测试\ncategories:\n   - JMeter分布式测试学习 \ncover: https://s2.loli.net/2023/08/30/LkrjWplvHyc1nDm.png\n---\n\n## **进行JMeter分布式测试遇到的坑**\n\n自己在使用JMeter进行分布式测试的时候，遇到了很多的坑。下面总结起来，方便以后查看。\n\n## 1.控制机端\n\n1. **执行机没有关闭防火墙**\n\n   在执行机IP+端口号设置正确的情况下，控制机在启动测试计划的时候，出现如下情况：\n\n   windows系统，下的GUI界面：\n\n   {%asset_img 48-21-23-144816.png%}\n\n   Linux系统下，出现：\n\n   {%asset_img 48-21-23-144820.png%}\n\n   如上情况说明，无法找到执行机与之进行连接，最先应想的就是执行机中的防火墙是不是没有关闭，我关闭执行机的防火墙后，以上错误消失。\n\n   CentOS7中关闭防火墙如下：\n\n   1. 查看防火墙状态命令：systemctl status firewalld.service\n\n      {%asset_img 48-21-23-144824.png%}\n\n      active(running):说明防火墙是开启状态。\n\n   2. 关闭运行的防火墙使用命令：systemctl stop firewalld.service\n\n      {%asset_img 48-21-23-144828.png%}\n\n      inactive(dead):说明防火墙已经是关闭状态。\n\n   3. 前面的方法，一旦重启操作系统，防火墙就自动开启了，该怎么设置才能永久关闭防火墙呢？\n\n      - systemctl disable firewalld.service,开机禁止防火墙服务器。\n      - systemctl enable firewalld.service,开机启动防火墙服务器。\n\n      提示：开启防火墙命令systemctl statr firewalld.service\n\n   4. **内存溢出**\n\n      在执行JMeter命令时，提示如下信息。\n\n      windows系统，提示如下：\n\n      Error occurred during initialization  of  VM Could not  reserve enough space  for  object heap errorleve1=1\n\n      Linux系统，提示如下：\n\n      {%asset_img 48-21-23-144833.png%}\n\n      提示你，虚拟机初始化期间无法为HotSpot保留足够的空间。\n\n      解决办法：打开jmeter.bat文件，查找set HEAP，把set HEAP=-Xms128m -Xmx512m修改为set HEAP=-Xms512m-Xmx1024m。\n\n      （看实际需求往大调整）\n\n## 2.执行机端\n\n1. **启动JMeter-server服务情况1**\n\n   出现如下所示：\n\n   {%asset_img 48-21-23-144837.png%}\n\n   **服务器启动异常**：Java运程方法调用抛出异常：无法启动服务。localhost.localdomain是一个本地回环地址。\n\n   **原因**：\n\n   要在远程对象上调用方法，RMI客户端首先必须从RMI注册表中检索远程存根对象。此存根对象包含服务器地址，该服务器地址稍后将在调用远程方法时用于连接到远程对象（与RMI注册表的连接和与远程对象的连接是两个完全不同的东西）。默认情况下，服务器将尝试检测自己的地址并将其传递给存根对象。不幸的是，用于检测服务器地址的算法并不总是产生有用的结果（取决于网络配置）。\n\n   通过设置RMI服务器上的系统属性Java.rmi.server.hostname,可以覆盖传递给存根对象的服务器地址。\n\n   默认情况下，RMI注册表使用端口1099.\n\n   解决方案：\n\n   **方法1：**\n\n   运行JMeter命令启动jmeter-server服务时，增加如下参数：\n\n   **./jmeter-server  -Djava.rmi.server.hostname=(执行机-本机IP)**\n\n   **方法2：**\n\n   修改jmeter-server文件：\n\n   ```properties\n   #修改RMI_HOST_DEF如下\n   RMI_HOST_DEF=-Djava.rmi.server.hostname=192.16.*.*(本机ip)\n   ```\n\n   之后执行命令./jmeter-server,来启动jmeter-server服务即可。（可方法一同理）\n\n   补充：\n\n   Linux系统中后台执行，启用jmeter-server服务：\n\n   nohup  ./jmeter-server  -Djava.rmi.server.hostname=192.168.x.x\n\n   查看jmeter-server服务是否启动成功，执行命令：ps axu | grep  jmeter\n\n   **方法3：**\n\n   也有可能是hostname与localhost不一致导致的。\n\n   当在/etc/hosts文件中进行映射时，通过localhost无法映射到一个有效的IP地址，就会出现上述问题。\n\n   操作步骤：\n\n   获取机器名称，增加一条域名与IP的映射。\n\n   1. **先在/etc/hosts里添加一行，如下所示：**\n\n      机器的实际IP地址为：192.168.134.130\n\n      {%asset_img 48-21-23-144845.png%}\n\n   2. **然后修改/etc/sysconfig/network文件里面的HOSTNAME。**\n\n      {%asset_img 48-21-23-144848.png%}\n\n      则可以访问成功。\n\n      （以上三种方式都可以试试，其实是一类问题）\n\n   3. **启动jmeter-server服务情况二**\n\n      出现如下图所示：\n\n      {%asset_img 48-21-23-144852.png%}\n\n      提示你，找不到系统指定的文件。\n\n      原因：要么拥有RMI over SSL的有效密钥库，要么禁用掉SSL。\n\n      解决方案禁用掉SSL：修改bin/jmeter.properties配置文件，server.rmi.ssl.disable=true即可解决。\n\n      提示：master和slave机器上jmeter.properties配置文件中，server.rmi.ssl.disable都改成true。\n\n   4. **启动jmeter-server服务情况三**\n\n      执行机启动jmeter-server服务，提示\"Could notfind ApacheJMeter_core.jar\"\n\n      原因：是因为JMeter没有配置环境变量。\n\n## 3.**分布式测试控制机接收不到返回结果**\n\n即：也就是关于控制机的多网卡问题。\n\n如果控制机（master）只有一个网卡，不需要关注这个问题。\n\n如果我们在练习的时候，只有一台电脑，需要启动虚拟机完成演示的时候，就需要注意这里的问题了。\n\n1. **多网卡出现的问题说明**\n\n   JMeter采取了RMI进行远程调用，如果控制机（master）有多个网卡，它只是使用其中任意一个网卡。\n\n   默认情况下，他会使用无线局域网适配器这块网卡，而虚拟机使用的网卡是以太网适配器VIware  Network Adapter VMnet8。\n\n   如下图所示：\n\n   {%asset_img 48-21-23-144857.png%}\n\n   这就导致JMeter的控制机（master）和执行机（slave）不在同一网段内，会导致无法互通，出现的情况可能是控制机无法连接执行机，或者是执行机中的测试结果无法回传给控制机。\n\n2. **多网卡出现的问题解决方式**\n\n   我的测试机情况如下：\n\n   一台windows系统主机作为控制机，IP地址如上图中所示。\n\n   在该主机上启动了三台虚拟机，IP地址分别为192.168.134.129、192.168.134.130、192.168.134.131。\n\n   1. **执行机中的配置**\n\n      修改jmeter-server文件\n\n      RMI_HOST_DEF=-Djava.rmi.server.hostname=xxx.xxx.xx.xx(执行机的IP)\n\n      当然也可以不配置，在执行机启动jmeter-server服务的时候，执行如下命令，也是一样的。\n\n      ./jmeter-server -Djava.rmi.server.hostname=xxx.xx.xx.xx\n\n   2. **控制机中的配置**\n\n      修改jmeter.bat启动文件（我是windows系统主机作为控制机）\n\n      在文件中新增如下内容：\n\n      ```properties\n      set rmi_host=-Djava.rmi.server.hostname=192.168.134.100\n      #可添加，可修改\n      set ARGS=%DUMP% %HEAP% %NEW% %SURVIVOR% %TENURING% %PERM% %DDRAW% %rmi_host%\n      ```\n\n      如下图所示：\n\n      {%asset_img 49-21-23-144901.png%}\n\n      这样就把控制机的IP网段从192.168.1.101换成了192.168.134.100\n\n      **提示：**\n\n      - 设置网段的IP不要和虚拟机中的IP冲突。\n      - 这里的配置是基于上一篇文章【JMeter分布式测试】中的配置。\n      - 如果不需要进行分布式了，不要忘记把JMeter.bat启动文件修改回来，防止做其他工作时有影响。\n\n      这样就设置后，windows系统主机就可以控制三个Linux虚拟机分布式执行脚本了。\n\n## 4.**参数化问题**\n\n1. **参数化问题说明**\n\n   - 通常，我们编写、调试脚本都是在windows机器上，而真正性能测试时，脚本几乎都在Linux下运行。\n   - 使用CSV数据文件做参数化时，是需要指定文件路径的。\n   - 这里就有个问题：window下写的文件路径到了Linux下是不正确的，导致无法正常读取CSV文件。\n   - 为了解决这个问题，下面将要讲解一个简单的万能解决方法。\n\n2. **两个前提**\n\n   - 我们的CSV文件必须在JMeter的bin目录下创建，然后再添加自己要的数据。\n   - Jmeter命令必须从bin目录下启动。\n\n3. **操作方式**\n\n   CSV数据文件设置组件中，直接按下面的格式写：\n\n   {%asset_img 49-21-23-144907.png%}\n\n   这样就可以了，只要把CSV文件上传到Linux系统JMeter下的bin目录，这个脚本就可以跨平台执行了。\n\n4. **总结**\n\n   - ${_ _p(user.dir,)} ${_ _p(file.separator,)}test.txt可以根据不同的系统，不同的JMeter安装路径。自动获取Jmeter路径，然后再获取不同系统下的文件路径分隔符，最后加上文件名称拼成文件路径。\n   - 这样就可以解决使用CSV数据文件做参数化时，跨平台导致路径不一致的问题。\n   - 重点前提：CSV文件放在JMeter的bin目录下，且到bin目录中执行JMeter命令。\n\n## 5.**其他补充**\n\n1. **修改端口号**\n\n   JMeter分布式测试的默认端口号是1099，我们可以自定义修改端口号。\n\n   再jmeter.properties配置文件中修改：\n\n   - server_port=1086:表示master机器要远程连接的端口，即：remote_host=xxx:1086.\n   - server.rmi.localport=1086:表示slave server启动显示的端口。\n\n   其实上面两者一样，修改改server_port即可。\n\n2. **查看分布式测试过程中**\n\n   在jmeter.properties配置文件中修改mode=Standard。\n\n   - 用于查看分布式测试过程中，每个压力机的测试结果。\n   - 若不启用，在运行过程中，控制器是无法实时看到压力机的结果。\n\n   提示：一般不需要开启。\n   \n   \n   \n   本篇文章来源于：[博主繁花似锦](https://www.cnblogs.com/liuyuelinfighting/p/14900019.html)\n   \n   \n","slug":"进行JMeter分布式测试遇到的坑","published":1,"updated":"2023-09-21T07:11:17.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmsu4nq20022fw48baw97i1c","content":"<h2 id=\"进行JMeter分布式测试遇到的坑\"><a href=\"#进行JMeter分布式测试遇到的坑\" class=\"headerlink\" title=\"进行JMeter分布式测试遇到的坑\"></a><strong>进行JMeter分布式测试遇到的坑</strong></h2><p>自己在使用JMeter进行分布式测试的时候，遇到了很多的坑。下面总结起来，方便以后查看。</p>\n<h2 id=\"1-控制机端\"><a href=\"#1-控制机端\" class=\"headerlink\" title=\"1.控制机端\"></a>1.控制机端</h2><ol>\n<li><p><strong>执行机没有关闭防火墙</strong></p>\n<p>在执行机IP+端口号设置正确的情况下，控制机在启动测试计划的时候，出现如下情况：</p>\n<p>windows系统，下的GUI界面：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144816.png\" class>\n\n<p>Linux系统下，出现：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144820.png\" class>\n\n<p>如上情况说明，无法找到执行机与之进行连接，最先应想的就是执行机中的防火墙是不是没有关闭，我关闭执行机的防火墙后，以上错误消失。</p>\n<p>CentOS7中关闭防火墙如下：</p>\n<ol>\n<li><p>查看防火墙状态命令：systemctl status firewalld.service</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144824.png\" class>\n\n<p>active(running):说明防火墙是开启状态。</p>\n</li>\n<li><p>关闭运行的防火墙使用命令：systemctl stop firewalld.service</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144828.png\" class>\n\n<p>inactive(dead):说明防火墙已经是关闭状态。</p>\n</li>\n<li><p>前面的方法，一旦重启操作系统，防火墙就自动开启了，该怎么设置才能永久关闭防火墙呢？</p>\n<ul>\n<li>systemctl disable firewalld.service,开机禁止防火墙服务器。</li>\n<li>systemctl enable firewalld.service,开机启动防火墙服务器。</li>\n</ul>\n<p>提示：开启防火墙命令systemctl statr firewalld.service</p>\n</li>\n<li><p><strong>内存溢出</strong></p>\n<p>在执行JMeter命令时，提示如下信息。</p>\n<p>windows系统，提示如下：</p>\n<p>Error occurred during initialization  of  VM Could not  reserve enough space  for  object heap errorleve1&#x3D;1</p>\n<p>Linux系统，提示如下：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144833.png\" class>\n\n<p>提示你，虚拟机初始化期间无法为HotSpot保留足够的空间。</p>\n<p>解决办法：打开jmeter.bat文件，查找set HEAP，把set HEAP&#x3D;-Xms128m -Xmx512m修改为set HEAP&#x3D;-Xms512m-Xmx1024m。</p>\n<p>（看实际需求往大调整）</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"2-执行机端\"><a href=\"#2-执行机端\" class=\"headerlink\" title=\"2.执行机端\"></a>2.执行机端</h2><ol>\n<li><p><strong>启动JMeter-server服务情况1</strong></p>\n<p>出现如下所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144837.png\" class>\n\n<p><strong>服务器启动异常</strong>：Java运程方法调用抛出异常：无法启动服务。localhost.localdomain是一个本地回环地址。</p>\n<p><strong>原因</strong>：</p>\n<p>要在远程对象上调用方法，RMI客户端首先必须从RMI注册表中检索远程存根对象。此存根对象包含服务器地址，该服务器地址稍后将在调用远程方法时用于连接到远程对象（与RMI注册表的连接和与远程对象的连接是两个完全不同的东西）。默认情况下，服务器将尝试检测自己的地址并将其传递给存根对象。不幸的是，用于检测服务器地址的算法并不总是产生有用的结果（取决于网络配置）。</p>\n<p>通过设置RMI服务器上的系统属性Java.rmi.server.hostname,可以覆盖传递给存根对象的服务器地址。</p>\n<p>默认情况下，RMI注册表使用端口1099.</p>\n<p>解决方案：</p>\n<p><strong>方法1：</strong></p>\n<p>运行JMeter命令启动jmeter-server服务时，增加如下参数：</p>\n<p><strong>.&#x2F;jmeter-server  -Djava.rmi.server.hostname&#x3D;(执行机-本机IP)</strong></p>\n<p><strong>方法2：</strong></p>\n<p>修改jmeter-server文件：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#修改RMI_HOST_DEF如下</span></span><br><span class=\"line\"><span class=\"attr\">RMI_HOST_DEF</span>=<span class=\"string\">-Djava.rmi.server.hostname=192.16.*.*(本机ip)</span></span><br></pre></td></tr></table></figure>\n\n<p>之后执行命令.&#x2F;jmeter-server,来启动jmeter-server服务即可。（可方法一同理）</p>\n<p>补充：</p>\n<p>Linux系统中后台执行，启用jmeter-server服务：</p>\n<p>nohup  .&#x2F;jmeter-server  -Djava.rmi.server.hostname&#x3D;192.168.x.x</p>\n<p>查看jmeter-server服务是否启动成功，执行命令：ps axu | grep  jmeter</p>\n<p><strong>方法3：</strong></p>\n<p>也有可能是hostname与localhost不一致导致的。</p>\n<p>当在&#x2F;etc&#x2F;hosts文件中进行映射时，通过localhost无法映射到一个有效的IP地址，就会出现上述问题。</p>\n<p>操作步骤：</p>\n<p>获取机器名称，增加一条域名与IP的映射。</p>\n<ol>\n<li><p><strong>先在&#x2F;etc&#x2F;hosts里添加一行，如下所示：</strong></p>\n<p>机器的实际IP地址为：192.168.134.130</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144845.png\" class>\n</li>\n<li><p><strong>然后修改&#x2F;etc&#x2F;sysconfig&#x2F;network文件里面的HOSTNAME。</strong></p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144848.png\" class>\n\n<p>则可以访问成功。</p>\n<p>（以上三种方式都可以试试，其实是一类问题）</p>\n</li>\n<li><p><strong>启动jmeter-server服务情况二</strong></p>\n<p>出现如下图所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144852.png\" class>\n\n<p>提示你，找不到系统指定的文件。</p>\n<p>原因：要么拥有RMI over SSL的有效密钥库，要么禁用掉SSL。</p>\n<p>解决方案禁用掉SSL：修改bin&#x2F;jmeter.properties配置文件，server.rmi.ssl.disable&#x3D;true即可解决。</p>\n<p>提示：master和slave机器上jmeter.properties配置文件中，server.rmi.ssl.disable都改成true。</p>\n</li>\n<li><p><strong>启动jmeter-server服务情况三</strong></p>\n<p>执行机启动jmeter-server服务，提示”Could notfind ApacheJMeter_core.jar”</p>\n<p>原因：是因为JMeter没有配置环境变量。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"3-分布式测试控制机接收不到返回结果\"><a href=\"#3-分布式测试控制机接收不到返回结果\" class=\"headerlink\" title=\"3.分布式测试控制机接收不到返回结果\"></a>3.<strong>分布式测试控制机接收不到返回结果</strong></h2><p>即：也就是关于控制机的多网卡问题。</p>\n<p>如果控制机（master）只有一个网卡，不需要关注这个问题。</p>\n<p>如果我们在练习的时候，只有一台电脑，需要启动虚拟机完成演示的时候，就需要注意这里的问题了。</p>\n<ol>\n<li><p><strong>多网卡出现的问题说明</strong></p>\n<p>JMeter采取了RMI进行远程调用，如果控制机（master）有多个网卡，它只是使用其中任意一个网卡。</p>\n<p>默认情况下，他会使用无线局域网适配器这块网卡，而虚拟机使用的网卡是以太网适配器VIware  Network Adapter VMnet8。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144857.png\" class>\n\n<p>这就导致JMeter的控制机（master）和执行机（slave）不在同一网段内，会导致无法互通，出现的情况可能是控制机无法连接执行机，或者是执行机中的测试结果无法回传给控制机。</p>\n</li>\n<li><p><strong>多网卡出现的问题解决方式</strong></p>\n<p>我的测试机情况如下：</p>\n<p>一台windows系统主机作为控制机，IP地址如上图中所示。</p>\n<p>在该主机上启动了三台虚拟机，IP地址分别为192.168.134.129、192.168.134.130、192.168.134.131。</p>\n<ol>\n<li><p><strong>执行机中的配置</strong></p>\n<p>修改jmeter-server文件</p>\n<p>RMI_HOST_DEF&#x3D;-Djava.rmi.server.hostname&#x3D;xxx.xxx.xx.xx(执行机的IP)</p>\n<p>当然也可以不配置，在执行机启动jmeter-server服务的时候，执行如下命令，也是一样的。</p>\n<p>.&#x2F;jmeter-server -Djava.rmi.server.hostname&#x3D;xxx.xx.xx.xx</p>\n</li>\n<li><p><strong>控制机中的配置</strong></p>\n<p>修改jmeter.bat启动文件（我是windows系统主机作为控制机）</p>\n<p>在文件中新增如下内容：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">set</span> <span class=\"string\">rmi_host=-Djava.rmi.server.hostname=192.168.134.100</span></span><br><span class=\"line\"><span class=\"comment\">#可添加，可修改</span></span><br><span class=\"line\"><span class=\"attr\">set</span> <span class=\"string\">ARGS=%DUMP% %HEAP% %NEW% %SURVIVOR% %TENURING% %PERM% %DDRAW% %rmi_host%</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/49-21-23-144901.png\" class>\n\n<p>这样就把控制机的IP网段从192.168.1.101换成了192.168.134.100</p>\n<p><strong>提示：</strong></p>\n<ul>\n<li>设置网段的IP不要和虚拟机中的IP冲突。</li>\n<li>这里的配置是基于上一篇文章【JMeter分布式测试】中的配置。</li>\n<li>如果不需要进行分布式了，不要忘记把JMeter.bat启动文件修改回来，防止做其他工作时有影响。</li>\n</ul>\n<p>这样就设置后，windows系统主机就可以控制三个Linux虚拟机分布式执行脚本了。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-参数化问题\"><a href=\"#4-参数化问题\" class=\"headerlink\" title=\"4.参数化问题\"></a>4.<strong>参数化问题</strong></h2><ol>\n<li><p><strong>参数化问题说明</strong></p>\n<ul>\n<li>通常，我们编写、调试脚本都是在windows机器上，而真正性能测试时，脚本几乎都在Linux下运行。</li>\n<li>使用CSV数据文件做参数化时，是需要指定文件路径的。</li>\n<li>这里就有个问题：window下写的文件路径到了Linux下是不正确的，导致无法正常读取CSV文件。</li>\n<li>为了解决这个问题，下面将要讲解一个简单的万能解决方法。</li>\n</ul>\n</li>\n<li><p><strong>两个前提</strong></p>\n<ul>\n<li>我们的CSV文件必须在JMeter的bin目录下创建，然后再添加自己要的数据。</li>\n<li>Jmeter命令必须从bin目录下启动。</li>\n</ul>\n</li>\n<li><p><strong>操作方式</strong></p>\n<p>CSV数据文件设置组件中，直接按下面的格式写：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/49-21-23-144907.png\" class>\n\n<p>这样就可以了，只要把CSV文件上传到Linux系统JMeter下的bin目录，这个脚本就可以跨平台执行了。</p>\n</li>\n<li><p><strong>总结</strong></p>\n<ul>\n<li>${_ <em>p(user.dir,)} ${</em> _p(file.separator,)}test.txt可以根据不同的系统，不同的JMeter安装路径。自动获取Jmeter路径，然后再获取不同系统下的文件路径分隔符，最后加上文件名称拼成文件路径。</li>\n<li>这样就可以解决使用CSV数据文件做参数化时，跨平台导致路径不一致的问题。</li>\n<li>重点前提：CSV文件放在JMeter的bin目录下，且到bin目录中执行JMeter命令。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"5-其他补充\"><a href=\"#5-其他补充\" class=\"headerlink\" title=\"5.其他补充\"></a>5.<strong>其他补充</strong></h2><ol>\n<li><p><strong>修改端口号</strong></p>\n<p>JMeter分布式测试的默认端口号是1099，我们可以自定义修改端口号。</p>\n<p>再jmeter.properties配置文件中修改：</p>\n<ul>\n<li>server_port&#x3D;1086:表示master机器要远程连接的端口，即：remote_host&#x3D;xxx:1086.</li>\n<li>server.rmi.localport&#x3D;1086:表示slave server启动显示的端口。</li>\n</ul>\n<p>其实上面两者一样，修改改server_port即可。</p>\n</li>\n<li><p><strong>查看分布式测试过程中</strong></p>\n<p>在jmeter.properties配置文件中修改mode&#x3D;Standard。</p>\n<ul>\n<li>用于查看分布式测试过程中，每个压力机的测试结果。</li>\n<li>若不启用，在运行过程中，控制器是无法实时看到压力机的结果。</li>\n</ul>\n<p>提示：一般不需要开启。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n</li>\n</ol>\n","site":{"data":{"_config":{"nav":{"logo":null,"display_title":true,"fixed":true},"menu":{"首页":"/  ||  fas  fa-home","标签":"/tags/  ||  fas  fa-tags || tags","分类":"/categories/  ||  fas  fa-folder-open","爱好|| fas fa-list":{"音乐":"/music/ || fas fa-music","电影":"/movies/ || fas fa-video"},"友链":"/link/ || fas fa-link","关于":"/about/ || fas fa-heart"},"highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"highlight_height_limit":false,"code_word_wrap":false,"social":null,"favicon":"/img/logo.png","avatar":{"img":"/img/sk.jpg","effect":false},"disable_top_img":false,"index_img":"/img/top.jpg","default_top_img":"/img/top.jpg","archive_img":null,"tag_img":"/img/top.jpg","tag_per_img":null,"category_img":"/img/top.jpg","category_per_img":"/img/top.jpg","cover":{"index_enable":true,"aside_enable":true,"archives_enable":true,"position":"both","default_cover":["https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"]},"error_img":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"error_404":{"enable":false,"subtitle":"Page Not Found","background":"https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png"},"post_meta":{"page":{"date_type":"created","date_format":"date","categories":true,"tags":false,"label":true},"post":{"date_type":"both","date_format":"date","categories":true,"tags":true,"label":true}},"index_post_content":{"method":3,"length":500},"anchor":{"button":{"enable":false,"always_show":false,"icon":null},"auto_update":false},"photofigcaption":false,"copy":{"enable":true,"copyright":{"enable":false,"limit_count":50}},"toc":{"post":true,"page":true,"number":true,"expand":false,"style_simple":false,"scroll_percent":true},"post_copyright":{"enable":true,"decode":false,"author_href":null,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"reward":{"enable":false,"QR_code":null},"post_edit":{"enable":false,"url":null},"related_post":{"enable":true,"limit":6,"date_type":"created"},"post_pagination":1,"noticeOutdate":{"enable":false,"style":"flat","limit_day":500,"position":"top","message_prev":"It has been","message_next":"days since the last update, the content of the article may be outdated."},"footer":{"owner":{"enable":true,"since":2020,"custom_text":"Hi, welcome to my <a href=\"https://soulking.site/\">blog</a>!","copyright":true}},"aside":{"enable":true,"hide":false,"button":true,"mobile":true,"position":"right","display":{"archive":true,"tag":true,"category":true},"card_author":{"enable":true,"description":null,"button":{"enable":true,"icon":"fab fa-github","text":"Follow Me","link":"https://github.com/Joker2020-cmd/Joker2020-cmd.Github.io"}},"card_announcement":{"enable":true,"content":"努力更新中...."},"card_recent_post":{"enable":true,"limit":5,"sort":"date","sort_order":null},"card_categories":{"enable":true,"limit":8,"expand":"none","sort_order":null},"card_tags":{"enable":true,"limit":40,"color":true,"orderby":"random","order":1,"sort_order":null},"card_archives":{"enable":true,"type":"monthly","format":"MMMM YYYY","order":-1,"limit":8,"sort_order":null},"card_webinfo":{"enable":true,"post_count":true,"last_push_date":true,"sort_order":null}},"busuanzi":{"site_uv":true,"site_pv":true,"page_pv":true},"runtimeshow":{"enable":true,"publish_date":"8/27/2023 00:00:00"},"newest_comments":{"enable":false,"sort_order":null,"limit":6,"storage":10,"avatar":true},"translate":{"enable":false,"default":"繁","defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},"readmode":true,"darkmode":{"enable":true,"button":true,"autoChangeMode":false,"start":null,"end":null},"rightside_scroll_percent":false,"rightside_item_order":{"enable":false,"hide":null,"show":null},"mathjax":{"enable":false,"per_page":false},"katex":{"enable":false,"per_page":false,"hide_scrollbar":true},"algolia_search":{"enable":false,"hits":{"per_page":6}},"local_search":{"enable":false,"preload":false,"top_n_per_article":1,"unescape":false,"CDN":null},"docsearch":{"enable":false,"appId":null,"apiKey":null,"indexName":null,"option":null},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":"facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link"},"comments":{"use":null,"text":true,"lazyload":false,"count":false,"card_post_count":false},"disqus":{"shortname":null,"apikey":null},"disqusjs":{"shortname":null,"apikey":null,"option":null},"livere":{"uid":null},"gitalk":{"client_id":null,"client_secret":null,"repo":null,"owner":null,"admin":null,"option":null},"valine":{"appId":null,"appKey":null,"avatar":"monsterid","serverURLs":null,"bg":null,"visitor":false,"option":null},"waline":{"serverURL":null,"bg":null,"pageview":false,"option":null},"utterances":{"repo":null,"issue_term":"pathname","light_theme":"github-light","dark_theme":"photon-dark"},"facebook_comments":{"app_id":null,"user_id":null,"pageSize":10,"order_by":"social","lang":"zh_TW"},"twikoo":{"envId":null,"region":null,"visitor":false,"option":null},"giscus":{"repo":null,"repo_id":null,"category_id":null,"theme":{"light":"light","dark":"dark"},"option":null},"remark42":{"host":null,"siteId":null,"option":null},"artalk":{"server":null,"site":null,"visitor":false,"option":null},"chat_btn":false,"chat_hide_show":false,"chatra":{"enable":false,"id":null},"tidio":{"enable":false,"public_key":null},"daovoice":{"enable":false,"app_id":null},"crisp":{"enable":false,"website_id":null},"messenger":{"enable":false,"pageID":null,"lang":"zh_TW"},"baidu_analytics":null,"google_analytics":null,"cloudflare_analytics":null,"microsoft_clarity":null,"google_adsense":{"enable":false,"auto_ads":true,"js":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js","client":null,"enable_page_level_ads":true},"site_verification":null,"index_site_info_top":null,"index_top_img_height":null,"category_ui":null,"tag_ui":null,"background":null,"footer_bg":true,"mask":{"header":true,"footer":true},"rightside-bottom":null,"enter_transitions":true,"activate_power_mode":{"enable":false,"colorful":true,"shake":true,"mobile":false},"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false,"mobile":false},"canvas_fluttering_ribbon":{"enable":true,"mobile":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"mobile":false},"fireworks":{"enable":false,"zIndex":9999,"mobile":false},"click_heart":{"enable":false,"mobile":false},"ClickShowText":{"enable":true,"text":["I","LOVE","YOU"],"fontSize":"15px","random":false,"mobile":false},"display_mode":"light","beautify":{"enable":true,"field":"site","title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"global-font-size":null,"code-font-size":null,"font-family":null,"code-font-family":null},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web&display=swap","font-family":"Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif"},"hr_icon":{"enable":true,"icon":null,"icon-top":null},"subtitle":{"enable":true,"effect":true,"startDelay":300,"typeSpeed":150,"backSpeed":50,"loop":true,"source":false,"sub":["爱和生命共逝时&#44;时间会永远停留&#44;就是它的意义"]},"preloader":{"enable":false,"source":1,"pace_css_url":null},"wordcount":{"enable":false,"post_wordcount":true,"min2read":true,"total_wordcount":true},"medium_zoom":false,"fancybox":true,"abcjs":{"enable":false,"per_page":true},"mermaid":{"enable":false,"theme":{"light":"default","dark":"dark"}},"note":{"style":"flat","icons":false,"border_radius":3,"light_bg_offset":0},"pjax":{"enable":false,"exclude":null},"aplayerInject":{"enable":false,"per_page":true},"snackbar":{"enable":false,"position":"bottom-left","bg_light":"#49b1f5","bg_dark":"#1f1f1f"},"instantpage":true,"pangu":{"enable":false,"field":"site"},"lazyload":{"enable":true,"field":"site","placeholder":null,"blur":false},"Open_Graph_meta":{"enable":true,"option":null},"css_prefix":true,"inject":{"head":null,"bottom":null},"CDN":{"internal_provider":"local","third_party_provider":"jsdelivr","version":false,"custom_format":null,"option":null}}}},"cover_type":"img","excerpt":"","more":"<h2 id=\"进行JMeter分布式测试遇到的坑\"><a href=\"#进行JMeter分布式测试遇到的坑\" class=\"headerlink\" title=\"进行JMeter分布式测试遇到的坑\"></a><strong>进行JMeter分布式测试遇到的坑</strong></h2><p>自己在使用JMeter进行分布式测试的时候，遇到了很多的坑。下面总结起来，方便以后查看。</p>\n<h2 id=\"1-控制机端\"><a href=\"#1-控制机端\" class=\"headerlink\" title=\"1.控制机端\"></a>1.控制机端</h2><ol>\n<li><p><strong>执行机没有关闭防火墙</strong></p>\n<p>在执行机IP+端口号设置正确的情况下，控制机在启动测试计划的时候，出现如下情况：</p>\n<p>windows系统，下的GUI界面：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144816.png\" class>\n\n<p>Linux系统下，出现：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144820.png\" class>\n\n<p>如上情况说明，无法找到执行机与之进行连接，最先应想的就是执行机中的防火墙是不是没有关闭，我关闭执行机的防火墙后，以上错误消失。</p>\n<p>CentOS7中关闭防火墙如下：</p>\n<ol>\n<li><p>查看防火墙状态命令：systemctl status firewalld.service</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144824.png\" class>\n\n<p>active(running):说明防火墙是开启状态。</p>\n</li>\n<li><p>关闭运行的防火墙使用命令：systemctl stop firewalld.service</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144828.png\" class>\n\n<p>inactive(dead):说明防火墙已经是关闭状态。</p>\n</li>\n<li><p>前面的方法，一旦重启操作系统，防火墙就自动开启了，该怎么设置才能永久关闭防火墙呢？</p>\n<ul>\n<li>systemctl disable firewalld.service,开机禁止防火墙服务器。</li>\n<li>systemctl enable firewalld.service,开机启动防火墙服务器。</li>\n</ul>\n<p>提示：开启防火墙命令systemctl statr firewalld.service</p>\n</li>\n<li><p><strong>内存溢出</strong></p>\n<p>在执行JMeter命令时，提示如下信息。</p>\n<p>windows系统，提示如下：</p>\n<p>Error occurred during initialization  of  VM Could not  reserve enough space  for  object heap errorleve1&#x3D;1</p>\n<p>Linux系统，提示如下：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144833.png\" class>\n\n<p>提示你，虚拟机初始化期间无法为HotSpot保留足够的空间。</p>\n<p>解决办法：打开jmeter.bat文件，查找set HEAP，把set HEAP&#x3D;-Xms128m -Xmx512m修改为set HEAP&#x3D;-Xms512m-Xmx1024m。</p>\n<p>（看实际需求往大调整）</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"2-执行机端\"><a href=\"#2-执行机端\" class=\"headerlink\" title=\"2.执行机端\"></a>2.执行机端</h2><ol>\n<li><p><strong>启动JMeter-server服务情况1</strong></p>\n<p>出现如下所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144837.png\" class>\n\n<p><strong>服务器启动异常</strong>：Java运程方法调用抛出异常：无法启动服务。localhost.localdomain是一个本地回环地址。</p>\n<p><strong>原因</strong>：</p>\n<p>要在远程对象上调用方法，RMI客户端首先必须从RMI注册表中检索远程存根对象。此存根对象包含服务器地址，该服务器地址稍后将在调用远程方法时用于连接到远程对象（与RMI注册表的连接和与远程对象的连接是两个完全不同的东西）。默认情况下，服务器将尝试检测自己的地址并将其传递给存根对象。不幸的是，用于检测服务器地址的算法并不总是产生有用的结果（取决于网络配置）。</p>\n<p>通过设置RMI服务器上的系统属性Java.rmi.server.hostname,可以覆盖传递给存根对象的服务器地址。</p>\n<p>默认情况下，RMI注册表使用端口1099.</p>\n<p>解决方案：</p>\n<p><strong>方法1：</strong></p>\n<p>运行JMeter命令启动jmeter-server服务时，增加如下参数：</p>\n<p><strong>.&#x2F;jmeter-server  -Djava.rmi.server.hostname&#x3D;(执行机-本机IP)</strong></p>\n<p><strong>方法2：</strong></p>\n<p>修改jmeter-server文件：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#修改RMI_HOST_DEF如下</span></span><br><span class=\"line\"><span class=\"attr\">RMI_HOST_DEF</span>=<span class=\"string\">-Djava.rmi.server.hostname=192.16.*.*(本机ip)</span></span><br></pre></td></tr></table></figure>\n\n<p>之后执行命令.&#x2F;jmeter-server,来启动jmeter-server服务即可。（可方法一同理）</p>\n<p>补充：</p>\n<p>Linux系统中后台执行，启用jmeter-server服务：</p>\n<p>nohup  .&#x2F;jmeter-server  -Djava.rmi.server.hostname&#x3D;192.168.x.x</p>\n<p>查看jmeter-server服务是否启动成功，执行命令：ps axu | grep  jmeter</p>\n<p><strong>方法3：</strong></p>\n<p>也有可能是hostname与localhost不一致导致的。</p>\n<p>当在&#x2F;etc&#x2F;hosts文件中进行映射时，通过localhost无法映射到一个有效的IP地址，就会出现上述问题。</p>\n<p>操作步骤：</p>\n<p>获取机器名称，增加一条域名与IP的映射。</p>\n<ol>\n<li><p><strong>先在&#x2F;etc&#x2F;hosts里添加一行，如下所示：</strong></p>\n<p>机器的实际IP地址为：192.168.134.130</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144845.png\" class>\n</li>\n<li><p><strong>然后修改&#x2F;etc&#x2F;sysconfig&#x2F;network文件里面的HOSTNAME。</strong></p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144848.png\" class>\n\n<p>则可以访问成功。</p>\n<p>（以上三种方式都可以试试，其实是一类问题）</p>\n</li>\n<li><p><strong>启动jmeter-server服务情况二</strong></p>\n<p>出现如下图所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144852.png\" class>\n\n<p>提示你，找不到系统指定的文件。</p>\n<p>原因：要么拥有RMI over SSL的有效密钥库，要么禁用掉SSL。</p>\n<p>解决方案禁用掉SSL：修改bin&#x2F;jmeter.properties配置文件，server.rmi.ssl.disable&#x3D;true即可解决。</p>\n<p>提示：master和slave机器上jmeter.properties配置文件中，server.rmi.ssl.disable都改成true。</p>\n</li>\n<li><p><strong>启动jmeter-server服务情况三</strong></p>\n<p>执行机启动jmeter-server服务，提示”Could notfind ApacheJMeter_core.jar”</p>\n<p>原因：是因为JMeter没有配置环境变量。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"3-分布式测试控制机接收不到返回结果\"><a href=\"#3-分布式测试控制机接收不到返回结果\" class=\"headerlink\" title=\"3.分布式测试控制机接收不到返回结果\"></a>3.<strong>分布式测试控制机接收不到返回结果</strong></h2><p>即：也就是关于控制机的多网卡问题。</p>\n<p>如果控制机（master）只有一个网卡，不需要关注这个问题。</p>\n<p>如果我们在练习的时候，只有一台电脑，需要启动虚拟机完成演示的时候，就需要注意这里的问题了。</p>\n<ol>\n<li><p><strong>多网卡出现的问题说明</strong></p>\n<p>JMeter采取了RMI进行远程调用，如果控制机（master）有多个网卡，它只是使用其中任意一个网卡。</p>\n<p>默认情况下，他会使用无线局域网适配器这块网卡，而虚拟机使用的网卡是以太网适配器VIware  Network Adapter VMnet8。</p>\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/48-21-23-144857.png\" class>\n\n<p>这就导致JMeter的控制机（master）和执行机（slave）不在同一网段内，会导致无法互通，出现的情况可能是控制机无法连接执行机，或者是执行机中的测试结果无法回传给控制机。</p>\n</li>\n<li><p><strong>多网卡出现的问题解决方式</strong></p>\n<p>我的测试机情况如下：</p>\n<p>一台windows系统主机作为控制机，IP地址如上图中所示。</p>\n<p>在该主机上启动了三台虚拟机，IP地址分别为192.168.134.129、192.168.134.130、192.168.134.131。</p>\n<ol>\n<li><p><strong>执行机中的配置</strong></p>\n<p>修改jmeter-server文件</p>\n<p>RMI_HOST_DEF&#x3D;-Djava.rmi.server.hostname&#x3D;xxx.xxx.xx.xx(执行机的IP)</p>\n<p>当然也可以不配置，在执行机启动jmeter-server服务的时候，执行如下命令，也是一样的。</p>\n<p>.&#x2F;jmeter-server -Djava.rmi.server.hostname&#x3D;xxx.xx.xx.xx</p>\n</li>\n<li><p><strong>控制机中的配置</strong></p>\n<p>修改jmeter.bat启动文件（我是windows系统主机作为控制机）</p>\n<p>在文件中新增如下内容：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">set</span> <span class=\"string\">rmi_host=-Djava.rmi.server.hostname=192.168.134.100</span></span><br><span class=\"line\"><span class=\"comment\">#可添加，可修改</span></span><br><span class=\"line\"><span class=\"attr\">set</span> <span class=\"string\">ARGS=%DUMP% %HEAP% %NEW% %SURVIVOR% %TENURING% %PERM% %DDRAW% %rmi_host%</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/49-21-23-144901.png\" class>\n\n<p>这样就把控制机的IP网段从192.168.1.101换成了192.168.134.100</p>\n<p><strong>提示：</strong></p>\n<ul>\n<li>设置网段的IP不要和虚拟机中的IP冲突。</li>\n<li>这里的配置是基于上一篇文章【JMeter分布式测试】中的配置。</li>\n<li>如果不需要进行分布式了，不要忘记把JMeter.bat启动文件修改回来，防止做其他工作时有影响。</li>\n</ul>\n<p>这样就设置后，windows系统主机就可以控制三个Linux虚拟机分布式执行脚本了。</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-参数化问题\"><a href=\"#4-参数化问题\" class=\"headerlink\" title=\"4.参数化问题\"></a>4.<strong>参数化问题</strong></h2><ol>\n<li><p><strong>参数化问题说明</strong></p>\n<ul>\n<li>通常，我们编写、调试脚本都是在windows机器上，而真正性能测试时，脚本几乎都在Linux下运行。</li>\n<li>使用CSV数据文件做参数化时，是需要指定文件路径的。</li>\n<li>这里就有个问题：window下写的文件路径到了Linux下是不正确的，导致无法正常读取CSV文件。</li>\n<li>为了解决这个问题，下面将要讲解一个简单的万能解决方法。</li>\n</ul>\n</li>\n<li><p><strong>两个前提</strong></p>\n<ul>\n<li>我们的CSV文件必须在JMeter的bin目录下创建，然后再添加自己要的数据。</li>\n<li>Jmeter命令必须从bin目录下启动。</li>\n</ul>\n</li>\n<li><p><strong>操作方式</strong></p>\n<p>CSV数据文件设置组件中，直接按下面的格式写：</p>\n<img src=\"/2023/09/21/%E8%BF%9B%E8%A1%8CJMeter%E5%88%86%E5%B8%83%E5%BC%8F%E6%B5%8B%E8%AF%95%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/49-21-23-144907.png\" class>\n\n<p>这样就可以了，只要把CSV文件上传到Linux系统JMeter下的bin目录，这个脚本就可以跨平台执行了。</p>\n</li>\n<li><p><strong>总结</strong></p>\n<ul>\n<li>${_ <em>p(user.dir,)} ${</em> _p(file.separator,)}test.txt可以根据不同的系统，不同的JMeter安装路径。自动获取Jmeter路径，然后再获取不同系统下的文件路径分隔符，最后加上文件名称拼成文件路径。</li>\n<li>这样就可以解决使用CSV数据文件做参数化时，跨平台导致路径不一致的问题。</li>\n<li>重点前提：CSV文件放在JMeter的bin目录下，且到bin目录中执行JMeter命令。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"5-其他补充\"><a href=\"#5-其他补充\" class=\"headerlink\" title=\"5.其他补充\"></a>5.<strong>其他补充</strong></h2><ol>\n<li><p><strong>修改端口号</strong></p>\n<p>JMeter分布式测试的默认端口号是1099，我们可以自定义修改端口号。</p>\n<p>再jmeter.properties配置文件中修改：</p>\n<ul>\n<li>server_port&#x3D;1086:表示master机器要远程连接的端口，即：remote_host&#x3D;xxx:1086.</li>\n<li>server.rmi.localport&#x3D;1086:表示slave server启动显示的端口。</li>\n</ul>\n<p>其实上面两者一样，修改改server_port即可。</p>\n</li>\n<li><p><strong>查看分布式测试过程中</strong></p>\n<p>在jmeter.properties配置文件中修改mode&#x3D;Standard。</p>\n<ul>\n<li>用于查看分布式测试过程中，每个压力机的测试结果。</li>\n<li>若不启用，在运行过程中，控制器是无法实时看到压力机的结果。</li>\n</ul>\n<p>提示：一般不需要开启。</p>\n<p>本篇文章来源于：<a href=\"https://www.cnblogs.com/liuyuelinfighting/p/14900019.html\">博主繁花似锦</a></p>\n</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/Appium基础学习/image-20230720162127440.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230720162127440.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230720162142889.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230720162142889.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230807134137933.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230807134137933.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230815164033500.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230815164033500.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822093033212.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822093033212.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822093619228.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822093619228.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822093814089.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822093814089.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822095942818.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822095942818.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822100211467.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822100211467.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822101225757.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822101225757.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822101402155.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822101402155.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822101641447.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822101641447.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822101739507.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822101739507.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822101848241.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822101848241.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822102038461.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822102038461.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822102209820.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822102209820.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822103602071.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822103602071.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822104412007.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822104412007.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822105454030.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822105454030.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822105546386.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822105546386.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822105722220.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822105722220.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822111942478.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822111942478.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822112351826.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822112351826.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822112448330.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822112448330.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822112543774.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822112543774.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822112903927.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822112903927.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822112923800.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822112923800.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822113205328.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822113205328.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822113541137.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822113541137.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822114808809.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822114808809.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822133904939.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822133904939.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822134726602.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822134726602.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822134908939.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822134908939.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822134952072.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822134952072.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822135027681.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822135027681.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822135321766.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822135321766.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822135531324.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822135531324.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822135548543.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822135548543.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822135756380.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822135756380.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822135855228.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822135855228.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822140101952.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822140101952.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822142646593.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822142646593.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822144556161.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822144556161.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822145022696.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822145022696.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822145325532.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822145325532.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822150817186.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822150817186.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822151124832.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822151124832.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822151338617.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822151338617.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822151416804.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822151416804.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822151524633.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822151524633.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822151841755.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822151841755.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822152006781.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822152006781.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822152114053.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822152114053.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822152535217.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822152535217.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822152632759.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822152632759.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822155516893.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822155516893.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822161734990.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822161734990.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822162016028.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822162016028.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822162337100.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822162337100.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822162910046.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822162910046.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822163042684.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822163042684.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230822163521210.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230822163521210.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230823111152488.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230823111152488.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230825111551346.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230825111551346.png","modified":1,"renderable":1},{"_id":"source/_posts/Appium基础学习/image-20230825113322301.png","post":"clmsu4no50001fw48dlp26aib","slug":"image-20230825113322301.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135622.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135622.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135628.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135628.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135633.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135633.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135638.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135638.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135643.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135643.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135648.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135648.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/56-19-23-135653.png","post":"clmsu4noc0003fw484h370qn5","slug":"56-19-23-135653.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy介绍/57-19-23-135700.png","post":"clmsu4noc0003fw484h370qn5","slug":"57-19-23-135700.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/03-19-23-140352.png","post":"clmsu4noi0007fw483mal50vw","slug":"03-19-23-140352.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/03-19-23-140359.png","post":"clmsu4noi0007fw483mal50vw","slug":"03-19-23-140359.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140404.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140404.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140408.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140408.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140415.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140415.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140418.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140418.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140423.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140423.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140427.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140427.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140432.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140432.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140436.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140436.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140439.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140439.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140445.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140445.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/04-19-23-140455.png","post":"clmsu4noi0007fw483mal50vw","slug":"04-19-23-140455.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/05-19-23-140501.png","post":"clmsu4noi0007fw483mal50vw","slug":"05-19-23-140501.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/05-19-23-140507.png","post":"clmsu4noi0007fw483mal50vw","slug":"05-19-23-140507.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/05-19-23-140515.png","post":"clmsu4noi0007fw483mal50vw","slug":"05-19-23-140515.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/05-19-23-140522.png","post":"clmsu4noi0007fw483mal50vw","slug":"05-19-23-140522.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/05-19-23-140532.png","post":"clmsu4noi0007fw483mal50vw","slug":"05-19-23-140532.png","modified":1,"renderable":1},{"_id":"source/_posts/Badboy录制/05-19-23-140545.png","post":"clmsu4noi0007fw483mal50vw","slug":"05-19-23-140545.png","modified":1,"renderable":1},{"_id":"source/_posts/ChatGTP搭建/23-11-23-132325.png","post":"clmsu4nok0009fw485n35hrpr","slug":"23-11-23-132325.png","modified":1,"renderable":1},{"_id":"source/_posts/ChatGTP搭建/23-11-23-132353.png","post":"clmsu4nok0009fw485n35hrpr","slug":"23-11-23-132353.png","modified":1,"renderable":1},{"_id":"source/_posts/ChatGTP搭建/24-11-23-132424.png","post":"clmsu4nok0009fw485n35hrpr","slug":"24-11-23-132424.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/07-21-23-150713.png","post":"clmsu4nop000gfw488pt173fa","slug":"07-21-23-150713.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/40-21-23-144055.png","post":"clmsu4nop000gfw488pt173fa","slug":"40-21-23-144055.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144110.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144110.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144117.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144117.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144128.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144128.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144140.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144140.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144146.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144146.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144150.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144150.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/41-21-23-144155.png","post":"clmsu4nop000gfw488pt173fa","slug":"41-21-23-144155.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter分布式测试/42-21-23-144200.png","post":"clmsu4nop000gfw488pt173fa","slug":"42-21-23-144200.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter学习/18-30-23-131804.png","post":"clmsu4nos000ifw4844ka8xp5","slug":"18-30-23-131804.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173335.png","post":"clmsu4noz000nfw48hxxd34b3","slug":"33-05-23-173335.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173341.png","post":"clmsu4noz000nfw48hxxd34b3","slug":"33-05-23-173341.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173348.png","post":"clmsu4noz000nfw48hxxd34b3","slug":"33-05-23-173348.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter常用目录介绍-1/33-05-23-173356.png","post":"clmsu4noz000nfw48hxxd34b3","slug":"33-05-23-173356.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter常用目录介绍-1/34-05-23-173400.png","post":"clmsu4noz000nfw48hxxd34b3","slug":"34-05-23-173400.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter常用目录介绍-1/34-05-23-173405.png","post":"clmsu4noz000nfw48hxxd34b3","slug":"34-05-23-173405.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/40-05-23-174049.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"40-05-23-174049.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/40-05-23-174059.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"40-05-23-174059.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174105.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174105.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174109.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174109.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174115.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174115.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174120.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174120.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174125.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174125.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174130.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174130.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174143.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174143.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter插件管理-1/41-05-23-174149.png","post":"clmsu4np2000pfw486s7y7fv3","slug":"41-05-23-174149.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/19-05-23-171931.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"19-05-23-171931.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/19-05-23-171942.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"19-05-23-171942.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/19-05-23-171950.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"19-05-23-171950.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172000.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172000.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172014.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172014.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172025.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172025.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172032.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172032.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172037.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172037.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172042.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172042.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172047.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172047.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/20-05-23-172055.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"20-05-23-172055.png","modified":1,"renderable":1},{"_id":"source/_posts/JMeter的安装和启动-1/21-05-23-172103.png","post":"clmsu4np7000tfw48dwecbjdm","slug":"21-05-23-172103.png","modified":1,"renderable":1},{"_id":"source/_posts/接口测试学习/01-07-23-110137.png","post":"clmsu4npz001yfw48h8pvb2lo","slug":"01-07-23-110137.png","modified":1,"renderable":1},{"_id":"source/_posts/接口测试学习/29-07-23-112918.png","post":"clmsu4npz001yfw48h8pvb2lo","slug":"29-07-23-112918.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144816.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144816.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144820.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144820.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144824.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144824.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144828.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144828.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144833.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144833.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144837.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144837.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144845.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144845.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144848.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144848.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144852.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144852.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/48-21-23-144857.png","post":"clmsu4nq20022fw48baw97i1c","slug":"48-21-23-144857.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/49-21-23-144901.png","post":"clmsu4nq20022fw48baw97i1c","slug":"49-21-23-144901.png","modified":1,"renderable":1},{"_id":"source/_posts/进行JMeter分布式测试遇到的坑/49-21-23-144907.png","post":"clmsu4nq20022fw48baw97i1c","slug":"49-21-23-144907.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"clmsu4no50001fw48dlp26aib","category_id":"clmsu4nof0004fw48gye9cenz","_id":"clmsu4nou000jfw48gj7t71t6"},{"post_id":"clmsu4noc0003fw484h370qn5","category_id":"clmsu4non000cfw4891yodt0t","_id":"clmsu4np6000rfw48a46ae2pi"},{"post_id":"clmsu4noi0007fw483mal50vw","category_id":"clmsu4non000cfw4891yodt0t","_id":"clmsu4npb000wfw48cmhb6ru5"},{"post_id":"clmsu4nok0009fw485n35hrpr","category_id":"clmsu4np4000qfw48ckhp6bqx","_id":"clmsu4npf0011fw48fs8khz73"},{"post_id":"clmsu4nom000bfw48fkywhzo5","category_id":"clmsu4npb000xfw484fch6r3z","_id":"clmsu4nph0014fw482b6m71zf"},{"post_id":"clmsu4nop000gfw488pt173fa","category_id":"clmsu4npg0012fw48ab5xh6pn","_id":"clmsu4npi0019fw487s5j9ume"},{"post_id":"clmsu4nos000ifw4844ka8xp5","category_id":"clmsu4nph0015fw48a1jh16br","_id":"clmsu4npk001efw4831s62byk"},{"post_id":"clmsu4noz000nfw48hxxd34b3","category_id":"clmsu4nph0015fw48a1jh16br","_id":"clmsu4npl001ifw4883t84n2p"},{"post_id":"clmsu4np2000pfw486s7y7fv3","category_id":"clmsu4nph0015fw48a1jh16br","_id":"clmsu4npp001mfw480ohl7bt2"},{"post_id":"clmsu4np7000tfw48dwecbjdm","category_id":"clmsu4nph0015fw48a1jh16br","_id":"clmsu4npr001pfw4814jl419c"},{"post_id":"clmsu4np9000vfw481oqeebsd","category_id":"clmsu4npp001lfw4806vzam5t","_id":"clmsu4nps001tfw486ul82k6k"},{"post_id":"clmsu4npe000zfw4884g408od","category_id":"clmsu4npr001qfw482joobtxq","_id":"clmsu4npt001wfw488ybpfsqy"},{"post_id":"clmsu4nq0001zfw48en9jcpqs","category_id":"clmsu4npp001lfw4806vzam5t","_id":"clmsu4nq60024fw48d3o138jr"},{"post_id":"clmsu4nq20022fw48baw97i1c","category_id":"clmsu4npg0012fw48ab5xh6pn","_id":"clmsu4nq60026fw489z45714d"},{"post_id":"clmsu4npz001yfw48h8pvb2lo","category_id":"clmsu4nq10020fw48brdj5plx","_id":"clmsu4nq70027fw480jg739xb"}],"PostTag":[{"post_id":"clmsu4no50001fw48dlp26aib","tag_id":"clmsu4noh0005fw48e6e53a2u","_id":"clmsu4noo000efw484d6obpae"},{"post_id":"clmsu4noc0003fw484h370qn5","tag_id":"clmsu4non000dfw48ctajca2w","_id":"clmsu4np1000ofw4881em619a"},{"post_id":"clmsu4noi0007fw483mal50vw","tag_id":"clmsu4non000dfw48ctajca2w","_id":"clmsu4np9000ufw48czgzceqb"},{"post_id":"clmsu4nok0009fw485n35hrpr","tag_id":"clmsu4np6000sfw48fqqadzy3","_id":"clmsu4npf0010fw48g5nwd9b5"},{"post_id":"clmsu4nom000bfw48fkywhzo5","tag_id":"clmsu4npc000yfw48bh1s6qd5","_id":"clmsu4npi0017fw48h1j91r0r"},{"post_id":"clmsu4nom000bfw48fkywhzo5","tag_id":"clmsu4npg0013fw481xescox9","_id":"clmsu4npi0018fw48cq3shz7s"},{"post_id":"clmsu4nop000gfw488pt173fa","tag_id":"clmsu4nph0016fw48gfxh41tx","_id":"clmsu4npj001cfw485yeb42km"},{"post_id":"clmsu4nos000ifw4844ka8xp5","tag_id":"clmsu4npi001bfw489arg0z5e","_id":"clmsu4npl001gfw489d7k2njb"},{"post_id":"clmsu4noz000nfw48hxxd34b3","tag_id":"clmsu4npi001bfw489arg0z5e","_id":"clmsu4npo001kfw4884orezp1"},{"post_id":"clmsu4np2000pfw486s7y7fv3","tag_id":"clmsu4npi001bfw489arg0z5e","_id":"clmsu4npq001ofw482bkgczdq"},{"post_id":"clmsu4np7000tfw48dwecbjdm","tag_id":"clmsu4npi001bfw489arg0z5e","_id":"clmsu4nps001sfw484y01f3ep"},{"post_id":"clmsu4np9000vfw481oqeebsd","tag_id":"clmsu4npr001rfw48da9q4fbn","_id":"clmsu4npt001vfw48amuj3b0t"},{"post_id":"clmsu4npe000zfw4884g408od","tag_id":"clmsu4nps001ufw4805tsgyu0","_id":"clmsu4npt001xfw48gub07c3g"},{"post_id":"clmsu4nq20022fw48baw97i1c","tag_id":"clmsu4nph0016fw48gfxh41tx","_id":"clmsu4nq60023fw481hrjfnc4"},{"post_id":"clmsu4npz001yfw48h8pvb2lo","tag_id":"clmsu4nq20021fw4806yvbn14","_id":"clmsu4nq70029fw4815ft87d7"},{"post_id":"clmsu4npz001yfw48h8pvb2lo","tag_id":"clmsu4nq60025fw488pub3at1","_id":"clmsu4nq7002afw48cb1ac88j"},{"post_id":"clmsu4nq0001zfw48en9jcpqs","tag_id":"clmsu4nq70028fw48a9fca8qy","_id":"clmsu4nq8002bfw480oeofp5m"},{"post_id":"clmsu4nq0001zfw48en9jcpqs","tag_id":"clmsu4npr001rfw48da9q4fbn","_id":"clmsu4nq8002cfw48bvfn6vq4"}],"Tag":[{"name":"Appium学习","_id":"clmsu4noh0005fw48e6e53a2u"},{"name":"Badboy","_id":"clmsu4non000dfw48ctajca2w"},{"name":"ChatGTP","_id":"clmsu4np6000sfw48fqqadzy3"},{"name":"Git","_id":"clmsu4npc000yfw48bh1s6qd5"},{"name":"学习","_id":"clmsu4npg0013fw481xescox9"},{"name":"分布式测试","_id":"clmsu4nph0016fw48gfxh41tx"},{"name":"JMeter","_id":"clmsu4npi001bfw489arg0z5e"},{"name":"Nginx","_id":"clmsu4npr001rfw48da9q4fbn"},{"name":"Selenium","_id":"clmsu4nps001ufw4805tsgyu0"},{"name":"request","_id":"clmsu4nq20021fw4806yvbn14"},{"name":"接口测试","_id":"clmsu4nq60025fw488pub3at1"},{"name":"服务器部署系统","_id":"clmsu4nq70028fw48a9fca8qy"}]}}